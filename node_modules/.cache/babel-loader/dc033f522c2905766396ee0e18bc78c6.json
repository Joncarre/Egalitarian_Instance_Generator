{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport logo from '../../images/logo.png';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  // MetaMask Wallet Connection\n  const location = useLocation();\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [url, setURL] = useState(location.pathname);\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  useEffect(() => {\n    setURL(location.pathname);\n    console.log(url);\n  }, [location.pathname]);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      scrollNav: scrollNav,\n      children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          to: \"/\",\n          onClick: toggleHome,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n          onClick: toggle,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"dapp\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              children: \"\\xD0App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"how_it_works\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              children: \"How it works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"3sat\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              children: \"3-SAT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              to: \"chainlink\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              children: \"Chainlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n          children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n            to: \"\",\n            id: \"walletButton\",\n            onClick: connectWalletPressed,\n            children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"56evTFW/MT26v2wqOWq22c5hlAY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Navbar/index.js"],"names":["React","useState","useEffect","useLocation","FaBars","animateScroll","scroll","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","logo","connectWallet","getCurrentWalletConnected","Navbar","toggle","location","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","url","setURL","pathname","address","addWalletListener","connectWalletPressed","walletResponse","window","ethereum","on","accounts","length","scrollNav","setScrollNav","changeNav","scrollY","addEventListener","console","log","toggleHome","scrollToTop","String","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport logo from '../../images/logo.png';\r\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\r\n\r\nconst Navbar = ({ toggle }) => {\r\n  // MetaMask Wallet Connection\r\n  const location = useLocation();\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [url, setURL] = useState(location.pathname);\r\n\r\n  useEffect(async () => {\r\n    const { address, status } = await getCurrentWalletConnected();\r\n    setWallet(address)\r\n    setStatus(status);\r\n\r\n    addWalletListener();\r\n  }, []);\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  const [scrollNav, setScrollNav] = useState(false)\r\n\r\n  const changeNav = () => {\r\n    if (window.scrollY >= 80) {\r\n      setScrollNav(true)\r\n    } else {\r\n      setScrollNav(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', changeNav)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setURL(location.pathname);\r\n    console.log(url);\r\n  }, [location.pathname])\r\n\r\n  const toggleHome = () => {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav scrollNav={scrollNav}>\r\n        <NavbarContainer>\r\n          <NavLogo to='/' onClick={toggleHome}>\r\n            <img src={logo} alt='logo' />\r\n          </NavLogo>\r\n          <MobileIcon onClick={toggle}>\r\n            <FaBars />\r\n          </MobileIcon>\r\n          <NavMenu>\r\n            <NavItem>\r\n              <NavLinks to='dapp'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}>ÐApp</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks to='how_it_works'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}>How it works</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks to='3sat'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}>3-SAT</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks to='chainlink'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}>Chainlink</NavLinks>\r\n            </NavItem>\r\n          </NavMenu>\r\n          <NavBtn>\r\n            <NavBtnLink to=\"\" id=\"walletButton\" onClick={connectWalletPressed}>\r\n              {walletAddress.length > 0 ? (\"Connected: \" +\r\n                String(walletAddress).substring(0, 6) + \"...\" +\r\n                String(walletAddress).substring(38)) : (<span>Connect Wallet</span>)}\r\n            </NavBtnLink>\r\n          </NavBtn>\r\n        </NavbarContainer>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}