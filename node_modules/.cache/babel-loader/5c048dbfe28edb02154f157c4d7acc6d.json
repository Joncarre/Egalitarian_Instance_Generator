{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json';\nimport Navbar from \"./components/Navbar/index\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/SideBar\";\nimport Home from \"./pages\";\nimport SigninPage from \"./pages/signin\";\nimport RegisterPage from \"./pages/register\"; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatorAddress = \"0x6e4B3A201532D0FfD2d3C821371b009aA113bFcE\";\n\nfunction App() {\n  _s();\n\n  const {\n    register: set,\n    handleSubmit: handleSet,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: get,\n    handleSubmit: handleGet,\n    formState: {\n      errors2\n    }\n  } = useForm(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(data.firstName, data.age);\n      const transaction = await contract.setResearcher(data.firstName, data.age);\n      await transaction.wait();\n    }\n  }\n\n  async function async_getResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getResearcher(data.orcid);\n        console.log(result);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n\n    /*<div className=\"App\">\n      <form onSubmit={handleFoo(async_getResearcher)}>\n        <label>Get researcher</label>\n        <input type=\"number\" {...foo(\"orcid\", { min: 18, max: 99 })} />\n        {errorsss.orcid && (\n        <p>You Must be older then 18 and younger then 99 years old</p>\n        )}\n        <input type=\"submit\" />\n      </form>\n       <form onSubmit={handleSet(async_setResearcher)}>\n      <label>First Name</label>\n      <input type=\"text\"\n        {...set(\"firstName\", {\n          required: true,\n          maxLength: 20,\n          pattern: /^[A-Za-z]+$/i\n        })}\n      />\n      {errors?.firstName?.type === \"required\" && <p>This field is required</p>}\n      {errors?.firstName?.type === \"maxLength\" && (\n        <p>First name cannot exceed 20 characters</p>\n      )}\n      {errors?.firstName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )}\n      <label>Laste Name</label>\n      <input type=\"text\" {...set(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\n      {errors?.lastName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )}\n      <label>Age</label>\n      <input type=\"number\" {...set(\"age\", { min: 18, max: 99 })} />\n      {errors.age && (\n        <p>You Must be older then 18 and younger then 99 years old</p>\n      )}\n      <input type=\"submit\" />\n    </form>\n    </div>*/\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Home,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SigninPage,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          component: RegisterPage,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(App, \"xIq2bmwmogG9xz6Atgc0/8TdHEs=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/App.js"],"names":["useState","useEffect","useForm","ethers","Generator","Navbar","BrowserRouter","Router","Route","Switch","Sidebar","Home","SigninPage","RegisterPage","generatorAddress","App","register","set","handleSubmit","handleSet","formState","errors","get","handleGet","errors2","requestAccount","window","ethereum","request","method","async_setResearcher","data","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","console","log","firstName","age","transaction","setResearcher","wait","async_getResearcher","result","connect","getResearcher","orcid","err"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'\nimport Navbar from \"./components/Navbar/index\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/SideBar\";\nimport Home from \"./pages\";\nimport SigninPage from \"./pages/signin\";\nimport RegisterPage from \"./pages/register\";\n\n// Update with the contract address logged out to the CLI when it was deployed \nconst generatorAddress = \"0x6e4B3A201532D0FfD2d3C821371b009aA113bFcE\"\n\nfunction App() {\n  const {\n    register: set,\n    handleSubmit: handleSet,\n    formState: { errors }\n  } = useForm();\n\n  const { \n    register: get, \n    handleSubmit: handleGet, \n    formState: { errors2 }\n  } = useForm();\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n    async function async_setResearcher(data) {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        console.log(data.firstName, data.age);\n        const transaction = await contract.setResearcher(data.firstName, data.age)\n        await transaction.wait()\n      }\n    }\n\n    async function async_getResearcher(data) {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n        try {\n          const signer = provider.getSigner()\n          const result = await contract.connect(signer).getResearcher(data.orcid)\n          console.log(result)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n  return (\n    /*<div className=\"App\">\n      <form onSubmit={handleFoo(async_getResearcher)}>\n        <label>Get researcher</label>\n        <input type=\"number\" {...foo(\"orcid\", { min: 18, max: 99 })} />\n        {errorsss.orcid && (\n        <p>You Must be older then 18 and younger then 99 years old</p>\n        )}\n        <input type=\"submit\" />\n      </form>\n\n      <form onSubmit={handleSet(async_setResearcher)}>\n      <label>First Name</label>\n      <input type=\"text\"\n        {...set(\"firstName\", {\n          required: true,\n          maxLength: 20,\n          pattern: /^[A-Za-z]+$/i\n        })}\n      />\n      {errors?.firstName?.type === \"required\" && <p>This field is required</p>}\n      {errors?.firstName?.type === \"maxLength\" && (\n        <p>First name cannot exceed 20 characters</p>\n      )}\n      {errors?.firstName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )}\n      <label>Laste Name</label>\n      <input type=\"text\" {...set(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\n      {errors?.lastName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )}\n      <label>Age</label>\n      <input type=\"number\" {...set(\"age\", { min: 18, max: 99 })} />\n      {errors.age && (\n        <p>You Must be older then 18 and younger then 99 years old</p>\n      )}\n      <input type=\"submit\" />\n    </form>\n    </div>*/\n      <Router>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/signin' component={SigninPage} exact />\n          <Route path='/register' component={RegisterPage} exact />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}