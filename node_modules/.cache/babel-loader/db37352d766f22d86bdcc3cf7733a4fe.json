{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\DApp Versiones\\\\v11\\\\Generator-DApp\\\\src\\\\components\\\\ColumnHeaderTable\\\\index.js\";\nimport * as React from \"react\";\nimport { styled } from \"@mui/system\";\nimport { buildJSON, downloadJSON } from \"./helperFunctions\";\nimport { ButtonJson } from \"./tableElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cellHeight = 30;\nconst Root = styled(\"div\")(({\n  theme\n}) => `\n  table {\n    font-size: 0.8rem;\n    border-collapse: collapse;\n    width: 500px;\n    @media (max-width: 600px) {\n      width: 100%;\n    }\n  }\n\n  td,\n  th {\n    border: 1px solid #CDD2D7;\n    text-align: center;\n    padding: 6px;\n  }\n\n  th {\n    background-color: rgb(98, 129, 123, 0.8);\n    color: white;\n    height: ${`${cellHeight}px`};\n    width: 130px;\n    @media (max-width: 600px) {\n      width: 100px;\n    }\n  }\n\n  td {\n    background-color: #1b2631;\n    color: white;\n    height: ${`${cellHeight}px`};\n  }\n  `); // props: data & headerItems\n\nexport default function UnstyledTable({\n  data,\n  headerItems\n}) {\n  const handleClickJson = (chain, id) => {\n    const temp = buildJSON(chain);\n    downloadJSON(temp, id);\n  };\n\n  const handleResolve = (data, item) => {\n    if (item.name === 'chain') {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonJson, {\n          onClick: () => handleClickJson(data['chain'], data['id']),\n          children: \"JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    } else if (item.name === 'solved') {\n      return data[item.name] ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"True\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 48\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data[item.name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Root, {\n    sx: {},\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      \"aria-label\": \"custom table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(data).length > 0 ? headerItems.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), handleResolve(data, item)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = UnstyledTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnstyledTable\");","map":{"version":3,"sources":["C:/Users/Jonathan/Desktop/DApp Versiones/v11/Generator-DApp/src/components/ColumnHeaderTable/index.js"],"names":["React","styled","buildJSON","downloadJSON","ButtonJson","cellHeight","Root","theme","UnstyledTable","data","headerItems","handleClickJson","chain","id","temp","handleResolve","item","name","Object","keys","length","map","key","label"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,mBAAxC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,UAAU,GAAG,EAAnB;AAEA,MAAMC,IAAI,GAAGL,MAAM,CAAC,KAAD,CAAN,CACX,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAe,GAAEF,UAAW,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAe,GAAEA,UAAW,IAAI;AAChC;AACA,GAjCa,CAAb,C,CAoCA;;AACA,eAAe,SAASG,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,EAA8C;AAE3D,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AACrC,UAAMC,IAAI,GAAGZ,SAAS,CAACU,KAAD,CAAtB;AACAT,IAAAA,YAAY,CAACW,IAAD,EAAOD,EAAP,CAAZ;AACD,GAHD;;AAKA,QAAME,aAAa,GAAG,CAACN,IAAD,EAAOO,IAAP,KAAgB;AACpC,QAAIA,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;AACzB,0BAAO;AAAA,+BAAI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMN,eAAe,CAACF,IAAI,CAAC,OAAD,CAAL,EAAgBA,IAAI,CAAC,IAAD,CAApB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAGK,IAAIO,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC/B,aAAOR,IAAI,CAACO,IAAI,CAACC,IAAN,CAAJ,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzC;AACD;;AACD,wBAAO;AAAA,gBAAKR,IAAI,CAACO,IAAI,CAACC,IAAN;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GARD;;AASA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAA,2BACE;AAAO,oBAAW,cAAlB;AAAA,6BACE;AAAA,kBACGC,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,MAAlB,GAA2B,CAA3B,GACCV,WAAW,CAACW,GAAZ,CAAgB,CAACL,IAAD,EAAOM,GAAP,KAAe;AAC7B,8BACE;AAAA,oCACE;AAAA,wBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGR,aAAa,CAACN,IAAD,EAAOO,IAAP,CAFhB;AAAA,aAASM,GAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD,SAPD,CADD,gBAQM;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AATT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;KAlCuBd,a","sourcesContent":["import * as React from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport { buildJSON, downloadJSON } from \"./helperFunctions\";\r\nimport { ButtonJson } from \"./tableElements\";\r\n\r\nconst cellHeight = 30;\r\n\r\nconst Root = styled(\"div\")(\r\n  ({ theme }) => `\r\n  table {\r\n    font-size: 0.8rem;\r\n    border-collapse: collapse;\r\n    width: 500px;\r\n    @media (max-width: 600px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  td,\r\n  th {\r\n    border: 1px solid #CDD2D7;\r\n    text-align: center;\r\n    padding: 6px;\r\n  }\r\n\r\n  th {\r\n    background-color: rgb(98, 129, 123, 0.8);\r\n    color: white;\r\n    height: ${`${cellHeight}px`};\r\n    width: 130px;\r\n    @media (max-width: 600px) {\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  td {\r\n    background-color: #1b2631;\r\n    color: white;\r\n    height: ${`${cellHeight}px`};\r\n  }\r\n  `\r\n);\r\n\r\n// props: data & headerItems\r\nexport default function UnstyledTable({ data, headerItems }) {\r\n\r\n  const handleClickJson = (chain, id) => {\r\n    const temp = buildJSON(chain);\r\n    downloadJSON(temp, id);\r\n  }\r\n\r\n  const handleResolve = (data, item) => {\r\n    if (item.name === 'chain') {\r\n      return <td><ButtonJson onClick={() => handleClickJson(data['chain'], data['id'])}>JSON</ButtonJson></td>;\r\n    }\r\n    else if (item.name === 'solved') {\r\n      return data[item.name] ? <td>True</td> : <td>False</td>;\r\n    }\r\n    return <td>{data[item.name]}</td>\r\n  }\r\n  return (\r\n    <Root sx={{}}>\r\n      <table aria-label=\"custom table\">\r\n        <tbody>\r\n          {Object.keys(data).length > 0 ?\r\n            headerItems.map((item, key) => {\r\n              return (\r\n                <tr key={key}>\r\n                  <th>{item.label}</th>\r\n                  {handleResolve(data, item)}\r\n                </tr>\r\n              );\r\n            }) : <tr><th>No data</th></tr>\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </Root>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}