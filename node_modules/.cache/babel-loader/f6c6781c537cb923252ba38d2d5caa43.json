{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Footer/SubPages/Development.js\";\nimport { Container, Wrap, NewH1, NewH2, NewH3, NewP, NewB, NewUl, NewLi, NewLink, Img } from \"./SubpagesElements\";\nimport devImg from '../../../images/development.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Development = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrap, {\n      children: [/*#__PURE__*/_jsxDEV(NewH1, {\n        children: \"Technologies used in Development\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NewP, {\n        children: \"The development of a decentralised application is most relevant in the backend of the application. These applications make use of many technologies that must fit together perfectly in order to function correctly. Because of this, DApps are generally complex applications to test as there are more elements involved in the development than traditional web applications. Next, we will review the technologies used by this DApp in order to better understand how it works and the steps we have taken during the development of this 3SAT random instance generator project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Img, {\n        alt: \"dev\",\n        src: devImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NewH2, {\n        children: \"Hardhat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NewP, {\n        children: \"One of the methodologies commonly used when developing a DApp is to start by creating a development environment, which allows the functionality associated with smart contracts to be executed. In this sense, Hardhat is an environment developers use to test, compile, deploy and debug DApps based on the Ethereum blockchain. As such, it helps coders and developers to manage many of the tasks that are inherent to developing DApps and smart contracts. Along with providing developers with the proper tools to manage this process, Hardhat also helps automate some of these steps and provides developers with new, helpful functions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NewP, {\n        children: \"Hardhat comes with a pre-built local Ethereum network designed with development at its core. This network focuses on Solidity debugging and features stack traces, messages when transactions of the DApps fail, etc. This provides the developers with essential tools to understand where an application fails and provides them with the answer to solve them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NewP, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Development;\nexport default Development;\n\nvar _c;\n\n$RefreshReg$(_c, \"Development\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Footer/SubPages/Development.js"],"names":["Container","Wrap","NewH1","NewH2","NewH3","NewP","NewB","NewUl","NewLi","NewLink","Img","devImg","Development"],"mappings":";AAAA,SACCA,SADD,EAECC,IAFD,EAGCC,KAHD,EAICC,KAJD,EAKCC,KALD,EAMCC,IAND,EAOCC,IAPD,EAQCC,KARD,EASCC,KATD,EAUCC,OAVD,EAWCC,GAXD,QAYO,oBAZP;AAcA,OAAOC,MAAP,MAAmB,iCAAnB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACzB,sBACC,QAAC,SAAD;AAAA,2BACC,QAAC,IAAD;AAAA,8BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,GAAD;AAAK,QAAA,GAAG,EAAC,KAAT;AAAe,QAAA,GAAG,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,cAHD,eAKC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAMC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAhBD;;KAAMC,W;AAkBN,eAAeA,WAAf","sourcesContent":["import {\n\tContainer,\n\tWrap,\n\tNewH1,\n\tNewH2,\n\tNewH3,\n\tNewP,\n\tNewB,\n\tNewUl,\n\tNewLi,\n\tNewLink,\n\tImg\n} from \"./SubpagesElements\";\n\nimport devImg from '../../../images/development.png';\n\nconst Development = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Wrap>\n\t\t\t\t<NewH1>Technologies used in Development</NewH1>\n\t\t\t\t<NewP>The development of a decentralised application is most relevant in the backend of the application. These applications make use of many technologies that must fit together perfectly in order to function correctly. Because of this, DApps are generally complex applications to test as there are more elements involved in the development than traditional web applications. Next, we will review the technologies used by this DApp in order to better understand how it works and the steps we have taken during the development of this 3SAT random instance generator project.</NewP>\n\t\t\t\t<Img alt=\"dev\" src={devImg}></Img>\n\n\t\t\t\t<NewH2>Hardhat</NewH2>\n\t\t\t\t<NewP>One of the methodologies commonly used when developing a DApp is to start by creating a development environment, which allows the functionality associated with smart contracts to be executed. In this sense, Hardhat is an environment developers use to test, compile, deploy and debug DApps based on the Ethereum blockchain. As such, it helps coders and developers to manage many of the tasks that are inherent to developing DApps and smart contracts. Along with providing developers with the proper tools to manage this process, Hardhat also helps automate some of these steps and provides developers with new, helpful functions.</NewP>\n\t\t\t\t<NewP>Hardhat comes with a pre-built local Ethereum network designed with development at its core. This network focuses on Solidity debugging and features stack traces, messages when transactions of the DApps fail, etc. This provides the developers with essential tools to understand where an application fails and provides them with the answer to solve them.</NewP>\n\t\t\t\t<NewP></NewP>\n\n\t\t\t</Wrap>\n\t\t</Container>\n\t);\n}\n\nexport default Development;"]},"metadata":{},"sourceType":"module"}