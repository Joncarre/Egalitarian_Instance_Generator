{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\GitHub\\\\Egalitarian_Instance_Generator\\\\src\\\\components\\\\UserSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css';\nimport { buildInstance, buildDateArray } from './supportFunctions';\nimport swal from 'sweetalert';\nimport { secureStorage } from 'components/secureSession';\nimport { Container, FormButton, FormButtonTop, Form, FormH1, FormWrap1, FormWrap2 } from './UserElements';\nimport { FormLabel, FormInput, FormError } from '../FormElements';\nimport logo from '../../images/chainlink.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$agents, _errors$agents2, _errors$agents3, _errors$agents4, _errors$resources, _errors$resources2, _errors$resources3, _errors$resources4, _errors$numInstances, _errors$numInstances2, _errors$numInstances3, _errors$numInstances4, _errors2$orcid, _errors2$orcid2, _errors2$orcid3, _errors2$orcid4;\n\n  var infoArray = [];\n  var currentRandomNumber = null;\n  var oldRandomNumber = null;\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n  useEffect(() => {\n    // Check whether user entered the password before, if not, go back to /signin page\n    if (!secureStorage.getItem('password')) {\n      secureStorage.removeItem(\"password\");\n      secureStorage.removeItem(\"currOrcid\");\n      sessionStorage.setItem(\"noPassword\", true);\n      history.push(\"/signin\");\n    }\n  }, [history]);\n  useEffect(() => {\n    secureStorage.removeItem(\"currOrcid\");\n  }, []);\n  /*\n  * Function to check if the user wnats to use A or B generator\n  */\n\n  async function myHandleSubmit(data, event) {\n    var _event$nativeEvent$su, _event$nativeEvent$su2, _event$nativeEvent$su3;\n\n    if (((_event$nativeEvent$su = event.nativeEvent.submitter) === null || _event$nativeEvent$su === void 0 ? void 0 : _event$nativeEvent$su.id) === \"submit1\") async_createAInstance(data);else if (((_event$nativeEvent$su2 = event.nativeEvent.submitter) === null || _event$nativeEvent$su2 === void 0 ? void 0 : _event$nativeEvent$su2.id) === \"submit2\") async_createBInstance(data);else if (((_event$nativeEvent$su3 = event.nativeEvent.submitter) === null || _event$nativeEvent$su3 === void 0 ? void 0 : _event$nativeEvent$su3.id) === \"submit3\") async_createCInstance(data);\n  }\n  /*\n  * This function executes the function to generate a new instance using A generator\n  */\n\n\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createAInstance(data.agents, data.resources, secureStorage.getItem('password'), data.numInstances, {\n        gasLimit: 30000000\n      });\n      await transaction.wait();\n    }\n  }\n  /*\n  * This function executes the function to generate a new instance using B generator\n  */\n\n\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createBInstance(data.agents, data.resources, secureStorage.getItem('password'), data.numInstances, {\n        gasLimit: 30000000\n      });\n      await transaction.wait();\n    }\n  }\n  /*\n  * This function executes the function to generate a new instance using C generator\n  */\n\n\n  async function async_createCInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createCInstance(data.agents, data.resources, secureStorage.getItem('password'), data.numInstances, {\n        gasLimit: 30000000\n      });\n      await transaction.wait();\n    }\n  }\n  /*\n  * Get all instances from smart contract filtered by orcid\n  */\n\n\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\n        infoArray = buildInstance(result);\n        secureStorage.setItem(\"currOrcid\", data.orcid);\n        history.push({\n          pathname: '/instances',\n          state: {\n            infoArray\n          }\n        });\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n  /*\n  * VRF function to request the random number\n  */\n\n\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n\n      try {\n        const transaction = await contract.getRandomNumber(secureStorage.getItem('password'));\n        await transaction.wait();\n      } catch (e) {\n        alert(\"Not enough LINK in the smart contract. Please contact the admin.\");\n      }\n    }\n  }\n  /*\n  * Asks to the contract if there is enough LINK to call the oracles\n  */\n\n\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + result / 10e17 + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n  /*\n  * Function to check the moment when the random number has been generated\n  */\n\n\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        let isCanceled = false;\n        oldRandomNumber = currentRandomNumber;\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null && currentRandomNumber != 0) swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\n\n        while (!isCanceled) {\n          currentRandomNumber = await contract.connect(signer).randomResult();\n\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\n            isCanceled = true;\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\n          } else {\n            oldRandomNumber = currentRandomNumber;\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n  /*\n  * Get the array which contains all the dates for the random numbers generated from the SC\n  */\n\n\n  async function async_getDateNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\n        console.log(buildDateArray(result));\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrap1, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(myHandleSubmit),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Create a new instance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"logo\",\n          onClick: () => {\n            async_getRandomNumber();\n            async_getRemainingLINK();\n            async_randomResult();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"This parameter indicates how many agents will participate in the auction. Leave it at 0 to make it random.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"agents\", {\n            required: true,\n            max: 99,\n            min: 0,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"agents\",\n          placeholder: \"agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$agents = errors.agents) === null || _errors$agents === void 0 ? void 0 : _errors$agents.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 51\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$agents2 = errors.agents) === null || _errors$agents2 === void 0 ? void 0 : _errors$agents2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [0, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 46\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$agents3 = errors.agents) === null || _errors$agents3 === void 0 ? void 0 : _errors$agents3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [0, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 46\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$agents4 = errors.agents) === null || _errors$agents4 === void 0 ? void 0 : _errors$agents4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Second parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"It indicates how many resources will be available in the auction. Leave it at 0 to make it random.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"resources\", {\n            required: true,\n            max: 99,\n            min: 0,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"resources\",\n          placeholder: \"resources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$resources = errors.resources) === null || _errors$resources === void 0 ? void 0 : _errors$resources.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 54\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$resources2 = errors.resources) === null || _errors$resources2 === void 0 ? void 0 : _errors$resources2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [0, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 49\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$resources3 = errors.resources) === null || _errors$resources3 === void 0 ? void 0 : _errors$resources3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [0, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 49\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$resources4 = errors.resources) === null || _errors$resources4 === void 0 ? void 0 : _errors$resources4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Number of instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"Enter the number of instances you would like to generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"numInstances\", {\n            required: true,\n            max: 5,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"numInstances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances = errors.numInstances) === null || _errors$numInstances === void 0 ? void 0 : _errors$numInstances.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 57\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances2 = errors.numInstances) === null || _errors$numInstances2 === void 0 ? void 0 : _errors$numInstances2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances3 = errors.numInstances) === null || _errors$numInstances3 === void 0 ? void 0 : _errors$numInstances3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances4 = errors.numInstances) === null || _errors$numInstances4 === void 0 ? void 0 : _errors$numInstances4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormButtonTop, {\n            left: true,\n            id: \"submit1\",\n            type: \"submit\",\n            value: \"A generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormButtonTop, {\n            center: true,\n            id: \"submit2\",\n            type: \"submit\",\n            value: \"B gen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormButtonTop, {\n            right: true,\n            id: \"submit3\",\n            type: \"submit\",\n            value: \"C gen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormWrap2, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit2(async_getAllInstances),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Search for instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"ORCID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register2(\"orcid\", {\n            required: true,\n            minLength: 16,\n            maxLength: 16,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"orcid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid = errors2.orcid) === null || _errors2$orcid === void 0 ? void 0 : _errors2$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 51\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid2 = errors2.orcid) === null || _errors2$orcid2 === void 0 ? void 0 : _errors2$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid3 = errors2.orcid) === null || _errors2$orcid3 === void 0 ? void 0 : _errors2$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid4 = errors2.orcid) === null || _errors2$orcid4 === void 0 ? void 0 : _errors2$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\",\n          value: \"Get instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, 2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSection, \"TFRPd1/vmZaSSvZQ+abKhnZpAHE=\", false, function () {\n  return [useHistory, useForm, useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/GitHub/Egalitarian_Instance_Generator/src/components/UserSection/index.js"],"names":["React","useState","useEffect","useForm","useHistory","generatorAddress","requestAccount","ethers","Generator","buildInstance","buildDateArray","swal","secureStorage","Container","FormButton","FormButtonTop","Form","FormH1","FormWrap1","FormWrap2","FormLabel","FormInput","FormError","logo","UserSection","infoArray","currentRandomNumber","oldRandomNumber","history","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","getItem","removeItem","sessionStorage","setItem","push","myHandleSubmit","data","event","nativeEvent","submitter","id","async_createAInstance","async_createBInstance","async_createCInstance","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","createAInstance","agents","resources","numInstances","gasLimit","wait","createBInstance","createCInstance","async_getAllInstances","result","connect","getAllInstances","orcid","pathname","state","err","console","log","async_getRandomNumber","getRandomNumber","e","alert","async_getRemainingLINK","getRemainingLINK","async_randomResult","isCanceled","parseInt","randomResult","Promise","resolve","setTimeout","async_getDateNumber","getDateNumber","required","max","min","pattern","type","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css'\nimport { buildInstance, buildDateArray } from './supportFunctions'\nimport swal from 'sweetalert';\nimport { secureStorage } from 'components/secureSession';\nimport {\n  Container,\n  FormButton,\n  FormButtonTop,\n  Form,\n  FormH1,\n  FormWrap1,\n  FormWrap2,\n} from './UserElements'\nimport {\n  FormLabel,\n  FormInput,\n  FormError\n} from '../FormElements'\nimport logo from '../../images/chainlink.png';\n\nconst UserSection = () => {\n  var infoArray = [];\n  var currentRandomNumber = null;\n  var oldRandomNumber = null;\n  let history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm();\n\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: { errors: errors2 }\n  } = useForm();\n\n  useEffect(() => {\n    // Check whether user entered the password before, if not, go back to /signin page\n    if (!secureStorage.getItem('password')) {\n      secureStorage.removeItem(\"password\");\n      secureStorage.removeItem(\"currOrcid\");\n      sessionStorage.setItem(\"noPassword\", true);\n      history.push(\"/signin\");\n    }\n  }, [history])\n\n  useEffect(() => {\n    secureStorage.removeItem(\"currOrcid\");\n  }, [])\n\n  /*\n  * Function to check if the user wnats to use A or B generator\n  */\n  async function myHandleSubmit(data, event) {\n    if (event.nativeEvent.submitter?.id === \"submit1\")\n      async_createAInstance(data);\n    else if (event.nativeEvent.submitter?.id === \"submit2\")\n      async_createBInstance(data);\n    else if (event.nativeEvent.submitter?.id === \"submit3\")\n      async_createCInstance(data);\n  }\n\n  /*\n  * This function executes the function to generate a new instance using A generator\n  */\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createAInstance(\n        data.agents,\n        data.resources,\n        secureStorage.getItem('password'),\n        data.numInstances,\n        { gasLimit: 30000000 })\n      await transaction.wait()\n    }\n  }\n\n  /*\n  * This function executes the function to generate a new instance using B generator\n  */\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createBInstance(\n        data.agents,\n        data.resources,\n        secureStorage.getItem('password'),\n        data.numInstances,\n        { gasLimit: 30000000 })\n      await transaction.wait()\n    }\n  }\n\n  /*\n  * This function executes the function to generate a new instance using C generator\n  */\n  async function async_createCInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createCInstance(\n        data.agents,\n        data.resources,\n        secureStorage.getItem('password'),\n        data.numInstances,\n        { gasLimit: 30000000 })\n      await transaction.wait()\n    }\n  }\n\n  /*\n  * Get all instances from smart contract filtered by orcid\n  */\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\n        infoArray = buildInstance(result);\n        secureStorage.setItem(\"currOrcid\", data.orcid)\n        history.push({\n          pathname: '/instances',\n          state: { infoArray }\n        });\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  /*\n  * VRF function to request the random number\n  */\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      try {\n        const transaction = await contract.getRandomNumber(secureStorage.getItem('password'))\n        await transaction.wait();\n      } catch (e) {\n        alert(\"Not enough LINK in the smart contract. Please contact the admin.\");\n      }\n    }\n  }\n\n  /*\n  * Asks to the contract if there is enough LINK to call the oracles\n  */\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + (result / 10e17) + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  /*\n  * Function to check the moment when the random number has been generated\n  */\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        let isCanceled = false;\n        oldRandomNumber = currentRandomNumber;\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null && currentRandomNumber != 0)\n          swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\n        while (!isCanceled) {\n          currentRandomNumber = await contract.connect(signer).randomResult();\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\n            isCanceled = true;\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\n          } else {\n            oldRandomNumber = currentRandomNumber;\n          }\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n  \n  /*\n  * Get the array which contains all the dates for the random numbers generated from the SC\n  */\n  async function async_getDateNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\n        console.log(buildDateArray(result));\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <FormWrap1>\n        <Form key={1} onSubmit={handleSubmit(myHandleSubmit)}>\n          <FormH1>Create a new instance</FormH1>\n          <img className=\"logo\" src={logo} alt='logo' onClick={() => { async_getRandomNumber(); async_getRemainingLINK(); async_randomResult(); }} />\n          <span className=\"field-tip\">\n            <FormLabel>First parameter</FormLabel>\n            <span className=\"tip-content\">This parameter indicates how many agents will participate in the auction. Leave it at 0 to make it random.</span>\n          </span>\n          <FormInput {...register(\"agents\", {\n            required: true,\n            max: 99,\n            min: 0,\n            pattern: /^[0-9\\b]+$/\n          })} type=\"number\" name=\"agents\" placeholder=\"agents\" />\n          {errors?.agents?.type === \"required\" && <FormError>Field required</FormError>}\n          {errors?.agents?.type === \"max\" && <FormError>Integer number between [0, 99]</FormError>}\n          {errors?.agents?.type === \"min\" && <FormError>Integer number between [0, 99]</FormError>}\n          {errors?.agents?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\n          <span className=\"field-tip\">\n            <FormLabel>Second parameter</FormLabel>\n            <span className=\"tip-content\">It indicates how many resources will be available in the auction. Leave it at 0 to make it random.</span>\n          </span>\n          <FormInput {...register(\"resources\", {\n            required: true,\n            max: 99,\n            min: 0,\n            pattern: /^[0-9\\b]+$/\n          })} type=\"number\" name=\"resources\" placeholder=\"resources\" />\n          {errors?.resources?.type === \"required\" && <FormError>Field required</FormError>}\n          {errors?.resources?.type === \"max\" && <FormError>Integer number between [0, 99]</FormError>}\n          {errors?.resources?.type === \"min\" && <FormError>Integer number between [0, 99]</FormError>}\n          {errors?.resources?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\n          <span className=\"field-tip\">\n            <FormLabel>Number of instances</FormLabel>\n            <span className=\"tip-content\">Enter the number of instances you would like to generate</span>\n          </span>\n          <FormInput {...register(\"numInstances\", {\n            required: true,\n            max: 5,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          })} type=\"number\" name=\"numInstances\" />\n          {errors?.numInstances?.type === \"required\" && <FormError>Field required</FormError>}\n          {errors?.numInstances?.type === \"max\" && <FormError>Integer number between [1, 5]</FormError>}\n          {errors?.numInstances?.type === \"min\" && <FormError>Integer number between [1, 5]</FormError>}\n          {errors?.numInstances?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\n          <div>\n            { /* FormButtonTop has props(left or right) for controlling the 'float' attr  */}\n            <FormButtonTop left id=\"submit1\" type=\"submit\" value=\"A generator\" />\n            <FormButtonTop center id=\"submit2\" type=\"submit\" value=\"B gen\" />\n            <FormButtonTop right id=\"submit3\" type=\"submit\" value=\"C gen\" />\n          </div>\n        </Form>\n      </FormWrap1>\n      <FormWrap2>\n        <Form key={2} onSubmit={handleSubmit2(async_getAllInstances)}>\n          <FormH1>Search for instances</FormH1>\n          <FormLabel>ORCID</FormLabel>\n          <FormInput {...register2(\"orcid\", {\n            required: true,\n            minLength: 16,\n            maxLength: 16,\n            pattern: /^[0-9\\b]+$/\n          })} type=\"number\" name=\"orcid\" />\n          {errors2?.orcid?.type === \"required\" && <FormError>Field required</FormError>}\n          {errors2?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\n          {errors2?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\n          {errors2?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\n          <FormButton type=\"submit\" value=\"Get instances\" />\n        </Form>\n      </FormWrap2>\n    </Container>\n  )\n}\n\nexport default UserSection;"]},"metadata":{},"sourceType":"module"}