{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\DApp Versiones\\\\v9\\\\Generator-DApp\\\\src\\\\components\\\\UserSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css';\nimport { buildInstance, buildDateArray } from './supportFunctions';\nimport swal from 'sweetalert';\nimport { secureStorage } from 'components/secureSession';\nimport { Container, FormButton, FormButtonTop, Form, FormH1, FormWrap1, FormWrap2, FormWrap3 } from './UserElements';\nimport { FormLabel, FormInput, FormError } from '../FormElements';\nimport logo from '../../images/chainlink.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4, _errors$numInstances, _errors$numInstances2, _errors$numInstances3, _errors$numInstances4, _errors2$orcid, _errors2$orcid2, _errors2$orcid3, _errors2$orcid4;\n\n  var infoArray = [];\n  var currentRandomNumber = null;\n  var oldRandomNumber = null;\n  let history = useHistory();\n  let ref1 = React.useRef();\n  let ref2 = React.useRef();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n  useEffect(() => {\n    // check whether user entered the password before, if not, go back to /signin page\n    if (!secureStorage.getItem('password')) {\n      secureStorage.removeItem(\"password\");\n      sessionStorage.setItem(\"noPassword\", true);\n      history.push(\"/signin\");\n    }\n  }, [history]);\n\n  async function myHandleSubmit() {\n    if (ref1.current.id == \"submit1\") {\n      console.log(\"Ref1\");\n    } else if (ref2.current.id == \"submit2\") {\n      console.log(\"Ref2\");\n    }\n  }\n\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer); //console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\n\n      const transaction = await contract.createAInstance(data.p_value, data.q_value, secureStorage.getItem('password'), data.numInstances, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer); //console.log(\"async_createBInstance: \" + data.p_value, data.q_value);\n\n      const transaction = await contract.createBInstance(data.p_value, data.q_value, secureStorage.getItem('password'), data.numInstances, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getInstance(data.orcid);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\n        infoArray = buildInstance(result);\n        history.push({\n          pathname: '/instances',\n          state: {\n            infoArray\n          }\n        });\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.getRandomNumber(secureStorage.getItem('password'));\n      await transaction.wait();\n    }\n  }\n\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + result / 10e17 + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        let isCanceled = false;\n        oldRandomNumber = currentRandomNumber;\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null) swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\n\n        while (!isCanceled) {\n          currentRandomNumber = await contract.connect(signer).randomResult();\n\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\n            isCanceled = true;\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\n          } else {\n            oldRandomNumber = currentRandomNumber;\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getDateNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\n        console.log(buildDateArray(result));\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrap1, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(myHandleSubmit),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Create a new instance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"logo\",\n          onClick: () => {\n            async_getRandomNumber();\n            async_getRemainingLINK();\n            async_randomResult();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"The \\\"p\\\" value indicates the probability of generating a new proposition symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"p_value\", {\n            required: true,\n            max: 99,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"p_value\",\n          placeholder: \"p value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Second parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"The \\\"q\\\" value indicates the probability of generating a new clause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"q_value\", {\n            required: true,\n            max: 99,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"q_value\",\n          placeholder: \"q value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Number of instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"Enter the number of instances you would like to generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"numInstances\", {\n            required: true,\n            max: 5,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"numInstances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances = errors.numInstances) === null || _errors$numInstances === void 0 ? void 0 : _errors$numInstances.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 57\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances2 = errors.numInstances) === null || _errors$numInstances2 === void 0 ? void 0 : _errors$numInstances2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances3 = errors.numInstances) === null || _errors$numInstances3 === void 0 ? void 0 : _errors$numInstances3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances4 = errors.numInstances) === null || _errors$numInstances4 === void 0 ? void 0 : _errors$numInstances4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormButtonTop, {\n            ref: ref1,\n            left: true,\n            id: \"submit1\",\n            type: \"submit\",\n            value: \"A generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormButtonTop, {\n            ref: ref2,\n            right: true,\n            id: \"submit2\",\n            type: \"submit\",\n            value: \"B generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormWrap2, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit2(async_getAllInstances),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Search for instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"ORCID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register2(\"orcid\", {\n            required: true,\n            minLength: 16,\n            maxLength: 16,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"orcid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid = errors2.orcid) === null || _errors2$orcid === void 0 ? void 0 : _errors2$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 51\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid2 = errors2.orcid) === null || _errors2$orcid2 === void 0 ? void 0 : _errors2$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid3 = errors2.orcid) === null || _errors2$orcid3 === void 0 ? void 0 : _errors2$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid4 = errors2.orcid) === null || _errors2$orcid4 === void 0 ? void 0 : _errors2$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\",\n          value: \"Get instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, 2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSection, \"6HPjKzZYDayWgVw6pqXkb4u6Eng=\", false, function () {\n  return [useHistory, useForm, useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["C:/Users/Jonathan/Desktop/DApp Versiones/v9/Generator-DApp/src/components/UserSection/index.js"],"names":["React","useState","useEffect","useForm","useHistory","generatorAddress","requestAccount","ethers","Generator","buildInstance","buildDateArray","swal","secureStorage","Container","FormButton","FormButtonTop","Form","FormH1","FormWrap1","FormWrap2","FormWrap3","FormLabel","FormInput","FormError","logo","UserSection","infoArray","currentRandomNumber","oldRandomNumber","history","ref1","useRef","ref2","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","getItem","removeItem","sessionStorage","setItem","push","myHandleSubmit","current","id","console","log","async_createAInstance","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","createAInstance","p_value","q_value","numInstances","gasLimit","wait","async_createBInstance","createBInstance","async_getInstance","result","connect","getInstance","orcid","err","async_getAllInstances","getAllInstances","pathname","state","async_getRandomNumber","getRandomNumber","async_getRemainingLINK","getRemainingLINK","async_randomResult","isCanceled","parseInt","randomResult","Promise","resolve","setTimeout","async_getDateNumber","getDateNumber","required","max","min","pattern","type","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport './messagesInfo.css'\r\nimport { buildInstance, buildDateArray } from './supportFunctions'\r\nimport swal from 'sweetalert';\r\n\r\nimport { secureStorage } from 'components/secureSession';\r\n\r\nimport {\r\n  Container,\r\n  FormButton,\r\n  FormButtonTop,\r\n  Form,\r\n  FormH1,\r\n  FormWrap1,\r\n  FormWrap2,\r\n  FormWrap3,\r\n} from './UserElements'\r\nimport {\r\n  FormLabel,\r\n  FormInput,\r\n  FormError\r\n} from '../FormElements'\r\nimport logo from '../../images/chainlink.png';\r\n\r\nconst UserSection = () => {\r\n  var infoArray = [];\r\n  var currentRandomNumber = null;\r\n  var oldRandomNumber = null;\r\n  let history = useHistory();\r\n  let ref1 = React.useRef();\r\n  let ref2 = React.useRef();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const {\r\n    register: register2,\r\n    reset: reset2,\r\n    handleSubmit: handleSubmit2,\r\n    formState: { errors: errors2 }\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    // check whether user entered the password before, if not, go back to /signin page\r\n    if (!secureStorage.getItem('password')) {\r\n      secureStorage.removeItem(\"password\");\r\n      sessionStorage.setItem(\"noPassword\", true);\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [history])\r\n\r\n  async function myHandleSubmit(){\r\n      if(ref1.current.id == \"submit1\"){\r\n        console.log(\"Ref1\");\r\n      }else if(ref2.current.id == \"submit2\"){\r\n        console.log(\"Ref2\");\r\n      }\r\n  }\r\n\r\n  async function async_createAInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      //console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\r\n      const transaction = await contract.createAInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        secureStorage.getItem('password'),\r\n        data.numInstances,\r\n        { gasLimit: 10000000 })\r\n      await transaction.wait()\r\n    }\r\n  }\r\n\r\n  async function async_createBInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      //console.log(\"async_createBInstance: \" + data.p_value, data.q_value);\r\n      const transaction = await contract.createBInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        secureStorage.getItem('password'),\r\n        data.numInstances,\r\n        { gasLimit: 10000000 })\r\n      await transaction.wait()\r\n    }\r\n  }\r\n\r\n  async function async_getInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getInstance(data.orcid);\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_getAllInstances(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\r\n        infoArray = buildInstance(result);\r\n        history.push({\r\n          pathname: '/instances',\r\n          state: { infoArray }\r\n        });\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_getRandomNumber(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      const transaction = await contract.getRandomNumber(secureStorage.getItem('password'))\r\n      await transaction.wait();\r\n    }\r\n  }\r\n\r\n  async function async_getRemainingLINK(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getRemainingLINK();\r\n        console.log(\"Smart contract balance is: \" + (result / 10e17) + \" LINK token\");\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_randomResult(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        let isCanceled = false;\r\n        oldRandomNumber = currentRandomNumber;\r\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null)\r\n          swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\r\n        while (!isCanceled) {\r\n          currentRandomNumber = await contract.connect(signer).randomResult();\r\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\r\n            isCanceled = true;\r\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\r\n          } else {\r\n            oldRandomNumber = currentRandomNumber;\r\n          }\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_getDateNumber(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\r\n        console.log(buildDateArray(result));\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FormWrap1>\r\n        <Form key={1} onSubmit={handleSubmit(myHandleSubmit)}>\r\n          <FormH1>Create a new instance</FormH1>\r\n          <img className=\"logo\" src={logo} alt='logo' onClick={() => { async_getRandomNumber(); async_getRemainingLINK(); async_randomResult();}} />\r\n          <span className=\"field-tip\">\r\n            <FormLabel>First parameter</FormLabel>\r\n            <span className=\"tip-content\">The \"p\" value indicates the probability of generating a new proposition symbol</span>\r\n          </span>\r\n          <FormInput {...register(\"p_value\", {\r\n            required: true,\r\n            max: 99,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"p_value\" placeholder=\"p value\" />\r\n          {errors?.p_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.p_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.p_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <span className=\"field-tip\">\r\n            <FormLabel>Second parameter</FormLabel>\r\n            <span className=\"tip-content\">The \"q\" value indicates the probability of generating a new clause</span>\r\n          </span>\r\n          <FormInput {...register(\"q_value\", {\r\n            required: true,\r\n            max: 99,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"q_value\" placeholder=\"q value\" />\r\n          {errors?.q_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.q_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.q_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <span className=\"field-tip\">\r\n            <FormLabel>Number of instances</FormLabel>\r\n            <span className=\"tip-content\">Enter the number of instances you would like to generate</span>\r\n          </span>\r\n          <FormInput {...register(\"numInstances\", {\r\n            required: true,\r\n            max: 5,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"numInstances\" />\r\n          {errors?.numInstances?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.numInstances?.type === \"max\" && <FormError>Integer number between [1, 5]</FormError>}\r\n          {errors?.numInstances?.type === \"min\" && <FormError>Integer number between [1, 5]</FormError>}\r\n          {errors?.numInstances?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <div>\r\n            { /* FormButtonTop has props(left or right) for controlling the 'float' attr  */}\r\n            <FormButtonTop ref={ref1} left id=\"submit1\" type=\"submit\" value=\"A generator\" />\r\n            <FormButtonTop ref={ref2} right id=\"submit2\" type=\"submit\" value=\"B generator\" />\r\n          </div>\r\n        </Form>\r\n      </FormWrap1>\r\n      <FormWrap2>\r\n        <Form key={2} onSubmit={handleSubmit2(async_getAllInstances)}>\r\n          <FormH1>Search for instances</FormH1>\r\n          <FormLabel>ORCID</FormLabel>\r\n          <FormInput {...register2(\"orcid\", {\r\n            required: true,\r\n            minLength: 16,\r\n            maxLength: 16,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"orcid\" />\r\n          {errors2?.orcid?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors2?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n          {errors2?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n          {errors2?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <FormButton type=\"submit\" value=\"Get instances\" />\r\n        </Form>\r\n      </FormWrap2>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSection;\r\n"]},"metadata":{},"sourceType":"module"}