{"ast":null,"code":"import { hexValue } from '@ethersproject/bytes';\nimport React from 'react'; // Builds the instance(s) and return the result (usually array of arrays)\n\nfunction buildInstance(arr) {\n  var result;\n\n  for (var i = 0; i < arr.length; i++) {\n    result[i][0] = arr[i][0];\n    result[i][2] = buildDate(arr[i][4]);\n    result[i][3] = arr[i][3];\n  }\n\n  return result;\n} // Builds the chain as a string\n\n\nfunction buildChain(oldChain) {} // Builds the date as a date format\n\n\nfunction buildDate(oldDate) {\n  var newDate = new Date(parseInt(oldDate, 16) * 1000);\n  var result = newDate.getFullYear() + \"/\" + newDate.getMonth() + \"/\" + newDate.getDate() + \" \" + newDate.getHours() + \":\" + newDate.getMinutes() + \":\" + newDate.getSeconds();\n  return result;\n} // Return 'true' or 'false' with 50% probability\n\n\nfunction getBoolean() {\n  if (Math.random() >= 50) return true;else return false;\n}\n\nexport default {\n  buildInstance\n};","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/UserSection/supportFunctions.js"],"names":["hexValue","React","buildInstance","arr","result","i","length","buildDate","buildChain","oldChain","oldDate","newDate","Date","parseInt","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getBoolean","Math","random"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA2B;AACvB,MAAIC,MAAJ;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAG,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAC/BD,IAAAA,MAAM,CAACC,CAAD,CAAN,CAAU,CAAV,IAAeF,GAAG,CAACE,CAAD,CAAH,CAAO,CAAP,CAAf;AACAD,IAAAA,MAAM,CAACC,CAAD,CAAN,CAAU,CAAV,IAAeE,SAAS,CAACJ,GAAG,CAACE,CAAD,CAAH,CAAO,CAAP,CAAD,CAAxB;AACAD,IAAAA,MAAM,CAACC,CAAD,CAAN,CAAU,CAAV,IAAeF,GAAG,CAACE,CAAD,CAAH,CAAO,CAAP,CAAf;AACH;;AACD,SAAOD,MAAP;AACH,C,CAED;;;AACA,SAASI,UAAT,CAAoBC,QAApB,EAA6B,CAG5B,C,CAED;;;AACA,SAASF,SAAT,CAAmBG,OAAnB,EAA2B;AACvB,MAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACH,OAAD,EAAU,EAAV,CAAR,GAAsB,IAA/B,CAAd;AACA,MAAIN,MAAM,GAAGO,OAAO,CAACG,WAAR,KAAwB,GAAxB,GAA8BH,OAAO,CAACI,QAAR,EAA9B,GAAmD,GAAnD,GAAyDJ,OAAO,CAACK,OAAR,EAAzD,GAA8E,GAA9E,GAAoFL,OAAO,CAACM,QAAR,EAApF,GAAyG,GAAzG,GAA+GN,OAAO,CAACO,UAAR,EAA/G,GAAsI,GAAtI,GAA4IP,OAAO,CAACQ,UAAR,EAAzJ;AACA,SAAOf,MAAP;AACH,C,CAED;;;AACA,SAASgB,UAAT,GAAqB;AACjB,MAAGC,IAAI,CAACC,MAAL,MAAiB,EAApB,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP;;AAED,eAAe;AAACpB,EAAAA;AAAD,CAAf","sourcesContent":["import { hexValue } from '@ethersproject/bytes';\r\nimport React from 'react';\r\n\r\n// Builds the instance(s) and return the result (usually array of arrays)\r\nfunction buildInstance(arr){\r\n    var result;\r\n    for(var i = 0; i < arr.length; i++){\r\n        result[i][0] = arr[i][0];\r\n        result[i][2] = buildDate(arr[i][4]);\r\n        result[i][3] = arr[i][3];\r\n    }\r\n    return result;\r\n}\r\n\r\n// Builds the chain as a string\r\nfunction buildChain(oldChain){\r\n   \r\n\r\n}\r\n\r\n// Builds the date as a date format\r\nfunction buildDate(oldDate){\r\n    var newDate = new Date(parseInt(oldDate, 16)*1000);\r\n    var result = newDate.getFullYear() + \"/\" + newDate.getMonth() + \"/\" + newDate.getDate()  + \" \" + newDate.getHours() + \":\" + newDate.getMinutes() + \":\" + newDate.getSeconds();\r\n    return result;\r\n}\r\n\r\n// Return 'true' or 'false' with 50% probability\r\nfunction getBoolean(){\r\n    if(Math.random() >= 50)\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport default {buildInstance};"]},"metadata":{},"sourceType":"module"}