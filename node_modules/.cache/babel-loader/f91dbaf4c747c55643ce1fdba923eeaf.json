{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\Register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { generatorAddress } from './../../App.js';\nimport { Container, Form, FormButton, FormError } from './RegisterElements';\nimport { FormInput, FormWrap, FormH1, FormLabel, FormContent } from '../Signin/SigninElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$age, _errors$age2, _errors$age3, _errors$age4;\n\n  const generatorAddress = \"0x6e4B3A201532D0FfD2d3C821371b009aA113bFcE\";\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(data.firstName, data.age);\n      const transaction = await contract.setResearcher(data.firstName, data.age);\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(async_setResearcher),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Register your information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"firstName\", {\n                required: true,\n                maxLength: 20,\n                pattern: /^[A-Za-z]+$/i\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"First name cannot exceed 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"ORCID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"age\", {\n                required: true,\n                minLength: 16,\n                maxLength: 16,\n                pattern: /^[0-9\\b]+$/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$age = errors.age) === null || _errors$age === void 0 ? void 0 : _errors$age.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 70\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$age2 = errors.age) === null || _errors$age2 === void 0 ? void 0 : _errors$age2.type) == \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 70\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$age3 = errors.age) === null || _errors$age3 === void 0 ? void 0 : _errors$age3.type) == \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 70\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$age4 = errors.age) === null || _errors$age4 === void 0 ? void 0 : _errors$age4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Numerical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 69\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"UZMBuro1IN+cDvfsTehpEyFjWmk=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n/*\r\n                        <Form action=\"#\">\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel htmlFor='for'>Name</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormLabel htmlFor='for'>ORCID</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormButton type='submit'>Register</FormButton>\r\n                        </Form>\r\n\r\n                        */\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/Register/index.js"],"names":["React","useForm","generatorAddress","Container","Form","FormButton","FormError","FormInput","FormWrap","FormH1","FormLabel","FormContent","Register","register","handleSubmit","watch","formState","errors","onSubmit","data","alert","JSON","stringify","async_setResearcher","window","ethereum","requestAccount","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","Generator","abi","console","log","firstName","age","transaction","setResearcher","wait","required","maxLength","pattern","type","minLength"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { generatorAddress } from './../../App.js'\r\nimport { \r\n    Container, \r\n    Form, \r\n    FormButton,\r\n    FormError\r\n } from './RegisterElements';\r\n\r\n import {\r\n    FormInput, \r\n    FormWrap,\r\n    FormH1,\r\n    FormLabel,\r\n    FormContent,\r\n } from '../Signin/SigninElements'\r\n\r\nconst Register = () => {\r\n    const generatorAddress = \"0x6e4B3A201532D0FfD2d3C821371b009aA113bFcE\";\r\n    \r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors }\r\n    } = useForm();\r\n    \r\n    const onSubmit = (data) => {\r\n        alert(JSON.stringify(data));\r\n    }; // your form submit function which will invoke after successful validation\r\n\r\n    async function async_setResearcher(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            await requestAccount()\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner()\r\n            const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n            console.log(data.firstName, data.age);\r\n            const transaction = await contract.setResearcher(data.firstName, data.age)\r\n            await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <Container>\r\n                <FormWrap>\r\n                    <FormContent>\r\n                        <Form onSubmit={handleSubmit(async_setResearcher)}>\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"firstName\", {\r\n                                required: true,\r\n                                maxLength: 20,\r\n                                pattern: /^[A-Za-z]+$/i\r\n                                })}\r\n                            />\r\n                            {errors?.firstName?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.firstName?.type === \"maxLength\" && (\r\n                                <FormError>First name cannot exceed 20 characters</FormError>\r\n                            )}\r\n                            {errors?.firstName?.type === \"pattern\" && (\r\n                                <FormError>Alphabetical characters only</FormError>\r\n                            )}\r\n                            <FormLabel>ORCID</FormLabel>\r\n                            <FormInput {...register(\"age\", { \r\n                                required: true,\r\n                                minLength: 16, \r\n                                maxLength: 16,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} />\r\n                                {errors?.age?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.age?.type == \"minLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.age?.type == \"maxLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.age?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                            <FormButton type=\"submit\" />\r\n                        </Form>\r\n                    </FormContent>\r\n                </FormWrap>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n/*\r\n                        <Form action=\"#\">\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel htmlFor='for'>Name</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormLabel htmlFor='for'>ORCID</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormButton type='submit'>Register</FormButton>\r\n                        </Form>\r\n\r\n                        */"]},"metadata":{},"sourceType":"module"}