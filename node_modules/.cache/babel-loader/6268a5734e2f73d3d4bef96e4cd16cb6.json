{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\UserSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css';\nimport { print } from './supportFunctions';\nimport { Container, FormButton, FormButton1, FormButton2, Form, FormH1, FormWrap1, FormWrap2 } from './UserElements';\nimport { FormContent, FormLabel, FormInput, FormError } from '../Register/RegisterElements';\nimport logo from '../../images/chainlink.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4, _errors$numInstances, _errors$numInstances2, _errors$numInstances3, _errors$numInstances4, _errors2$orcid, _errors2$orcid2, _errors2$orcid3, _errors2$orcid4;\n\n  var oldResult;\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\n      const transaction = await contract.createAInstance(data.p_value, data.q_value, 6659948276, // CAMBIAR ESTO SI O SI\n      data.numInstances, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        console.log(\"async_getInstance: \" + data.orcid);\n        const result = await contract.connect(signer).getInstance(data.orcid);\n        console.log(result);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        console.log(\"async_getAllInstances: \" + data.orcid);\n        const arr = await contract.connect(signer).getAllInstances(data.orcid);\n        print;\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        console.log(\"async_getAllInstances: \" + data.orcid);\n        const arr = await contract.connect(signer).getAllInstances(data.orcid);\n        console.log(arr);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.numInstances);\n      const transaction = await contract.createBInstance(data.p_value, data.q_value, 3534535345, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.getRandomNumber({\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + result / 10e17 + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).randomResult();\n\n        if (oldResult !== result) {\n          oldResult = result;\n          console.log(\"New random number is: \" + result);\n        } else console.log(\"Random number hasn't changed\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrap1, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_createAInstance),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Create a new instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"logo\",\n            src: logo,\n            alt: \"logo\",\n            onClick: () => {\n              async_getRandomNumber();\n              async_getRemainingLINK();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"First parameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"tip-content\",\n              children: \"The \\\"p\\\" value indicates the probability of generating a new proposition symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"p_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"p_value\",\n            placeholder: \"p value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Second parameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"tip-content\",\n              children: \"The \\\"q\\\" value indicates the probability of generating a new clause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"q_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"q_value\",\n            placeholder: \"q value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Number of instances\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"tip-content\",\n              children: \"Enter the number of instances you would like to generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"numInstances\", {\n              required: true,\n              max: 5,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"numInstances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances = errors.numInstances) === null || _errors$numInstances === void 0 ? void 0 : _errors$numInstances.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 79\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances2 = errors.numInstances) === null || _errors$numInstances2 === void 0 ? void 0 : _errors$numInstances2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 5]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances3 = errors.numInstances) === null || _errors$numInstances3 === void 0 ? void 0 : _errors$numInstances3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 5]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances4 = errors.numInstances) === null || _errors$numInstances4 === void 0 ? void 0 : _errors$numInstances4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 78\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormButton1, {\n              id: \"submit1\",\n              type: \"submit\",\n              value: \"A generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormButton2, {\n              id: \"submit2\",\n              type: \"submit\",\n              value: \"B generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_randomResult,\n      children: \"Get random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormWrap2, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit2(async_getAllInstances),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Search for instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"ORCID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register2(\"orcid\", {\n              required: true,\n              minLength: 16,\n              maxLength: 16,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"orcid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid = errors2.orcid) === null || _errors2$orcid === void 0 ? void 0 : _errors2$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 69\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid2 = errors2.orcid) === null || _errors2$orcid2 === void 0 ? void 0 : _errors2$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 70\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid3 = errors2.orcid) === null || _errors2$orcid3 === void 0 ? void 0 : _errors2$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 70\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid4 = errors2.orcid) === null || _errors2$orcid4 === void 0 ? void 0 : _errors2$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            value: \"Get instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, 2, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSection, \"vCuwL/mrjM7CzT8SmpQq5aP/oMI=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/UserSection/index.js"],"names":["React","useForm","generatorAddress","requestAccount","ethers","Generator","print","Container","FormButton","FormButton1","FormButton2","Form","FormH1","FormWrap1","FormWrap2","FormContent","FormLabel","FormInput","FormError","logo","UserSection","oldResult","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","async_createAInstance","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","console","log","p_value","q_value","transaction","createAInstance","numInstances","gasLimit","wait","async_getInstance","orcid","result","connect","getInstance","err","async_getAllInstances","arr","getAllInstances","async_createBInstance","createBInstance","async_getRandomNumber","getRandomNumber","async_getRemainingLINK","getRemainingLINK","async_randomResult","randomResult","required","max","min","pattern","type","minLength","maxLength"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport './messagesInfo.css'\r\nimport { print } from './supportFunctions'\r\nimport { \r\n    Container,\r\n    FormButton,\r\n    FormButton1,\r\n    FormButton2,\r\n    Form,\r\n    FormH1,\r\n    FormWrap1,\r\n    FormWrap2\r\n} from './UserElements'\r\nimport {\r\n    FormContent,\r\n    FormLabel,\r\n    FormInput,\r\n    FormError\r\n} from '../Register/RegisterElements'\r\nimport logo from '../../images/chainlink.png';\r\n\r\nconst UserSection = () => {\r\n    var oldResult;\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const {\r\n        register: register2,\r\n        reset: reset2,\r\n        handleSubmit: handleSubmit2,\r\n        formState: { errors: errors2 }\r\n    } = useForm();\r\n\r\n    async function async_createAInstance(data) { \r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\r\n          const transaction = await contract.createAInstance(\r\n            data.p_value,\r\n            data.q_value,\r\n            6659948276, // CAMBIAR ESTO SI O SI\r\n            data.numInstances,\r\n            {gasLimit: 10000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    async function async_getInstance(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n          try {\r\n            const signer = provider.getSigner();\r\n            console.log(\"async_getInstance: \" + data.orcid)\r\n            const result = await contract.connect(signer).getInstance(data.orcid);\r\n            console.log(result);\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n        }    \r\n    }\r\n\r\n    async function async_getAllInstances(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n          try {\r\n            const signer = provider.getSigner();\r\n            console.log(\"async_getAllInstances: \" + data.orcid);\r\n            const arr = await contract.connect(signer).getAllInstances(data.orcid);\r\n            print;\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n        }    \r\n    }\r\n\r\n    async function async_getAllInstances(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n          try {\r\n            const signer = provider.getSigner();\r\n            console.log(\"async_getAllInstances: \" + data.orcid);\r\n            const arr = await contract.connect(signer).getAllInstances(data.orcid);\r\n            console.log(arr);\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n        }    \r\n    }\r\n\r\n    async function async_createBInstance(data) { \r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.numInstances);\r\n          const transaction = await contract.createBInstance(\r\n            data.p_value, \r\n            data.q_value,\r\n            3534535345,\r\n            {gasLimit: 10000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    async function async_getRandomNumber(data) { \r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          const transaction = await contract.getRandomNumber(\r\n            {gasLimit: 10000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    async function async_getRemainingLINK(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount();\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n          try {\r\n            const signer = provider.getSigner();\r\n            const result = await contract.connect(signer).getRemainingLINK();\r\n            console.log(\"Smart contract balance is: \" + (result/10e17) + \" LINK token\");\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n        }    \r\n    }\r\n\r\n    async function async_randomResult(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount();\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n          try {\r\n            const signer = provider.getSigner();\r\n            const result = await contract.connect(signer).randomResult();\r\n            if(oldResult !== result){\r\n              oldResult = result;\r\n              console.log(\"New random number is: \" + result);\r\n            }else\r\n              console.log(\"Random number hasn't changed\");\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FormWrap1>\r\n                <FormContent>\r\n                    <Form key={1} onSubmit={handleSubmit(async_createAInstance)}>\r\n                        <FormH1>Create a new instance</FormH1>\r\n                        <img class=\"logo\" src={logo} alt='logo' onClick={() => {async_getRandomNumber(); async_getRemainingLINK();}}/>\r\n                        <span class=\"field-tip\">\r\n                            <FormLabel>First parameter</FormLabel>\r\n                            <span class=\"tip-content\">The \"p\" value indicates the probability of generating a new proposition symbol</span>\r\n                        </span> \r\n                            <FormInput {...register(\"p_value\", { \r\n                                required: true,\r\n                                max: 99,\r\n                                min: 1,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"p_value\" placeholder=\"p value\"/>\r\n                                {errors?.p_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n                                {errors?.p_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.p_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <span class=\"field-tip\">\r\n                            <FormLabel>Second parameter</FormLabel>\r\n                            <span class=\"tip-content\">The \"q\" value indicates the probability of generating a new clause</span>\r\n                        </span> \r\n                            <FormInput {...register(\"q_value\", { \r\n                                required: true,\r\n                                max: 99,\r\n                                min: 1,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"q_value\" placeholder=\"q value\"/>\r\n                                {errors?.q_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n                                {errors?.q_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.q_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                          <span class=\"field-tip\">\r\n                            <FormLabel>Number of instances</FormLabel>\r\n                            <span class=\"tip-content\">Enter the number of instances you would like to generate</span>\r\n                        </span> \r\n                            <FormInput {...register(\"numInstances\", { \r\n                                required: true,\r\n                                max: 5,\r\n                                min: 1,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"numInstances\"/>\r\n                                {errors?.numInstances?.type === \"required\" && <FormError>Field required</FormError>}\r\n                                {errors?.numInstances?.type === \"max\" && <FormError>Integer number between [1, 5]</FormError> }\r\n                                {errors?.numInstances?.type === \"min\" && <FormError>Integer number between [1, 5]</FormError> }\r\n                                {errors?.numInstances?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <div>\r\n                            <FormButton1 id=\"submit1\" type=\"submit\"  value=\"A generator\"/>\r\n                            <FormButton2 id=\"submit2\" type=\"submit\"  value=\"B generator\"/>\r\n                        </div>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap1>\r\n            <button onClick={async_randomResult}>\r\n                Get random\r\n            </button>\r\n            <FormWrap2>\r\n                <FormContent>\r\n                    <Form key={2} onSubmit={handleSubmit2(async_getAllInstances)}>\r\n                        <FormH1>Search for instances</FormH1>\r\n                        <FormLabel>ORCID</FormLabel>\r\n                        <FormInput {...register2(\"orcid\", { \r\n                            required: true,\r\n                            minLength: 16, \r\n                            maxLength: 16,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"orcid\"/>\r\n                            {errors2?.orcid?.type === \"required\" && <FormError>Field required</FormError>}\r\n                            {errors2?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                            {errors2?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                            {errors2?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <FormButton type=\"submit\" value=\"Get instances\"/>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap2>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserSection;\r\n"]},"metadata":{},"sourceType":"module"}