{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w10te\\\\OneDrive\\\\Documents\\\\Generator-DApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json';\nimport Navbar from \"./components/Navbar/index\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/SideBar\";\nimport Home from \"./pages\";\nimport SigninPage from \"./pages/signin\";\nimport RegisterPage from \"./pages/register\"; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatorAddress = \"0xb77AA0D2656b1356FFdaC36568ADc9f1a23F6DEC\";\n\nfunction App() {\n  _s();\n\n  const [researcher, setResearcher] = useState({\n    orcid: null,\n    registered: null,\n    idInstance: null\n  });\n  const [instance, setInstance] = useState({\n    id: null,\n    chain: null,\n    size: null,\n    dateCreated: null,\n    solution: null,\n    solved: null,\n    dateSolution: null\n  }); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function async_solveInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.solveInstance();\n      await transaction.wait();\n    }\n  }\n\n  async function async_setResearcher() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.setResearcher(researcher);\n      await transaction.wait();\n    }\n  }\n\n  async function async_createAInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createAInstance(data, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_createBInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createBInstance({\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getInstance();\n        let startDate = new Date(parseInt(result[3]._hex.slice(2), 16) * 1000);\n        let endDate = new Date(parseInt(result[5]._hex.slice(2), 16) * 1000);\n        let arrayData = [result[1], startDate.getFullYear() + \"/\" + startDate.getMonth() + \"/\" + startDate.getDate() + \" \" + startDate.getHours() + \":\" + startDate.getMinutes() + \":\" + startDate.getSeconds(), result[4], endDate.getFullYear() + \"/\" + endDate.getMonth() + \"/\" + endDate.getDate() + \" \" + endDate.getHours() + \":\" + endDate.getMinutes() + \":\" + endDate.getSeconds()];\n        setData(arrayData);\n        console.log(arrayData);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Researcher information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_setResearcher,\n      children: \"Set orcid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"orcid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Instance information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_createAInstance,\n      children: \"Create A instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"p value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"q value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_createBInstance,\n      children: \"Create B instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"p value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"q value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_getInstance,\n      children: \"Get instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Instance: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this), data[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Start date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this), data[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Solution: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }, this), data[2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Solved date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 12\n        }, this), data[3]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_solveInstance,\n      children: \"Set solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this)\n  /* <Router>\n     <Switch>\n       <Route path='/' component={Home} exact />\n       <Route path='/signin' component={SigninPage} exact />\n       <Route path='/register' component={RegisterPage} exact />\n     </Switch>\n   </Router>\n  */\n  ;\n}\n\n_s(App, \"axwouidzU0e8/Y5aF6whhIPxE9A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/w10te/OneDrive/Documents/Generator-DApp/src/App.js"],"names":["useState","useEffect","ethers","Generator","Navbar","BrowserRouter","Router","Route","Switch","Sidebar","Home","SigninPage","RegisterPage","generatorAddress","App","researcher","setResearcher","orcid","registered","idInstance","instance","setInstance","id","chain","size","dateCreated","solution","solved","dateSolution","requestAccount","window","ethereum","request","method","async_solveInstance","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","solveInstance","wait","async_setResearcher","async_createAInstance","createAInstance","data","gasLimit","async_createBInstance","createBInstance","async_getInstance","result","connect","getInstance","startDate","Date","parseInt","_hex","slice","endDate","arrayData","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","setData","console","log","err","e","setUser","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'\nimport Navbar from \"./components/Navbar/index\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Sidebar from \"./components/SideBar\";\nimport Home from \"./pages\";\nimport SigninPage from \"./pages/signin\";\nimport RegisterPage from \"./pages/register\";\n\n// Update with the contract address logged out to the CLI when it was deployed \nconst generatorAddress = \"0xb77AA0D2656b1356FFdaC36568ADc9f1a23F6DEC\"\n\nfunction App() {\n  const [researcher, setResearcher] = useState({\n    orcid: null,\n    registered: null,\n    idInstance: null\n  })\n\n  const [instance, setInstance] = useState({\n    id: null,\n    chain: null,\n    size: null,\n    dateCreated: null,\n    solution: null,\n    solved: null,\n    dateSolution: null\n  })\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function async_solveInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.solveInstance()\n      await transaction.wait()\n    }\n  }\n\n    async function async_setResearcher() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.setResearcher(researcher)\n        await transaction.wait()\n      }\n    }\n\n    async function async_createAInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.createAInstance(data,\n          {\n          gasLimit: 12000000\n        })\n        await transaction.wait()\n      }\n    }\n\n    async function async_createBInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.createBInstance({\n          gasLimit: 12000000\n        })\n        await transaction.wait()\n      }\n    }\n\n    async function async_getInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n        try {\n          const signer = provider.getSigner()\n          const result = await contract.connect(signer).getInstance()\n          let startDate = new Date(parseInt(result[3]._hex.slice(2), 16)*1000);\n          let endDate = new Date(parseInt(result[5]._hex.slice(2), 16)*1000);         \n          let arrayData = [\n            result[1], \n            startDate.getFullYear() + \"/\" + startDate.getMonth() + \"/\" + startDate.getDate()  + \" \" + startDate.getHours() + \":\" + startDate.getMinutes() + \":\" + startDate.getSeconds(),\n            result[4], \n            endDate.getFullYear() + \"/\" + endDate.getMonth() + \"/\" + endDate.getDate()  + \" \" + endDate.getHours() + \":\" + endDate.getMinutes() + \":\" + endDate.getSeconds()\n          ]\n          setData(arrayData)\n          console.log(arrayData)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n  return (\n    <div className=\"App\">\n      <h3>Researcher information</h3>\n      <button onClick={async_setResearcher}>Set orcid</button>\n      <input onChange={e => setUser(e.target.value)} placeholder=\"orcid\" />\n      <h3>Instance information</h3>\n      <button onClick={async_createAInstance}>Create A instance</button>\n      <input onChange={e => setUser(e.target.value)} placeholder=\"p value\" />\n      <input onChange={e => setUser(e.target.value)} placeholder=\"q value\" />\n      <p></p>\n      <button onClick={async_createBInstance}>Create B instance</button>\n      <input onChange={e => setUser(e.target.value)} placeholder=\"p value\" />\n      <input onChange={e => setUser(e.target.value)} placeholder=\"q value\" />\n      <p></p>\n      <button onClick={async_getInstance}>Get instance</button>\n      <div>\n        <p><h5>Instance: </h5>{data[0]}</p>\n        <p><h5>Start date: </h5>{data[1]}</p>\n        <p><h5>Solution: </h5>{data[2]}</p>\n        <p><h5>Solved date: </h5>{data[3]}</p>\n      </div>\n      <button onClick={async_solveInstance}>Set solution</button>\n      <input onChange={e => setUser(e.target.value)} placeholder=\"solution\" />\n    </div>\n     /* <Router>\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/signin' component={SigninPage} exact />\n          <Route path='/register' component={RegisterPage} exact />\n        </Switch>\n      </Router>\n    */\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}