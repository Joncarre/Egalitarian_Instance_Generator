{"ast":null,"code":"// Creates the structure for a JSON file\nexport const buildJSON = _oldChain => {\n  let object = {};\n  let arrayOld = Array.from(_oldChain);\n  let arrayValue = new Array(arrayOld.length);\n  let arraySign = new Array(arrayOld.length);\n\n  for (let i = 0; i < arrayOld.length; i++) {\n    arrayValue[i] = parseInt(arrayOld[i]);\n    if (Math.random() < 0.5) arraySign[i] = 1;else arraySign[i] = 0;\n    object.value = arrayValue;\n  }\n\n  object.sign = arraySign;\n  console.log(object);\n  return JSON.stringify(object);\n};\nexport const downloadJSON = json => {\n  const element = document.createElement(\"a\");\n  const textFile = new Blob([[json], {\n    type: 'text/plain'\n  }]); //pass data from localStorage API to blob\n\n  element.href = URL.createObjectURL(textFile);\n  element.download = \"chain.json\";\n  document.body.appendChild(element);\n  element.click();\n};","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/ColumnHeaderTable/helperFunctions.js"],"names":["buildJSON","_oldChain","object","arrayOld","Array","from","arrayValue","length","arraySign","i","parseInt","Math","random","value","sign","console","log","JSON","stringify","downloadJSON","json","element","document","createElement","textFile","Blob","type","href","URL","createObjectURL","download","body","appendChild","click"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAGC,SAAS,IAAI;AAClC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAX,CAAf;AACA,MAAIK,UAAU,GAAG,IAAIF,KAAJ,CAAUD,QAAQ,CAACI,MAAnB,CAAjB;AACA,MAAIC,SAAS,GAAG,IAAIJ,KAAJ,CAAUD,QAAQ,CAACI,MAAnB,CAAhB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACI,MAA7B,EAAqCE,CAAC,EAAtC,EAA0C;AACtCH,IAAAA,UAAU,CAACG,CAAD,CAAV,GAAgBC,QAAQ,CAACP,QAAQ,CAACM,CAAD,CAAT,CAAxB;AAAuC,QAAIE,IAAI,CAACC,MAAL,KAAgB,GAApB,EACnCJ,SAAS,CAACC,CAAD,CAAT,GAAe,CAAf,CADmC,KAGnCD,SAAS,CAACC,CAAD,CAAT,GAAe,CAAf;AAAkBP,IAAAA,MAAM,CAACW,KAAP,GAAeP,UAAf;AACzB;;AACDJ,EAAAA,MAAM,CAACY,IAAP,GAAcN,SAAd;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACA,SAAOe,IAAI,CAACC,SAAL,CAAehB,MAAf,CAAP;AACH,CAdM;AAgBP,OAAO,MAAMiB,YAAY,GAAGC,IAAI,IAAI;AAChC,QAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;AACA,QAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAAS,CAAC,CAACL,IAAD,CAAD,EAAS;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAT,CAAjB,CAFgC,CAE6B;;AAC7DL,EAAAA,OAAO,CAACM,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBL,QAApB,CAAf;AACAH,EAAAA,OAAO,CAACS,QAAR,GAAmB,YAAnB;AACAR,EAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BX,OAA1B;AACAA,EAAAA,OAAO,CAACY,KAAR;AACH,CAPM","sourcesContent":["// Creates the structure for a JSON file\nexport const buildJSON = _oldChain => {\n    let object = {};\n    let arrayOld = Array.from(_oldChain);\n    let arrayValue = new Array(arrayOld.length);\n    let arraySign = new Array(arrayOld.length);\n    for (let i = 0; i < arrayOld.length; i++) {\n        arrayValue[i] = parseInt(arrayOld[i]); if (Math.random() < 0.5)\n            arraySign[i] = 1;\n        else\n            arraySign[i] = 0; object.value = arrayValue;\n    }\n    object.sign = arraySign;\n    console.log(object);\n    return JSON.stringify(object);\n}\n\nexport const downloadJSON = json => {\n    const element = document.createElement(\"a\");\n    const textFile = new Blob([[json], { type: 'text/plain' }]); //pass data from localStorage API to blob\n    element.href = URL.createObjectURL(textFile);\n    element.download = \"chain.json\";\n    document.body.appendChild(element);\n    element.click();\n}"]},"metadata":{},"sourceType":"module"}