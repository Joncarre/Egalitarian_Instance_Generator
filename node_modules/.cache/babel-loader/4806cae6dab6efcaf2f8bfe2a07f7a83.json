{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Signin/index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, FormButton } from './SinginElements';\nimport { FormWrap, Form, FormH1 } from '../Register/RegisterElements';\nimport { FormContent, FormLabel, FormInput, FormError } from '../FormElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  var _errors$secret, _errors$secret2, _errors$secret3, _errors$secret4;\n\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  async function async_checkPass(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).checkPass(data.secret);\n\n        if (result) {\n          console.log(\"es true\");\n          history.push(\"/user\");\n        } else {\n          console.log(\"es false\");\n        }\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormWrap, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_checkPass),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Access to information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password from email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"secret\", {\n              required: true,\n              minLength: 10,\n              maxLength: 10,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$secret = errors.secret) === null || _errors$secret === void 0 ? void 0 : _errors$secret.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 65\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$secret2 = errors.secret) === null || _errors$secret2 === void 0 ? void 0 : _errors$secret2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 66\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$secret3 = errors.secret) === null || _errors$secret3 === void 0 ? void 0 : _errors$secret3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 66\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$secret4 = errors.secret) === null || _errors$secret4 === void 0 ? void 0 : _errors$secret4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"v/yJZwJs3hHC1z32q1dRbQrhU/o=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Signin/index.js"],"names":["React","useForm","useHistory","generatorAddress","requestAccount","ethers","Generator","Container","FormButton","FormWrap","Form","FormH1","FormContent","FormLabel","FormInput","FormError","SignIn","history","register","handleSubmit","reset","formState","errors","async_checkPass","data","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","signer","getSigner","result","connect","checkPass","secret","console","log","push","err","required","minLength","maxLength","pattern","type"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n    Container,\r\n    FormButton\r\n} from './SinginElements'\r\nimport {\r\n    FormWrap,\r\n    Form,\r\n    FormH1,\r\n} from '../Register/RegisterElements'\r\n\r\nimport {\r\n    FormContent,\r\n    FormLabel,\r\n    FormInput,\r\n    FormError\r\n} from '../FormElement'\r\n\r\nconst SignIn = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    async function async_checkPass(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n            const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n            try {\r\n                const signer = provider.getSigner();\r\n                const result = await contract.connect(signer).checkPass(data.secret);\r\n                if (result) {\r\n                    console.log(\"es true\");\r\n                    history.push(\"/user\");\r\n                } else {\r\n                    console.log(\"es false\");\r\n                }\r\n            } catch (err) {\r\n                console.log(\"Error: \", err)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FormWrap>\r\n                <FormContent>\r\n                    <Form onSubmit={handleSubmit(async_checkPass)}>\r\n                        <FormH1>Access to information</FormH1>\r\n                        <FormLabel>Password from email</FormLabel>\r\n                        <FormInput {...register(\"secret\", {\r\n                            required: true,\r\n                            minLength: 10,\r\n                            maxLength: 10,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"secret\" />\r\n                        {errors?.secret?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                        {errors?.secret?.type === \"minLength\" && <FormError>It must be a number of 10 digits</FormError>}\r\n                        {errors?.secret?.type === \"maxLength\" && <FormError>It must be a number of 10 digits</FormError>}\r\n                        {errors?.secret?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n                        <FormButton type=\"submit\" />\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}