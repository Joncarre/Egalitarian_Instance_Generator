{"ast":null,"code":"import SecureStorage from \"secure-web-storage\";\nimport CryptoJS from \"crypto-js\";\nconst SECRET_KEY = \"cat in a hat\";\nexport const secureStorage = new SecureStorage(sessionStorage, {\n  hash: function hash(key) {\n    key = CryptoJS.SHA256(key, SECRET_KEY);\n    return key.toString();\n  },\n  encrypt: function encrypt(data) {\n    data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n    data = data.toString();\n    return data;\n  },\n  decrypt: function decrypt(data) {\n    data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n    data = data.toString(CryptoJS.enc.Utf8);\n    return data;\n  }\n});","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/secureSession.js"],"names":["SecureStorage","CryptoJS","SECRET_KEY","secureStorage","sessionStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,UAAU,GAAG,cAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,IAAIH,aAAJ,CAAkBI,cAAlB,EAAkC;AAC9DC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACxBA,IAAAA,GAAG,GAAGL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBJ,UAArB,CAAN;AACA,WAAOI,GAAG,CAACE,QAAJ,EAAP;AACA,GAJ6D;AAK9DC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC/BA,IAAAA,IAAI,GAAGT,QAAQ,CAACU,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AAEA,WAAOE,IAAP;AACA,GAX6D;AAY9DE,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC/BA,IAAAA,IAAI,GAAGT,QAAQ,CAACU,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,UAA3B,CAAP;AAEAQ,IAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcP,QAAQ,CAACY,GAAT,CAAaC,IAA3B,CAAP;AAEA,WAAOJ,IAAP;AACA;AAlB6D,CAAlC,CAAtB","sourcesContent":["import SecureStorage from \"secure-web-storage\";\nimport CryptoJS from \"crypto-js\";\n\nconst SECRET_KEY = \"cat in a hat\";\n\nexport const secureStorage = new SecureStorage(sessionStorage, {\n\thash: function hash(key) {\n\t\tkey = CryptoJS.SHA256(key, SECRET_KEY);\n\t\treturn key.toString();\n\t},\n\tencrypt: function encrypt(data) {\n\t\tdata = CryptoJS.AES.encrypt(data, SECRET_KEY);\n\n\t\tdata = data.toString();\n\n\t\treturn data;\n\t},\n\tdecrypt: function decrypt(data) {\n\t\tdata = CryptoJS.AES.decrypt(data, SECRET_KEY);\n\n\t\tdata = data.toString(CryptoJS.enc.Utf8);\n\n\t\treturn data;\n\t}\n});\n"]},"metadata":{},"sourceType":"module"}