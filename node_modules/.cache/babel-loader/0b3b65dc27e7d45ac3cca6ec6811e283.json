{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSuccessfulJsonResponse = exports.isValidJsonResponse = exports.isValidJsonRequest = exports.parseJsonResponse = void 0;\n\nconst errors_1 = require(\"../core/errors\");\n\nconst errors_list_1 = require(\"../core/errors-list\");\n\nfunction parseJsonResponse(text) {\n  try {\n    const json = JSON.parse(text);\n    const responses = Array.isArray(json) ? json : [json];\n\n    for (const response of responses) {\n      if (!isValidJsonResponse(response)) {\n        // We are sending the proper error inside the catch part of the statement.\n        // We just need to raise anything here.\n        // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n        throw new Error();\n      }\n    }\n\n    return json;\n  } catch (error) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.NETWORK.INVALID_JSON_RESPONSE, {\n      response: text\n    });\n  }\n}\n\nexports.parseJsonResponse = parseJsonResponse;\n\nfunction isValidJsonRequest(payload) {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n\n  if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\") {\n    return false;\n  }\n\n  if (typeof payload.method !== \"string\") {\n    return false;\n  }\n\n  if (payload.params !== undefined && !Array.isArray(payload.params)) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.isValidJsonRequest = isValidJsonRequest;\n\nfunction isValidJsonResponse(payload) {\n  if (payload.jsonrpc !== \"2.0\") {\n    return false;\n  }\n\n  if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\" && payload.id !== null) {\n    return false;\n  }\n\n  if (payload.id === null && payload.error === undefined) {\n    return false;\n  }\n\n  if (payload.result === undefined && payload.error === undefined) {\n    return false;\n  }\n\n  if (payload.error !== undefined) {\n    if (typeof payload.error.code !== \"number\") {\n      return false;\n    }\n\n    if (typeof payload.error.message !== \"string\") {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.isValidJsonResponse = isValidJsonResponse;\n\nfunction isSuccessfulJsonResponse(payload) {\n  return \"result\" in payload;\n}\n\nexports.isSuccessfulJsonResponse = isSuccessfulJsonResponse;","map":{"version":3,"sources":["../../src/internal/util/jsonrpc.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AA2BA,SAAgB,iBAAhB,CACE,IADF,EACc;AAEZ,MAAI;AACF,UAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAb;AAEA,UAAM,SAAS,GAAG,KAAK,CAAC,OAAN,CAAc,IAAd,IAAsB,IAAtB,GAA6B,CAAC,IAAD,CAA/C;;AACA,SAAK,MAAM,QAAX,IAAuB,SAAvB,EAAkC;AAChC,UAAI,CAAC,mBAAmB,CAAC,QAAD,CAAxB,EAAoC;AAClC;AACA;AACA;AACA,cAAM,IAAI,KAAJ,EAAN;AACD;AACF;;AAED,WAAO,IAAP;AACD,GAdD,CAcE,OAAO,KAAP,EAAc;AACd,UAAM,IAAI,QAAA,CAAA,YAAJ,CAAiB,aAAA,CAAA,MAAA,CAAO,OAAP,CAAe,qBAAhC,EAAuD;AAC3D,MAAA,QAAQ,EAAE;AADiD,KAAvD,CAAN;AAGD;AACF;;AAtBD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAwBA,SAAgB,kBAAhB,CAAmC,OAAnC,EAA+C;AAC7C,MAAI,OAAO,CAAC,OAAR,KAAoB,KAAxB,EAA+B;AAC7B,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,OAAO,CAAC,EAAf,KAAsB,QAAtB,IAAkC,OAAO,OAAO,CAAC,EAAf,KAAsB,QAA5D,EAAsE;AACpE,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,OAAO,CAAC,MAAf,KAA0B,QAA9B,EAAwC;AACtC,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,CAAC,MAAR,KAAmB,SAAnB,IAAgC,CAAC,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,MAAtB,CAArC,EAAoE;AAClE,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAlBD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAoBA,SAAgB,mBAAhB,CAAoC,OAApC,EAAgD;AAC9C,MAAI,OAAO,CAAC,OAAR,KAAoB,KAAxB,EAA+B;AAC7B,WAAO,KAAP;AACD;;AAED,MACE,OAAO,OAAO,CAAC,EAAf,KAAsB,QAAtB,IACA,OAAO,OAAO,CAAC,EAAf,KAAsB,QADtB,IAEA,OAAO,CAAC,EAAR,KAAe,IAHjB,EAIE;AACA,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,CAAC,EAAR,KAAe,IAAf,IAAuB,OAAO,CAAC,KAAR,KAAkB,SAA7C,EAAwD;AACtD,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,CAAC,MAAR,KAAmB,SAAnB,IAAgC,OAAO,CAAC,KAAR,KAAkB,SAAtD,EAAiE;AAC/D,WAAO,KAAP;AACD;;AAED,MAAI,OAAO,CAAC,KAAR,KAAkB,SAAtB,EAAiC;AAC/B,QAAI,OAAO,OAAO,CAAC,KAAR,CAAc,IAArB,KAA8B,QAAlC,EAA4C;AAC1C,aAAO,KAAP;AACD;;AAED,QAAI,OAAO,OAAO,CAAC,KAAR,CAAc,OAArB,KAAiC,QAArC,EAA+C;AAC7C,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAhCD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAkCA,SAAgB,wBAAhB,CACE,OADF,EAC0B;AAExB,SAAO,YAAY,OAAnB;AACD;;AAJD,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSuccessfulJsonResponse = exports.isValidJsonResponse = exports.isValidJsonRequest = exports.parseJsonResponse = void 0;\nconst errors_1 = require(\"../core/errors\");\nconst errors_list_1 = require(\"../core/errors-list\");\nfunction parseJsonResponse(text) {\n    try {\n        const json = JSON.parse(text);\n        const responses = Array.isArray(json) ? json : [json];\n        for (const response of responses) {\n            if (!isValidJsonResponse(response)) {\n                // We are sending the proper error inside the catch part of the statement.\n                // We just need to raise anything here.\n                // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n                throw new Error();\n            }\n        }\n        return json;\n    }\n    catch (error) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.NETWORK.INVALID_JSON_RESPONSE, {\n            response: text,\n        });\n    }\n}\nexports.parseJsonResponse = parseJsonResponse;\nfunction isValidJsonRequest(payload) {\n    if (payload.jsonrpc !== \"2.0\") {\n        return false;\n    }\n    if (typeof payload.id !== \"number\" && typeof payload.id !== \"string\") {\n        return false;\n    }\n    if (typeof payload.method !== \"string\") {\n        return false;\n    }\n    if (payload.params !== undefined && !Array.isArray(payload.params)) {\n        return false;\n    }\n    return true;\n}\nexports.isValidJsonRequest = isValidJsonRequest;\nfunction isValidJsonResponse(payload) {\n    if (payload.jsonrpc !== \"2.0\") {\n        return false;\n    }\n    if (typeof payload.id !== \"number\" &&\n        typeof payload.id !== \"string\" &&\n        payload.id !== null) {\n        return false;\n    }\n    if (payload.id === null && payload.error === undefined) {\n        return false;\n    }\n    if (payload.result === undefined && payload.error === undefined) {\n        return false;\n    }\n    if (payload.error !== undefined) {\n        if (typeof payload.error.code !== \"number\") {\n            return false;\n        }\n        if (typeof payload.error.message !== \"string\") {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isValidJsonResponse = isValidJsonResponse;\nfunction isSuccessfulJsonResponse(payload) {\n    return \"result\" in payload;\n}\nexports.isSuccessfulJsonResponse = isSuccessfulJsonResponse;\n//# sourceMappingURL=jsonrpc.js.map"]},"metadata":{},"sourceType":"script"}