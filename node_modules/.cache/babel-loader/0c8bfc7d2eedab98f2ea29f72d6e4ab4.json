{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHardhatVersion = exports.getPackageJson = exports.findClosestPackageJson = exports.getPackageRoot = exports.getPackageJsonPath = void 0;\n\nconst find_up_1 = __importDefault(require(\"find-up\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nfunction getPackageJsonPath() {\n  return findClosestPackageJson(__filename);\n}\n\nexports.getPackageJsonPath = getPackageJsonPath;\n\nfunction getPackageRoot() {\n  const packageJsonPath = getPackageJsonPath();\n  return path_1.default.dirname(packageJsonPath);\n}\n\nexports.getPackageRoot = getPackageRoot;\n\nfunction findClosestPackageJson(file) {\n  return find_up_1.default.sync(\"package.json\", {\n    cwd: path_1.default.dirname(file)\n  });\n}\n\nexports.findClosestPackageJson = findClosestPackageJson;\n\nasync function getPackageJson() {\n  const root = getPackageRoot();\n  return fs_extra_1.default.readJSON(path_1.default.join(root, \"package.json\"));\n}\n\nexports.getPackageJson = getPackageJson;\n\nfunction getHardhatVersion() {\n  const packageJsonPath = findClosestPackageJson(__filename);\n\n  if (packageJsonPath === null) {\n    return null;\n  }\n\n  try {\n    const packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);\n    return packageJson.version;\n  } catch (e) {\n    return null;\n  }\n}\n\nexports.getHardhatVersion = getHardhatVersion;","map":{"version":3,"sources":["../../src/internal/util/packageInfo.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,SAAgB,kBAAhB,GAAkC;AAChC,SAAO,sBAAsB,CAAC,UAAD,CAA7B;AACD;;AAFD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAIA,SAAgB,cAAhB,GAA8B;AAC5B,QAAM,eAAe,GAAG,kBAAkB,EAA1C;AAEA,SAAO,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,eAAb,CAAP;AACD;;AAJD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAcA,SAAgB,sBAAhB,CAAuC,IAAvC,EAAmD;AACjD,SAAO,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,cAAZ,EAA4B;AAAE,IAAA,GAAG,EAAE,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,IAAb;AAAP,GAA5B,CAAP;AACD;;AAFD,OAAA,CAAA,sBAAA,GAAA,sBAAA;;AAIO,eAAe,cAAf,GAA6B;AAClC,QAAM,IAAI,GAAG,cAAc,EAA3B;AACA,SAAO,UAAA,CAAA,OAAA,CAAQ,QAAR,CAAiB,MAAA,CAAA,OAAA,CAAK,IAAL,CAAU,IAAV,EAAgB,cAAhB,CAAjB,CAAP;AACD;;AAHD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAKA,SAAgB,iBAAhB,GAAiC;AAC/B,QAAM,eAAe,GAAG,sBAAsB,CAAC,UAAD,CAA9C;;AAEA,MAAI,eAAe,KAAK,IAAxB,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,MAAI;AACF,UAAM,WAAW,GAAG,UAAA,CAAA,OAAA,CAAQ,YAAR,CAAqB,eAArB,CAApB;AACA,WAAO,WAAW,CAAC,OAAnB;AACD,GAHD,CAGE,OAAO,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF;;AAbD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHardhatVersion = exports.getPackageJson = exports.findClosestPackageJson = exports.getPackageRoot = exports.getPackageJsonPath = void 0;\nconst find_up_1 = __importDefault(require(\"find-up\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst path_1 = __importDefault(require(\"path\"));\nfunction getPackageJsonPath() {\n    return findClosestPackageJson(__filename);\n}\nexports.getPackageJsonPath = getPackageJsonPath;\nfunction getPackageRoot() {\n    const packageJsonPath = getPackageJsonPath();\n    return path_1.default.dirname(packageJsonPath);\n}\nexports.getPackageRoot = getPackageRoot;\nfunction findClosestPackageJson(file) {\n    return find_up_1.default.sync(\"package.json\", { cwd: path_1.default.dirname(file) });\n}\nexports.findClosestPackageJson = findClosestPackageJson;\nasync function getPackageJson() {\n    const root = getPackageRoot();\n    return fs_extra_1.default.readJSON(path_1.default.join(root, \"package.json\"));\n}\nexports.getPackageJson = getPackageJson;\nfunction getHardhatVersion() {\n    const packageJsonPath = findClosestPackageJson(__filename);\n    if (packageJsonPath === null) {\n        return null;\n    }\n    try {\n        const packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);\n        return packageJson.version;\n    }\n    catch (e) {\n        return null;\n    }\n}\nexports.getHardhatVersion = getHardhatVersion;\n//# sourceMappingURL=packageInfo.js.map"]},"metadata":{},"sourceType":"script"}