{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.globSync = exports.glob = void 0;\n\nconst path = __importStar(require(\"path\"));\n\nconst util_1 = __importDefault(require(\"util\"));\n\nasync function glob(pattern, options = {}) {\n  const {\n    default: globModule\n  } = await Promise.resolve().then(() => __importStar(require(\"glob\")));\n  const files = await util_1.default.promisify(globModule)(pattern, options);\n  return files.map(path.normalize);\n}\n\nexports.glob = glob;\n\nfunction globSync(pattern, options = {}) {\n  const files = require(\"glob\").sync(pattern, options);\n\n  return files.map(path.normalize);\n}\n\nexports.globSync = globSync;","map":{"version":3,"sources":["../../src/internal/util/glob.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,IAAA,GAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEO,eAAe,IAAf,CACL,OADK,EAEL,OAAA,GAAuB,EAFlB,EAEoB;AAEzB,QAAM;AAAE,IAAA,OAAO,EAAE;AAAX,MAA0B,MAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,MAAA,YAAA,CAAA,OAAA,CAAa,MAAb,CAAA,CAAA,CAAhC;AACA,QAAM,KAAK,GAAG,MAAM,MAAA,CAAA,OAAA,CAAK,SAAL,CAAe,UAAf,EAA2B,OAA3B,EAAoC,OAApC,CAApB;AACA,SAAO,KAAK,CAAC,GAAN,CAAU,IAAI,CAAC,SAAf,CAAP;AACD;;AAPD,OAAA,CAAA,IAAA,GAAA,IAAA;;AASA,SAAgB,QAAhB,CAAyB,OAAzB,EAA0C,OAAA,GAAuB,EAAjE,EAAmE;AACjE,QAAM,KAAK,GAAG,OAAO,CAAC,MAAD,CAAP,CAAgB,IAAhB,CAAqB,OAArB,EAA8B,OAA9B,CAAd;;AACA,SAAO,KAAK,CAAC,GAAN,CAAU,IAAI,CAAC,SAAf,CAAP;AACD;;AAHD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.globSync = exports.glob = void 0;\nconst path = __importStar(require(\"path\"));\nconst util_1 = __importDefault(require(\"util\"));\nasync function glob(pattern, options = {}) {\n    const { default: globModule } = await Promise.resolve().then(() => __importStar(require(\"glob\")));\n    const files = await util_1.default.promisify(globModule)(pattern, options);\n    return files.map(path.normalize);\n}\nexports.glob = glob;\nfunction globSync(pattern, options = {}) {\n    const files = require(\"glob\").sync(pattern, options);\n    return files.map(path.normalize);\n}\nexports.globSync = globSync;\n//# sourceMappingURL=glob.js.map"]},"metadata":{},"sourceType":"script"}