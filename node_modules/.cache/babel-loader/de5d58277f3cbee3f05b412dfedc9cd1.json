{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\UserSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, FormButton, FormButton1, FormButton2, Form } from './UserElements';\nimport { FormWrap, FormContent, FormH1, FormLabel, FormInput, FormError } from '../Register/RegisterElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4, _errors$orcid, _errors$orcid2, _errors$orcid3, _errors$orcid4;\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createAInstance: \" + data.p_value, data.q_value, data.secret);\n      const transaction = await contract.createAInstance(data.p_value, data.q_value, 3534535345, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.secret);\n      const transaction = await contract.createBInstance(data.p_value, data.q_value, 3534535345, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormWrap, {\n      children: [/*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_createAInstance),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Create a new instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"p_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"p_value\",\n            placeholder: \"p value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Second parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"q_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"q_value\",\n            placeholder: \"q value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 74\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormButton1, {\n              type: \"submit\",\n              value: \"A generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormButton2, {\n              type: \"submit\",\n              value: \"B generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_createAInstance),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Search for instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"ORCID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"orcid\", {\n              required: true,\n              minLength: 16,\n              maxLength: 16,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"orcid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid = errors.orcid) === null || _errors$orcid === void 0 ? void 0 : _errors$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 68\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid2 = errors.orcid) === null || _errors$orcid2 === void 0 ? void 0 : _errors$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid3 = errors.orcid) === null || _errors$orcid3 === void 0 ? void 0 : _errors$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 69\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid4 = errors.orcid) === null || _errors$orcid4 === void 0 ? void 0 : _errors$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 67\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            value: \"Get instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, 2, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSection, \"vCuwL/mrjM7CzT8SmpQq5aP/oMI=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/UserSection/index.js"],"names":["React","useForm","generatorAddress","requestAccount","ethers","Generator","Container","FormButton","FormButton1","FormButton2","Form","FormWrap","FormContent","FormH1","FormLabel","FormInput","FormError","UserSection","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","async_createAInstance","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","console","log","p_value","q_value","secret","transaction","createAInstance","gasLimit","wait","async_createBInstance","createBInstance","required","max","min","pattern","type","minLength","maxLength","orcid"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n    Container,\r\n    FormButton,\r\n    FormButton1,\r\n    FormButton2,\r\n    Form\r\n} from './UserElements'\r\nimport {\r\n    FormWrap,\r\n    FormContent,\r\n    FormH1,\r\n    FormLabel,\r\n    FormInput,\r\n    FormError\r\n} from '../Register/RegisterElements'\r\n\r\nconst UserSection = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const {\r\n        register: register2,\r\n        reset: reset2,\r\n        handleSubmit: handleSubmit2,\r\n        formState: { errors: errors2 }\r\n    } = useForm();\r\n\r\n    async function async_createAInstance(data) { \r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          console.log(\"async_createAInstance: \" + data.p_value, data.q_value, data.secret);\r\n          const transaction = await contract.createAInstance(\r\n            data.p_value, \r\n            data.q_value,\r\n            3534535345,\r\n            {gasLimit: 12000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    async function async_createBInstance(data) { \r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.secret);\r\n          const transaction = await contract.createBInstance(\r\n            data.p_value, \r\n            data.q_value,\r\n            3534535345,\r\n            {gasLimit: 12000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FormWrap>\r\n                <FormContent>\r\n                    <Form key={1} onSubmit={handleSubmit(async_createAInstance)}>\r\n                        <FormH1>Create a new instance</FormH1>\r\n                            <FormLabel>First parameter</FormLabel>\r\n                            <FormInput {...register(\"p_value\", { \r\n                                required: true,\r\n                                max: 99,\r\n                                min: 1,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"p_value\" placeholder=\"p value\"/>\r\n                                {errors?.p_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n                                {errors?.p_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.p_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                            <FormLabel>Second parameter</FormLabel> \r\n                            <FormInput {...register(\"q_value\", { \r\n                                required: true,\r\n                                max: 99,\r\n                                min: 1,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"q_value\" placeholder=\"q value\"/>\r\n                                {errors?.q_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n                                {errors?.q_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.q_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError> }\r\n                                {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <div>\r\n                            <FormButton1 type=\"submit\"  value=\"A generator\"/>\r\n                            <FormButton2 type=\"submit\"  value=\"B generator\"/>\r\n                        </div>\r\n                    </Form>\r\n                </FormContent>\r\n                <FormContent>\r\n                    <Form key={2} onSubmit={handleSubmit(async_createAInstance)}>\r\n                        <FormH1>Search for instances</FormH1>\r\n                        <FormLabel>ORCID</FormLabel>\r\n                        <FormInput {...register(\"orcid\", { \r\n                            required: true,\r\n                            minLength: 16, \r\n                            maxLength: 16,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"orcid\"/>\r\n                            {errors?.orcid?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                            {errors?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                            {errors?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <FormButton type=\"submit\" value=\"Get instances\"/>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserSection;\r\n"]},"metadata":{},"sourceType":"module"}