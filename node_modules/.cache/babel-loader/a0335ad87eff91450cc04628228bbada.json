{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w10te\\\\Documents\\\\dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatorAddress = \"0xD111D95fd7263A34602Fe295CA7dcc51451e74f6\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [data, setData] = useState();\n  const [user, setUser] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  }\n\n  async function async_solveLastInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.solveLastInstance(data);\n      await transaction.wait();\n    }\n  }\n\n  async function async_regResearcher() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.regResearcher(user);\n      await transaction.wait();\n    }\n  } // -----------------------------------------\n\n\n  async function async_createInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createInstance({\n        gasLimit: 8000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getInstance();\n        setData(result);\n        console.log(result);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Researcher information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_regResearcher,\n      children: \"Set orcid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUser(e.target.value),\n      placeholder: \"orcid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Instance information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_createInstance,\n      children: \"Create instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_getInstance,\n      children: \"Get instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Set solution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_solveLastInstance,\n      children: \"Set hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setData(e.target.value),\n      placeholder: \"hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2dorKm69LoHFA+lFXzwR8Gcov0I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/w10te/Documents/dapp/src/App.js"],"names":["useState","ethers","Generator","generatorAddress","App","data","setData","user","setUser","requestAccount","window","ethereum","request","method","async_solveLastInstance","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","solveLastInstance","wait","async_regResearcher","regResearcher","async_createInstance","createInstance","gasLimit","async_getInstance","result","connect","getInstance","console","log","err","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'\n\n\n// Update with the contract address logged out to the CLI when it was deployed \nconst generatorAddress = \"0xD111D95fd7263A34602Fe295CA7dcc51451e74f6\"\n\nfunction App() {\n  // store greeting in local state\n  const [data, setData] = useState()\n  const [user, setUser] = useState()\n\n    // request access to the user's MetaMask account\n    async function requestAccount() {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n    }\n\n    async function async_solveLastInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.solveLastInstance(data)\n        await transaction.wait()\n      }\n    }\n\n    async function async_regResearcher() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.regResearcher(user)\n        await transaction.wait()\n      }\n    }\n\n    // -----------------------------------------\n    async function async_createInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.createInstance({\n          gasLimit: 8000000\n        })\n        await transaction.wait()\n      }\n    }\n\n    async function async_getInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n        try {\n          const signer = provider.getSigner()\n          const result = await contract.connect(signer).getInstance()\n          setData(result)\n          console.log(result)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n  return (\n    <div className=\"App\">\n      <h5>Researcher information</h5>\n      <button onClick={async_regResearcher}>Set orcid</button>\n      <input onChange={e => setUser(e.target.value)} placeholder=\"orcid\" />\n      <h5>Instance information</h5>\n      <button onClick={async_createInstance}>Create instance</button>\n      <button onClick={async_getInstance}>Get instance</button>\n      <h5>Set solution</h5>\n      <button onClick={async_solveLastInstance}>Set hash</button>\n      <input onChange={e => setData(e.target.value)} placeholder=\"hash\" />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}