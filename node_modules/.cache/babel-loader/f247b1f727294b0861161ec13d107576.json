{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\UserSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, FormButton } from './UserElements';\nimport { FormWrap, FormContent, Form, FormH1, FormLabel, FormInput, FormError } from '../Register/RegisterElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4;\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormWrap, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Create a new instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"p_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"p_value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 70\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Introduce an integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 65\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Introduce an integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 65\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Second parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"q_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"q_value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 70\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Introduce an integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 65\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Introduce an integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 65\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            value: \"A generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            value: \"B generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSection, \"Cq4nsBcfFXGKMJK/L8AH0edgYnU=\", false, function () {\n  return [useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/UserSection/index.js"],"names":["React","useForm","generatorAddress","requestAccount","ethers","Generator","Container","FormButton","FormWrap","FormContent","Form","FormH1","FormLabel","FormInput","FormError","UserSection","register","handleSubmit","reset","formState","errors","required","max","min","pattern","p_value","type","q_value"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n    Container,\r\n    FormButton\r\n} from './UserElements'\r\nimport {\r\n    FormWrap,\r\n    FormContent,\r\n    Form,\r\n    FormH1,\r\n    FormLabel,\r\n    FormInput,\r\n    FormError\r\n} from '../Register/RegisterElements'\r\n\r\nconst UserSection = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    return (\r\n        <Container>\r\n            <FormWrap>\r\n                <FormContent>\r\n                    <Form onSubmit={handleSubmit()}>\r\n                        <FormH1>Create a new instance</FormH1>\r\n                        <FormLabel>First parameter</FormLabel>\r\n                        <FormInput {...register(\"p_value\", { \r\n                            required: true,\r\n                            max: 99,\r\n                            min: 1,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"p_value\"/>\r\n                            {errors?.p_value?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.p_value?.type === \"max\" && <FormError>Introduce an integer number between [1, 99]</FormError> }\r\n                            {errors?.p_value?.type === \"min\" && <FormError>Introduce an integer number between [1, 99]</FormError> }\r\n                            {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <FormLabel>Second parameter</FormLabel>\r\n                        <FormInput {...register(\"q_value\", { \r\n                            required: true,\r\n                            max: 99,\r\n                            min: 1,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"q_value\"/>\r\n                            {errors?.q_value?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.q_value?.type === \"max\" && <FormError>Introduce an integer number between [1, 99]</FormError> }\r\n                            {errors?.q_value?.type === \"min\" && <FormError>Introduce an integer number between [1, 99]</FormError> }\r\n                            {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <FormButton type=\"submit\"  value=\"A generator\"/>\r\n                        <FormButton type=\"submit\"  value=\"B generator\"/>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserSection;\r\n"]},"metadata":{},"sourceType":"module"}