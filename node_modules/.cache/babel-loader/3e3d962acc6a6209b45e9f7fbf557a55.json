{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\Register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { Container, Form, FormButton } from './RegisterElements';\nimport { FormInput, FormWrap, FormH1, FormLabel, FormContent } from '../Signin/SigninElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$lastName;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Register your information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"firstName\", {\n                required: true,\n                maxLength: 20,\n                pattern: /^[A-Za-z]+$/i\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"First name cannot exceed 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Laste Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"lastName\", {\n                pattern: /^[A-Za-z]+$/i\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"age\", {\n                min: 18,\n                max: 99\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), errors.age && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You Must be older then 18 and younger then 99 years old\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"4U5JIe72+mTypWKzM6E18ESSUzM=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n/*\r\n                        <Form action=\"#\">\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel htmlFor='for'>Name</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormLabel htmlFor='for'>ORCID</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormButton type='submit'>Register</FormButton>\r\n                        </Form>\r\n\r\n                        */\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/Register/index.js"],"names":["React","useForm","Container","Form","FormButton","FormInput","FormWrap","FormH1","FormLabel","FormContent","Register","register","handleSubmit","watch","formState","errors","onSubmit","data","alert","JSON","stringify","required","maxLength","pattern","firstName","type","lastName","min","max","age"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { \r\n    Container, \r\n    Form, \r\n    FormButton\r\n } from './RegisterElements';\r\n\r\n import {\r\n    FormInput, \r\n    FormWrap,\r\n    FormH1,\r\n    FormLabel,\r\n    FormContent\r\n } from '../Signin/SigninElements'\r\n\r\nconst Register = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors }\r\n      } = useForm();\r\n    \r\n      const onSubmit = (data) => {\r\n        alert(JSON.stringify(data));\r\n      }; // your form submit function which will invoke after successful validation\r\n\r\n      \r\n    return (\r\n        <>\r\n            <Container>\r\n                <FormWrap>\r\n                    <FormContent>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel>First Name</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"firstName\", {\r\n                                required: true,\r\n                                maxLength: 20,\r\n                                pattern: /^[A-Za-z]+$/i\r\n                                })}\r\n                            />\r\n                            {errors?.firstName?.type === \"required\" && <p>This field is required</p>}\r\n                            {errors?.firstName?.type === \"maxLength\" && (\r\n                                <p>First name cannot exceed 20 characters</p>\r\n                            )}\r\n                            {errors?.firstName?.type === \"pattern\" && (\r\n                                <p>Alphabetical characters only</p>\r\n                            )}\r\n                            <FormLabel>Laste Name</FormLabel>\r\n                            <FormInput {...register(\"lastName\", { pattern: /^[A-Za-z]+$/i })} />\r\n                            {errors?.lastName?.type === \"pattern\" && (\r\n                                <p>Alphabetical characters only</p>\r\n                            )}\r\n                            <FormLabel>Age</FormLabel>\r\n                            <FormInput {...register(\"age\", { min: 18, max: 99 })} />\r\n                            {errors.age && (\r\n                                <p>You Must be older then 18 and younger then 99 years old</p>\r\n                            )}\r\n                            <input type=\"submit\" />\r\n                        </Form>\r\n                    </FormContent>\r\n                </FormWrap>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n\r\n/*\r\n                        <Form action=\"#\">\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel htmlFor='for'>Name</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormLabel htmlFor='for'>ORCID</FormLabel>\r\n                            <FormInput type='text'/>\r\n                            <FormButton type='submit'>Register</FormButton>\r\n                        </Form>\r\n\r\n                        */"]},"metadata":{},"sourceType":"module"}