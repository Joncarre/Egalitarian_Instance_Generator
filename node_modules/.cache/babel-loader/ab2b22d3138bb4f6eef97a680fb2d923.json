{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HARDHAT_PARAM_DEFINITIONS = void 0;\n\nconst types = __importStar(require(\"./argumentTypes\"));\n\nexports.HARDHAT_PARAM_DEFINITIONS = {\n  network: {\n    name: \"network\",\n    defaultValue: undefined,\n    description: \"The network to connect to.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  showStackTraces: {\n    name: \"showStackTraces\",\n    defaultValue: false,\n    description: \"Show stack traces.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  version: {\n    name: \"version\",\n    defaultValue: false,\n    description: \"Shows hardhat's version.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  help: {\n    name: \"help\",\n    defaultValue: false,\n    description: \"Shows this message, or a task's help if its name is provided\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  emoji: {\n    name: \"emoji\",\n    defaultValue: process.platform === \"darwin\",\n    description: \"Use emoji in messages.\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  config: {\n    name: \"config\",\n    defaultValue: undefined,\n    description: \"A Hardhat config file.\",\n    type: types.inputFile,\n    isFlag: false,\n    isOptional: true,\n    isVariadic: false\n  },\n  verbose: {\n    name: \"verbose\",\n    defaultValue: false,\n    description: \"Enables Hardhat verbose logging\",\n    type: types.boolean,\n    isFlag: true,\n    isOptional: true,\n    isVariadic: false\n  },\n  maxMemory: {\n    name: \"maxMemory\",\n    defaultValue: undefined,\n    description: \"The maximum amount of memory that Hardhat can use.\",\n    type: types.int,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  },\n  tsconfig: {\n    name: \"tsconfig\",\n    defaultValue: undefined,\n    description: \"Reserved hardhat argument -- Has no effect.\",\n    type: types.string,\n    isOptional: true,\n    isFlag: false,\n    isVariadic: false\n  }\n};","map":{"version":3,"sources":["../../../src/internal/core/params/hardhat-params.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HARDHAT_PARAM_DEFINITIONS = void 0;\nconst types = __importStar(require(\"./argumentTypes\"));\nexports.HARDHAT_PARAM_DEFINITIONS = {\n    network: {\n        name: \"network\",\n        defaultValue: undefined,\n        description: \"The network to connect to.\",\n        type: types.string,\n        isOptional: true,\n        isFlag: false,\n        isVariadic: false,\n    },\n    showStackTraces: {\n        name: \"showStackTraces\",\n        defaultValue: false,\n        description: \"Show stack traces.\",\n        type: types.boolean,\n        isFlag: true,\n        isOptional: true,\n        isVariadic: false,\n    },\n    version: {\n        name: \"version\",\n        defaultValue: false,\n        description: \"Shows hardhat's version.\",\n        type: types.boolean,\n        isFlag: true,\n        isOptional: true,\n        isVariadic: false,\n    },\n    help: {\n        name: \"help\",\n        defaultValue: false,\n        description: \"Shows this message, or a task's help if its name is provided\",\n        type: types.boolean,\n        isFlag: true,\n        isOptional: true,\n        isVariadic: false,\n    },\n    emoji: {\n        name: \"emoji\",\n        defaultValue: process.platform === \"darwin\",\n        description: \"Use emoji in messages.\",\n        type: types.boolean,\n        isFlag: true,\n        isOptional: true,\n        isVariadic: false,\n    },\n    config: {\n        name: \"config\",\n        defaultValue: undefined,\n        description: \"A Hardhat config file.\",\n        type: types.inputFile,\n        isFlag: false,\n        isOptional: true,\n        isVariadic: false,\n    },\n    verbose: {\n        name: \"verbose\",\n        defaultValue: false,\n        description: \"Enables Hardhat verbose logging\",\n        type: types.boolean,\n        isFlag: true,\n        isOptional: true,\n        isVariadic: false,\n    },\n    maxMemory: {\n        name: \"maxMemory\",\n        defaultValue: undefined,\n        description: \"The maximum amount of memory that Hardhat can use.\",\n        type: types.int,\n        isOptional: true,\n        isFlag: false,\n        isVariadic: false,\n    },\n    tsconfig: {\n        name: \"tsconfig\",\n        defaultValue: undefined,\n        description: \"Reserved hardhat argument -- Has no effect.\",\n        type: types.string,\n        isOptional: true,\n        isFlag: false,\n        isVariadic: false,\n    },\n};\n//# sourceMappingURL=hardhat-params.js.map"]},"metadata":{},"sourceType":"script"}