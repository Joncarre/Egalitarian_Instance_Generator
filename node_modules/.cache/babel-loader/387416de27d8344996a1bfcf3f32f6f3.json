{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\GitHub\\\\Egalitarian_Instance_Generator\\\\src\\\\components\\\\Navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport logo from 'images/logo.png';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  // MetaMask Wallet Connection\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n  const [url, setUrl] = useState(window.location.pathname);\n  useEffect(() => {\n    const initialSet = async () => {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n      addWalletListener();\n    };\n\n    initialSet();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  useEffect(() => {\n    return history.listen(location => {\n      setUrl(location.pathname); // if go to another page, first remove all the active class of NavLinks\n      // so the green bottom line will disappear\n      // then check current path, and activate responding class of NavLinks\n\n      const q1 = document.querySelector(\"#scrollToDapp\");\n      const q2 = document.querySelector(\"#scrollToHowItWorks\");\n      const q3 = document.querySelector(\"#scrollToAuction\");\n      const q4 = document.querySelector(\"#scrollToChainlink\");\n      q1.classList.remove('active');\n      q2.classList.remove('active');\n      q3.classList.remove('active');\n      q4.classList.remove('active');\n\n      switch (location.pathname) {\n        case \"/dapp\":\n          q1.classList.add('active');\n          break;\n\n        case \"/howitworks\":\n          // console.log(location.pathname);\n          q2.classList.add('active');\n          break;\n\n        case \"/auction\":\n          q3.classList.add('active');\n          break;\n\n        case \"/chainlink\":\n          q4.classList.add('active');\n          break;\n\n        default:\n          break;\n      }\n    });\n  }, [history]);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  const handleClick = path => {\n    // if at the front page, click NavLinks button will scroll to the location of element\n    // if not, click NavLinks button will navigate to clicked path\n    if (url !== \"/\" && path !== url) {\n      history.push(path);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      scrollNav: scrollNav,\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          to: \"/\",\n          onClick: toggleHome,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n          onClick: toggle,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToDapp\",\n              to: url === '/' ? 'dapp' : 'navbar',\n              smooth: true,\n              duration: 500,\n              spy: url === '/' ? true : false,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/dapp'),\n              children: \"\\xD0App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToHowItWorks\",\n              to: url === '/' ? 'how_it_works' : 'navbar',\n              smooth: true,\n              duration: 500,\n              spy: url === '/' ? true : false,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/howitworks'),\n              children: \"How it works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToAuction\",\n              to: url === '/' ? 'auction' : 'navbar',\n              smooth: true,\n              duration: 500,\n              spy: url === '/' ? true : false,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/auction'),\n              children: \"Auction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToChainlink\",\n              to: url === '/' ? 'chainlink' : 'navbar',\n              smooth: true,\n              duration: 500,\n              spy: url === '/' ? true : false,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/chainlink'),\n              children: \"Chainlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n          children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n            to: \"\",\n            id: \"walletButton\",\n            onClick: connectWalletPressed,\n            children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"AdqCsn0wbKFsSEg3NOwUmORSpE8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/GitHub/Egalitarian_Instance_Generator/src/components/Navbar/index.js"],"names":["React","useState","useEffect","useHistory","FaBars","animateScroll","scroll","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","logo","connectWallet","getCurrentWalletConnected","Navbar","toggle","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","history","url","setUrl","window","location","pathname","initialSet","address","addWalletListener","connectWalletPressed","walletResponse","ethereum","on","accounts","length","scrollNav","setScrollNav","changeNav","scrollY","addEventListener","listen","q1","document","querySelector","q2","q3","q4","classList","remove","add","toggleHome","scrollToTop","handleClick","path","push","String","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { FaBars } from 'react-icons/fa';\nimport { animateScroll as scroll } from 'react-scroll';\nimport {\n  Nav,\n  NavbarContainer,\n  NavLogo,\n  MobileIcon,\n  NavMenu,\n  NavItem,\n  NavLinks,\n  NavBtn,\n  NavBtnLink\n} from './NavbarElements';\nimport logo from 'images/logo.png';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\n\nconst Navbar = ({ toggle }) => {\n  // MetaMask Wallet Connection\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const history = useHistory()\n  const [url, setUrl] = useState(window.location.pathname);\n\n  useEffect(() => {\n    const initialSet = async () => {\n      const { address, status } = await getCurrentWalletConnected();\n      setWallet(address)\n      setStatus(status);\n      addWalletListener();\n    }\n    initialSet();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          🦊{\" \"}\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  const [scrollNav, setScrollNav] = useState(false)\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true)\n    } else {\n      setScrollNav(false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav)\n  }, [])\n\n  useEffect(() => {\n    return history.listen((location) => {\n      setUrl(location.pathname);\n      // if go to another page, first remove all the active class of NavLinks\n      // so the green bottom line will disappear\n      // then check current path, and activate responding class of NavLinks\n      const q1 = document.querySelector(\"#scrollToDapp\");\n      const q2 = document.querySelector(\"#scrollToHowItWorks\");\n      const q3 = document.querySelector(\"#scrollToAuction\");\n      const q4 = document.querySelector(\"#scrollToChainlink\");\n      q1.classList.remove('active');\n      q2.classList.remove('active');\n      q3.classList.remove('active');\n      q4.classList.remove('active');\n      switch (location.pathname) {\n        case \"/dapp\":\n          q1.classList.add('active');\n          break;\n        case \"/howitworks\":\n          // console.log(location.pathname);\n          q2.classList.add('active');\n          break;\n        case \"/auction\":\n          q3.classList.add('active');\n          break;\n        case \"/chainlink\":\n          q4.classList.add('active');\n          break;\n        default:\n          break;\n      }\n    })\n  }, [history])\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  }\n\n  const handleClick = (path) => {\n    // if at the front page, click NavLinks button will scroll to the location of element\n    // if not, click NavLinks button will navigate to clicked path\n    if (url !== \"/\" && path !== url) {\n      history.push(path);\n    }\n  }\n\n  return (\n    <>\n      <Nav scrollNav={scrollNav} id=\"navbar\">\n        <NavbarContainer>\n          <NavLogo to='/' onClick={toggleHome}>\n            <img src={logo} alt='logo' />\n          </NavLogo>\n          <MobileIcon onClick={toggle}>\n            <FaBars />\n          </MobileIcon>\n          <NavMenu>\n            <NavItem>\n              <NavLinks id=\"scrollToDapp\"\n                to={url === '/' ? 'dapp' : 'navbar'}\n                smooth={true}\n                duration={500}\n                spy={url === '/' ? true : false}\n                exact='true'\n                offset={-80}\n                onClick={() => handleClick('/dapp')}\n              >ÐApp</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks id=\"scrollToHowItWorks\"\n                to={url === '/' ? 'how_it_works' : 'navbar'}\n                smooth={true}\n                duration={500}\n                spy={url === '/' ? true : false}\n                exact='true'\n                offset={-80}\n                onClick={() => handleClick('/howitworks')}\n              >How it works</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks id=\"scrollToAuction\"\n                to={url === '/' ? 'auction' : 'navbar'}\n                smooth={true}\n                duration={500}\n                spy={url === '/' ? true : false}\n                exact='true'\n                offset={-80}\n                onClick={() => handleClick('/auction')}\n              >Auction</NavLinks>\n            </NavItem>\n            <NavItem>\n              <NavLinks id=\"scrollToChainlink\"\n                to={url === '/' ? 'chainlink' : 'navbar'}\n                smooth={true}\n                duration={500}\n                spy={url === '/' ? true : false}\n                exact='true'\n                offset={-80}\n                onClick={() => handleClick('/chainlink')}\n              >Chainlink</NavLinks>\n            </NavItem>\n          </NavMenu>\n          <NavBtn>\n            <NavBtnLink to=\"\" id=\"walletButton\" onClick={connectWalletPressed}>\n              {walletAddress.length > 0 ? (\"Connected: \" +\n                String(walletAddress).substring(0, 6) + \"...\" +\n                String(walletAddress).substring(38)) : (<span>Connect Wallet</span>)}\n            </NavBtnLink>\n          </NavBtn>\n        </NavbarContainer>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}