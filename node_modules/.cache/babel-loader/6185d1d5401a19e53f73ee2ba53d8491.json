{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\Signin\\\\index.js\";\nimport { React } from 'react';\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { FormWrap, FormContent, Form, FormH1, FormLabel, FormInput, FormButton, FormError } from '../Register/RegisterElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  var _errors, _errors$secret, _errors2, _errors2$secret, _errors3, _errors3$secret, _errors4, _errors4$secret;\n\n  async function async_checkPass(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_checkPass: \" + data.secret);\n      const transaction = await contract.checkPass(data.secret, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormWrap, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_checkPass),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Access to information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password from email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"secret\", {\n              required: true,\n              minLength: 10,\n              maxLength: 10,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), ((_errors = errors) === null || _errors === void 0 ? void 0 : (_errors$secret = _errors.secret) === null || _errors$secret === void 0 ? void 0 : _errors$secret.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 69\n          }, this), ((_errors2 = errors) === null || _errors2 === void 0 ? void 0 : (_errors2$secret = _errors2.secret) === null || _errors2$secret === void 0 ? void 0 : _errors2$secret.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 70\n          }, this), ((_errors3 = errors) === null || _errors3 === void 0 ? void 0 : (_errors3$secret = _errors3.secret) === null || _errors3$secret === void 0 ? void 0 : _errors3$secret.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 70\n          }, this), ((_errors4 = errors) === null || _errors4 === void 0 ? void 0 : (_errors4$secret = _errors4.secret) === null || _errors4$secret === void 0 ? void 0 : _errors4$secret.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 68\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/Signin/index.js"],"names":["React","generatorAddress","requestAccount","ethers","Generator","FormWrap","FormContent","Form","FormH1","FormLabel","FormInput","FormButton","FormError","SignIn","async_checkPass","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","console","log","secret","transaction","checkPass","gasLimit","wait","handleSubmit","register","required","minLength","maxLength","pattern","errors","type"],"mappings":";AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,cAAjD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wDAAtB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,IAHJ,EAIIC,MAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,UAPJ,EAQIC,SARJ,QASO,8BATP;;;AAWA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,iBAAeC,eAAf,CAA+BC,IAA/B,EAAqC;AACjC,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMf,cAAc,EAApB;AACA,YAAMgB,QAAQ,GAAG,IAAIf,MAAM,CAACgB,SAAP,CAAiBC,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,QAAQ,GAAG,IAAIpB,MAAM,CAACqB,QAAX,CAAoBvB,gBAApB,EAAsCG,SAAS,CAACqB,GAAhD,EAAqDJ,MAArD,CAAjB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBZ,IAAI,CAACa,MAAvC;AACA,YAAMC,WAAW,GAAG,MAAMN,QAAQ,CAACO,SAAT,CACxBf,IAAI,CAACa,MADmB,EAExB;AAACG,QAAAA,QAAQ,EAAE;AAAX,OAFwB,CAA1B;AAGA,YAAMF,WAAW,CAACG,IAAZ,EAAN;AACD;AACJ;;AAED,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,QAAD;AAAA,6BACI,QAAC,WAAD;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEC,YAAY,CAACnB,eAAD,CAA5B;AAAA,kCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,SAAD,OAAeoB,QAAQ,CAAC,QAAD,EAAW;AAC9BC,cAAAA,QAAQ,EAAE,IADoB;AAE9BC,cAAAA,SAAS,EAAE,EAFmB;AAG9BC,cAAAA,SAAS,EAAE,EAHmB;AAI9BC,cAAAA,OAAO,EAAE;AAJqB,aAAX,CAAvB;AAKI,YAAA,IAAI,EAAC,QALT;AAKkB,YAAA,IAAI,EAAC;AALvB;AAAA;AAAA;AAAA;AAAA,kBAHJ,EASS,YAAAC,MAAM,UAAN,4DAAQX,MAAR,kEAAgBY,IAAhB,MAAyB,UAAzB,iBAAuC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAThD,EAUS,aAAAD,MAAM,UAAN,+DAAQX,MAAR,oEAAgBY,IAAhB,MAAyB,WAAzB,iBAAwC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVjD,EAWS,aAAAD,MAAM,UAAN,+DAAQX,MAAR,oEAAgBY,IAAhB,MAAyB,WAAzB,iBAAwC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXjD,EAYS,aAAAD,MAAM,UAAN,+DAAQX,MAAR,oEAAgBY,IAAhB,MAAyB,SAAzB,iBAAsC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZ/C,eAaI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAtCD;;KAAM3B,M;AAwCN,eAAeA,MAAf","sourcesContent":["import { React } from 'react';\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n    FormWrap,\r\n    FormContent,\r\n    Form,\r\n    FormH1,\r\n    FormLabel,\r\n    FormInput,\r\n    FormButton,\r\n    FormError\r\n} from '../Register/RegisterElements'\r\n\r\nconst SignIn = () => {\r\n    async function async_checkPass(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n          console.log(\"async_checkPass: \" + data.secret);\r\n          const transaction = await contract.checkPass(\r\n            data.secret,\r\n            {gasLimit: 12000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <FormWrap>\r\n                <FormContent>\r\n                    <Form onSubmit={handleSubmit(async_checkPass)}>\r\n                        <FormH1>Access to information</FormH1>\r\n                        <FormLabel>Password from email</FormLabel>\r\n                        <FormInput {...register(\"secret\", { \r\n                            required: true,\r\n                            minLength: 10, \r\n                            maxLength: 10,\r\n                            pattern: /^[0-9\\b]+$/\r\n                        })} type=\"number\" name=\"secret\"/>\r\n                            {errors?.secret?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.secret?.type === \"minLength\" && <FormError>It must be a number of 10 digits</FormError> }\r\n                            {errors?.secret?.type === \"maxLength\" && <FormError>It must be a number of 10 digits</FormError> }\r\n                            {errors?.secret?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                        <FormButton type=\"submit\"/>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}