{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadTsNode = exports.isTypescriptSupported = exports.isRunningWithTypescript = exports.willRunWithTypescript = void 0;\n\nconst config_loading_1 = require(\"./config/config-loading\");\n\nconst errors_1 = require(\"./errors\");\n\nconst errors_list_1 = require(\"./errors-list\");\n\nconst execution_mode_1 = require(\"./execution-mode\");\n\nlet cachedIsTypescriptSupported;\n/**\n * Returns true if Hardhat will run in using typescript mode.\n * @param configPath The config path if provider by the user.\n */\n\nfunction willRunWithTypescript(configPath) {\n  const config = config_loading_1.resolveConfigPath(configPath);\n  return isTypescriptFile(config);\n}\n\nexports.willRunWithTypescript = willRunWithTypescript;\n/**\n * Returns true if an Hardhat is already running with typescript.\n */\n\nfunction isRunningWithTypescript(config) {\n  return isTypescriptFile(config.paths.configFile);\n}\n\nexports.isRunningWithTypescript = isRunningWithTypescript;\n\nfunction isTypescriptSupported() {\n  if (cachedIsTypescriptSupported === undefined) {\n    try {\n      // We resolve these from Hardhat's installation.\n      require.resolve(\"typescript\");\n\n      require.resolve(\"ts-node\");\n\n      cachedIsTypescriptSupported = true;\n    } catch (_a) {\n      cachedIsTypescriptSupported = false;\n    }\n  }\n\n  return cachedIsTypescriptSupported;\n}\n\nexports.isTypescriptSupported = isTypescriptSupported;\n\nfunction loadTsNode() {\n  try {\n    require.resolve(\"typescript\");\n  } catch (error) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TYPESCRIPT_NOT_INSTALLED);\n  }\n\n  try {\n    require.resolve(\"ts-node\");\n  } catch (error) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TS_NODE_NOT_INSTALLED);\n  } // If we are running tests we just want to transpile\n\n\n  if (execution_mode_1.isRunningHardhatCoreTests()) {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    require(\"ts-node/register/transpile-only\");\n\n    return;\n  } // See: https://github.com/nomiclabs/hardhat/issues/265\n\n\n  if (process.env.TS_NODE_FILES === undefined) {\n    process.env.TS_NODE_FILES = \"true\";\n  } // eslint-disable-next-line import/no-extraneous-dependencies\n\n\n  require(\"ts-node/register\");\n}\n\nexports.loadTsNode = loadTsNode;\n\nfunction isTypescriptFile(path) {\n  return path.endsWith(\".ts\");\n}","map":{"version":3,"sources":["../../src/internal/core/typescript-support.ts"],"names":[],"mappings":";;;;;;;AAEA,MAAA,gBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAI,2BAAJ;AAEA;;;AAGG;;AACH,SAAgB,qBAAhB,CAAsC,UAAtC,EAAyD;AACvD,QAAM,MAAM,GAAG,gBAAA,CAAA,iBAAA,CAAkB,UAAlB,CAAf;AACA,SAAO,gBAAgB,CAAC,MAAD,CAAvB;AACD;;AAHD,OAAA,CAAA,qBAAA,GAAA,qBAAA;AAKA;;AAEG;;AACH,SAAgB,uBAAhB,CAAwC,MAAxC,EAA6D;AAC3D,SAAO,gBAAgB,CAAC,MAAM,CAAC,KAAP,CAAa,UAAd,CAAvB;AACD;;AAFD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAIA,SAAgB,qBAAhB,GAAqC;AACnC,MAAI,2BAA2B,KAAK,SAApC,EAA+C;AAC7C,QAAI;AACF;AACA,MAAA,OAAO,CAAC,OAAR,CAAgB,YAAhB;;AACA,MAAA,OAAO,CAAC,OAAR,CAAgB,SAAhB;;AACA,MAAA,2BAA2B,GAAG,IAA9B;AACD,KALD,CAKE,OAAA,EAAA,EAAM;AACN,MAAA,2BAA2B,GAAG,KAA9B;AACD;AACF;;AAED,SAAO,2BAAP;AACD;;AAbD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAeA,SAAgB,UAAhB,GAA0B;AACxB,MAAI;AACF,IAAA,OAAO,CAAC,OAAR,CAAgB,YAAhB;AACD,GAFD,CAEE,OAAO,KAAP,EAAc;AACd,UAAM,IAAI,QAAA,CAAA,YAAJ,CAAiB,aAAA,CAAA,MAAA,CAAO,OAAP,CAAe,wBAAhC,CAAN;AACD;;AAED,MAAI;AACF,IAAA,OAAO,CAAC,OAAR,CAAgB,SAAhB;AACD,GAFD,CAEE,OAAO,KAAP,EAAc;AACd,UAAM,IAAI,QAAA,CAAA,YAAJ,CAAiB,aAAA,CAAA,MAAA,CAAO,OAAP,CAAe,qBAAhC,CAAN;AACD,GAXuB,CAaxB;;;AACA,MAAI,gBAAA,CAAA,yBAAA,EAAJ,EAAiC;AAC/B;AACA,IAAA,OAAO,CAAC,iCAAD,CAAP;;AACA;AACD,GAlBuB,CAoBxB;;;AACA,MAAI,OAAO,CAAC,GAAR,CAAY,aAAZ,KAA8B,SAAlC,EAA6C;AAC3C,IAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,GAA4B,MAA5B;AACD,GAvBuB,CAyBxB;;;AACA,EAAA,OAAO,CAAC,kBAAD,CAAP;AACD;;AA3BD,OAAA,CAAA,UAAA,GAAA,UAAA;;AA6BA,SAAS,gBAAT,CAA0B,IAA1B,EAAsC;AACpC,SAAO,IAAI,CAAC,QAAL,CAAc,KAAd,CAAP;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadTsNode = exports.isTypescriptSupported = exports.isRunningWithTypescript = exports.willRunWithTypescript = void 0;\nconst config_loading_1 = require(\"./config/config-loading\");\nconst errors_1 = require(\"./errors\");\nconst errors_list_1 = require(\"./errors-list\");\nconst execution_mode_1 = require(\"./execution-mode\");\nlet cachedIsTypescriptSupported;\n/**\n * Returns true if Hardhat will run in using typescript mode.\n * @param configPath The config path if provider by the user.\n */\nfunction willRunWithTypescript(configPath) {\n    const config = config_loading_1.resolveConfigPath(configPath);\n    return isTypescriptFile(config);\n}\nexports.willRunWithTypescript = willRunWithTypescript;\n/**\n * Returns true if an Hardhat is already running with typescript.\n */\nfunction isRunningWithTypescript(config) {\n    return isTypescriptFile(config.paths.configFile);\n}\nexports.isRunningWithTypescript = isRunningWithTypescript;\nfunction isTypescriptSupported() {\n    if (cachedIsTypescriptSupported === undefined) {\n        try {\n            // We resolve these from Hardhat's installation.\n            require.resolve(\"typescript\");\n            require.resolve(\"ts-node\");\n            cachedIsTypescriptSupported = true;\n        }\n        catch (_a) {\n            cachedIsTypescriptSupported = false;\n        }\n    }\n    return cachedIsTypescriptSupported;\n}\nexports.isTypescriptSupported = isTypescriptSupported;\nfunction loadTsNode() {\n    try {\n        require.resolve(\"typescript\");\n    }\n    catch (error) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TYPESCRIPT_NOT_INSTALLED);\n    }\n    try {\n        require.resolve(\"ts-node\");\n    }\n    catch (error) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.TS_NODE_NOT_INSTALLED);\n    }\n    // If we are running tests we just want to transpile\n    if (execution_mode_1.isRunningHardhatCoreTests()) {\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        require(\"ts-node/register/transpile-only\");\n        return;\n    }\n    // See: https://github.com/nomiclabs/hardhat/issues/265\n    if (process.env.TS_NODE_FILES === undefined) {\n        process.env.TS_NODE_FILES = \"true\";\n    }\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    require(\"ts-node/register\");\n}\nexports.loadTsNode = loadTsNode;\nfunction isTypescriptFile(path) {\n    return path.endsWith(\".ts\");\n}\n//# sourceMappingURL=typescript-support.js.map"]},"metadata":{},"sourceType":"script"}