{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w10te\\\\Documents\\\\dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatorAddress = \"0x38c9cD90c89fcE9200E86b1963b2f5f7f2E9cF59\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [data, setData] = useState();\n  const [userInput, setUserInput] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // call the smart contract, read the current value\n\n\n  async function asyncFetchResearcher() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = contract.connect(signer).getResearcher();\n        setData(data);\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  } // call the smart contract, send a new researcher\n\n\n  async function asyncRegResearcher() {\n    if (!userInput) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.regResearcher(userInput);\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: asyncFetchResearcher,\n      children: [\"Fetch Researcher \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: asyncRegResearcher,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"name, orcid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WydIZOCLvNrO0tLIuYoowXzK2sA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/w10te/Documents/dapp/src/App.js"],"names":["useState","ethers","Generator","generatorAddress","App","data","setData","userInput","setUserInput","requestAccount","window","ethereum","request","method","asyncFetchResearcher","provider","providers","Web3Provider","contract","Contract","abi","signer","getSigner","result","connect","getResearcher","console","log","err","asyncRegResearcher","transaction","regResearcher","wait","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,oDAAtB,C,CAGA;;;AACA,MAAMC,gBAAgB,GAAG,4CAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C,CAHa,CAKX;;AACA,iBAAeS,cAAf,GAAgC;AAC9B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACD,GARU,CAUX;;;AACA,iBAAeC,oBAAf,GAAsC;AACpC,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMI,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMO,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,gBAApB,EAAsCD,SAAS,CAACkB,GAAhD,EAAqDL,QAArD,CAAjB;;AACA,UAAI;AACF,cAAMM,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACA,cAAMC,MAAM,GAAGL,QAAQ,CAACM,OAAT,CAAiBH,MAAjB,EAAyBI,aAAzB,EAAf;AACAnB,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBtB,IAAtB;AACD,OALD,CAKE,OAAOuB,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;AACD;AACF;AACF,GAxBU,CA0BX;;;AACA,iBAAeC,kBAAf,GAAoC;AAClC,QAAI,CAACtB,SAAL,EAAgB;;AAChB,QAAI,OAAOG,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMF,cAAc,EAApB;AACA,YAAMM,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMU,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACA,YAAMJ,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,gBAApB,EAAsCD,SAAS,CAACkB,GAAhD,EAAqDC,MAArD,CAAjB;AACA,YAAMS,WAAW,GAAG,MAAMZ,QAAQ,CAACa,aAAT,CAAuBxB,SAAvB,CAA1B;AACA,YAAMuB,WAAW,CAACE,IAAZ,EAAN;AACD;AACF;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAElB,oBAAjB;AAAA,sCAA0DT,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEwB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,QAAQ,EAAEI,CAAC,IAAIzB,YAAY,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC;AAAoD,MAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhDQ/B,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'\n\n\n// Update with the contract address logged out to the CLI when it was deployed \nconst generatorAddress = \"0x38c9cD90c89fcE9200E86b1963b2f5f7f2E9cF59\"\n\nfunction App() {\n  // store greeting in local state\n  const [data, setData] = useState()\n  const [userInput, setUserInput] = useState()\n\n    // request access to the user's MetaMask account\n    async function requestAccount() {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n    }\n\n    // call the smart contract, read the current value\n    async function asyncFetchResearcher() {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n        try {\n          const signer = provider.getSigner()\n          const result = contract.connect(signer).getResearcher()\n          setData(data)\n          console.log('data: ', data)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n    // call the smart contract, send a new researcher\n    async function asyncRegResearcher() {\n      if (!userInput) return\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.regResearcher(userInput)\n        await transaction.wait()\n      }\n    }\n    \n  return (\n    <div className=\"App\">\n      <p>Form</p>\n      <button onClick={asyncFetchResearcher}>Fetch Researcher { data }</button>\n      <button onClick={asyncRegResearcher}>Register</button>\n      <input onChange={e => setUserInput(e.target.value)} placeholder=\"name, orcid\" />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}