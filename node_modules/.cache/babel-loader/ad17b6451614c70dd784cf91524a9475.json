{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.panicErrorCodeToMessage = void 0;\n\nfunction panicErrorCodeToMessage(errorCode) {\n  const reason = panicErrorCodeToReason(errorCode);\n\n  if (reason !== undefined) {\n    return `reverted with panic code 0x${errorCode.toString(16)} (${reason})`;\n  }\n\n  return `reverted with unknown panic code 0x${errorCode.toString(16)}`;\n}\n\nexports.panicErrorCodeToMessage = panicErrorCodeToMessage;\n\nfunction panicErrorCodeToReason(errorCode) {\n  switch (errorCode.toNumber()) {\n    case 0x1:\n      return \"Assertion error\";\n\n    case 0x11:\n      return \"Arithmetic operation underflowed or overflowed outside of an unchecked block\";\n\n    case 0x12:\n      return \"Division or modulo division by zero\";\n\n    case 0x21:\n      return \"Tried to convert a value into an enum, but the value was too big or negative\";\n\n    case 0x22:\n      return \"Incorrectly encoded storage byte array\";\n\n    case 0x31:\n      return \".pop() was called on an empty array\";\n\n    case 0x32:\n      return \"Array accessed at an out-of-bounds or negative index\";\n\n    case 0x41:\n      return \"Too much memory was allocated, or an array was created that is too large\";\n\n    case 0x51:\n      return \"Called a zero-initialized variable of internal function type\";\n  }\n}","map":{"version":3,"sources":["../../../src/internal/hardhat-network/stack-traces/panic-errors.ts"],"names":[],"mappings":";;;;;;;AAEA,SAAgB,uBAAhB,CAAwC,SAAxC,EAAqD;AACnD,QAAM,MAAM,GAAG,sBAAsB,CAAC,SAAD,CAArC;;AAEA,MAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,WAAO,8BAA8B,SAAS,CAAC,QAAV,CAAmB,EAAnB,CAAsB,KAAK,MAAM,GAAtE;AACD;;AAED,SAAO,sCAAsC,SAAS,CAAC,QAAV,CAAmB,EAAnB,CAAsB,EAAnE;AACD;;AARD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAUA,SAAS,sBAAT,CAAgC,SAAhC,EAA6C;AAC3C,UAAQ,SAAS,CAAC,QAAV,EAAR;AACE,SAAK,GAAL;AACE,aAAO,iBAAP;;AACF,SAAK,IAAL;AACE,aAAO,8EAAP;;AACF,SAAK,IAAL;AACE,aAAO,qCAAP;;AACF,SAAK,IAAL;AACE,aAAO,8EAAP;;AACF,SAAK,IAAL;AACE,aAAO,wCAAP;;AACF,SAAK,IAAL;AACE,aAAO,qCAAP;;AACF,SAAK,IAAL;AACE,aAAO,sDAAP;;AACF,SAAK,IAAL;AACE,aAAO,0EAAP;;AACF,SAAK,IAAL;AACE,aAAO,8DAAP;AAlBJ;AAoBD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.panicErrorCodeToMessage = void 0;\nfunction panicErrorCodeToMessage(errorCode) {\n    const reason = panicErrorCodeToReason(errorCode);\n    if (reason !== undefined) {\n        return `reverted with panic code 0x${errorCode.toString(16)} (${reason})`;\n    }\n    return `reverted with unknown panic code 0x${errorCode.toString(16)}`;\n}\nexports.panicErrorCodeToMessage = panicErrorCodeToMessage;\nfunction panicErrorCodeToReason(errorCode) {\n    switch (errorCode.toNumber()) {\n        case 0x1:\n            return \"Assertion error\";\n        case 0x11:\n            return \"Arithmetic operation underflowed or overflowed outside of an unchecked block\";\n        case 0x12:\n            return \"Division or modulo division by zero\";\n        case 0x21:\n            return \"Tried to convert a value into an enum, but the value was too big or negative\";\n        case 0x22:\n            return \"Incorrectly encoded storage byte array\";\n        case 0x31:\n            return \".pop() was called on an empty array\";\n        case 0x32:\n            return \"Array accessed at an out-of-bounds or negative index\";\n        case 0x41:\n            return \"Too much memory was allocated, or an array was created that is too large\";\n        case 0x51:\n            return \"Called a zero-initialized variable of internal function type\";\n    }\n}\n//# sourceMappingURL=panic-errors.js.map"]},"metadata":{},"sourceType":"script"}