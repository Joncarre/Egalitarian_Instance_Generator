{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\Register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from \"emailjs-com\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, Form, FormButton, FormError, FormInput, FormWrap, FormH1, FormLabel, FormContent } from './RegisterElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$email, _errors$email2, _errors$orcid, _errors$orcid2, _errors$orcid3, _errors$orcid4;\n\n  var sha256 = require('js-sha256');\n\n  const form = useRef();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const sendEmail = e => {\n    e.preventDefault();\n    console.log(form.current); // Get hash\n\n    var hash = sha256(data.orcid); // Set hash\n\n    e.target.user_orcid.value = hash; // Send email\n\n    emailjs.sendForm('dapp_gmail', 'dapp_mail_template', form.current, 'user_8Njq6OjGUsVPoTG1GpG30').then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    }); // Clean form\n\n    e.target.reset(); // Execute the transaction to stored the information in the blockchain\n\n    async_setResearcher();\n  };\n\n  function cutHash(elem) {\n    var cut = elem.replace(/[^0-9]/g, '');\n    var result = cut.substring(0, 10);\n    return result;\n  }\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      var secret = 21212121;\n      console.log(\"async_setResearcher: \" + secret, data.name, data.email, data.orcid);\n      const transaction = await contract.setResearcher(secret, data.name, data.email, data.orcid, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            ref: form,\n            onSubmit: handleSubmit(sendEmail),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Register your information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"name\", {\n                required: true,\n                maxLength: 20,\n                pattern: /^[A-Za-z]+$/i\n              }),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 71\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"First name cannot exceed 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"email\", {\n                required: true,\n                pattern: /\\S+@\\S+\\.\\S+/\n              }),\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Entered value does not match email format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"ORCID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"orcid\", {\n                required: true,\n                minLength: 16,\n                maxLength: 16,\n                pattern: /^[0-9\\b]+$/\n              }),\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid = errors.orcid) === null || _errors$orcid === void 0 ? void 0 : _errors$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid2 = errors.orcid) === null || _errors$orcid2 === void 0 ? void 0 : _errors$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 73\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid3 = errors.orcid) === null || _errors$orcid3 === void 0 ? void 0 : _errors$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 73\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid4 = errors.orcid) === null || _errors$orcid4 === void 0 ? void 0 : _errors$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Numerical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\",\n              to: \"/user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"rgg6VH/W2zqwQRkVSCgYlvDSl2c=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/Register/index.js"],"names":["React","useRef","useForm","emailjs","generatorAddress","requestAccount","ethers","Generator","Container","Form","FormButton","FormError","FormInput","FormWrap","FormH1","FormLabel","FormContent","Register","sha256","require","form","register","handleSubmit","formState","errors","sendEmail","e","preventDefault","console","log","current","hash","data","orcid","target","user_orcid","value","sendForm","then","result","text","error","reset","async_setResearcher","cutHash","elem","cut","replace","substring","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","secret","name","email","transaction","setResearcher","gasLimit","wait","required","maxLength","pattern","type","minLength"],"mappings":"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","sourcesContent":["import { React, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport { \r\n    Container, \r\n    Form, \r\n    FormButton,\r\n    FormError,\r\n    FormInput, \r\n    FormWrap,\r\n    FormH1,\r\n    FormLabel,\r\n    FormContent\r\n } from './RegisterElements';\r\n\r\nconst Register = () => {\r\n    var sha256 = require('js-sha256');\r\n\r\n    const form = useRef(); \r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm();\r\n    \r\n    const sendEmail = (e) => {\r\n      e.preventDefault();\r\n      console.log(form.current);\r\n      // Get hash\r\n      var hash = sha256(data.orcid);\r\n      // Set hash\r\n      e.target.user_orcid.value = hash;\r\n      // Send email\r\n      emailjs.sendForm('dapp_gmail', 'dapp_mail_template', form.current, 'user_8Njq6OjGUsVPoTG1GpG30')\r\n        .then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n        // Clean form\r\n        e.target.reset();\r\n        // Execute the transaction to stored the information in the blockchain\r\n        async_setResearcher();\r\n    };\r\n  \r\n    function cutHash(elem){\r\n      var cut = elem.replace(/[^0-9]/g, '');\r\n      var result = cut.substring(0,10);\r\n      return result;\r\n    }\r\n\r\n    async function async_setResearcher(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n\r\n          var secret = 21212121;\r\n          console.log(\"async_setResearcher: \" + secret, data.name, data.email, data.orcid);\r\n          const transaction = await contract.setResearcher(\r\n            secret,\r\n            data.name, \r\n            data.email,\r\n            data.orcid,\r\n            {gasLimit: 12000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <Container>\r\n                <FormWrap>\r\n                    <FormContent>\r\n                        <Form ref={form} onSubmit={handleSubmit(sendEmail)}>\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"name\", {\r\n                                required: true,\r\n                                maxLength: 20,\r\n                                pattern: /^[A-Za-z]+$/i\r\n                            })} type=\"text\"/>\r\n                                {errors?.name?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.name?.type === \"maxLength\" && <FormError>First name cannot exceed 20 characters</FormError>}\r\n                                {errors?.name?.type === \"pattern\" && <FormError>Alphabetical characters only</FormError>}\r\n                            <FormLabel>Email</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"email\", {\r\n                                required: true,\r\n                                pattern: /\\S+@\\S+\\.\\S+/\r\n                            })} type=\"email\"/>\r\n                                {errors?.email?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.email?.type === \"pattern\" && <FormError>Entered value does not match email format</FormError>}\r\n\r\n                            <FormLabel>ORCID</FormLabel>\r\n                            <FormInput {...register(\"orcid\", { \r\n                                required: true,\r\n                                minLength: 16, \r\n                                maxLength: 16,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\"/>\r\n                                {errors?.orcid?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                            <FormButton type=\"submit\" to='/user'/>\r\n                        </Form>\r\n                    </FormContent>\r\n                </FormWrap>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}