{"ast":null,"code":"import React from 'react';\nconst clausesLength = 3; // Builds the instance(s) into a friendly way\n\nfunction buildInstance(arr) {} // Builds the chain as a string\n\n\nfunction buildChain(_oldChain) {\n  let result = \"\";\n  let array = Array.from(_oldChain);\n\n  while (array.length > 1) {\n    result += \"(\";\n\n    for (let i = 0; i < clausesLength; i++) {\n      if (getBoolean) result += array.shift();else result += \"¬\" + array.shift();\n      if (i < clausesLength - 1) result += \" v \";\n    }\n\n    result += \")\";\n    if (array.length > 1) result += \" ^ \";\n  }\n\n  return result;\n} // Converts a hexadecimal number to decimal number\n\n\nfunction hexToDecimal(_hexNumber) {\n  return parseInt(_hexNumber, 16);\n} // Builds the date as a date format\n\n\nfunction buildDate(_oldDate) {\n  let newDate = new Date(parseInt(_oldDate._hex.slice(2), 16) * 1000);\n  let result = newDate.getFullYear() + \"/\" + newDate.getMonth() + \"/\" + newDate.getDate() + \" \" + newDate.getHours() + \":\" + newDate.getMinutes();\n  return result;\n} // Return 'true' or 'false' with 50% probability\n\n\nfunction getBoolean() {\n  if (Math.random() >= 50) return true;else return false;\n}\n\nexport default buildInstance;","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/UserSection/supportFunctions.js"],"names":["React","clausesLength","buildInstance","arr","buildChain","_oldChain","result","array","Array","from","length","i","getBoolean","shift","hexToDecimal","_hexNumber","parseInt","buildDate","_oldDate","newDate","Date","_hex","slice","getFullYear","getMonth","getDate","getHours","getMinutes","Math","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG,CAAtB,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA2B,CAE1B,C,CAED;;;AACA,SAASC,UAAT,CAAoBC,SAApB,EAA8B;AAC1B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAX,CAAZ;;AACA,SAAME,KAAK,CAACG,MAAN,GAAe,CAArB,EAAuB;AACnBJ,IAAAA,MAAM,IAAI,GAAV;;AACA,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,aAAnB,EAAkCU,CAAC,EAAnC,EAAsC;AAClC,UAAGC,UAAH,EACIN,MAAM,IAAIC,KAAK,CAACM,KAAN,EAAV,CADJ,KAGIP,MAAM,IAAI,MAAMC,KAAK,CAACM,KAAN,EAAhB;AACJ,UAAGF,CAAC,GAAGV,aAAa,GAAC,CAArB,EACIK,MAAM,IAAI,KAAV;AACP;;AACDA,IAAAA,MAAM,IAAI,GAAV;AACA,QAAGC,KAAK,CAACG,MAAN,GAAe,CAAlB,EACIJ,MAAM,IAAI,KAAV;AACP;;AACD,SAAOA,MAAP;AACH,C,CAED;;;AACA,SAASQ,YAAT,CAAsBC,UAAtB,EAAiC;AAC7B,SAAOC,QAAQ,CAACD,UAAD,EAAa,EAAb,CAAf;AACH,C,CAED;;;AACA,SAASE,SAAT,CAAmBC,QAAnB,EAA4B;AACxB,MAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASJ,QAAQ,CAACE,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAD,EAAyB,EAAzB,CAAR,GAAqC,IAA9C,CAAd;AACA,MAAIhB,MAAM,GAAGa,OAAO,CAACI,WAAR,KAAwB,GAAxB,GAA8BJ,OAAO,CAACK,QAAR,EAA9B,GAAmD,GAAnD,GAAyDL,OAAO,CAACM,OAAR,EAAzD,GAA8E,GAA9E,GAAoFN,OAAO,CAACO,QAAR,EAApF,GAAyG,GAAzG,GAA+GP,OAAO,CAACQ,UAAR,EAA5H;AACA,SAAOrB,MAAP;AACH,C,CAED;;;AACA,SAASM,UAAT,GAAqB;AACjB,MAAGgB,IAAI,CAACC,MAAL,MAAiB,EAApB,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP;;AAED,eAAe3B,aAAf","sourcesContent":["import React from 'react';\r\n\r\nconst clausesLength = 3;\r\n\r\n// Builds the instance(s) into a friendly way\r\nfunction buildInstance(arr){\r\n\r\n}\r\n\r\n// Builds the chain as a string\r\nfunction buildChain(_oldChain){\r\n    let result = \"\";\r\n    let array = Array.from(_oldChain);\r\n    while(array.length > 1){\r\n        result += \"(\";\r\n        for(let i = 0; i < clausesLength; i++){\r\n            if(getBoolean)\r\n                result += array.shift();\r\n            else\r\n                result += \"¬\" + array.shift();\r\n            if(i < clausesLength-1) \r\n                result += \" v \";\r\n        }\r\n        result += \")\";\r\n        if(array.length > 1)\r\n            result += \" ^ \";\r\n    }\r\n    return result;\r\n}\r\n\r\n// Converts a hexadecimal number to decimal number\r\nfunction hexToDecimal(_hexNumber){\r\n    return parseInt(_hexNumber, 16);\r\n}\r\n\r\n// Builds the date as a date format\r\nfunction buildDate(_oldDate){\r\n    let newDate = new Date(parseInt(_oldDate._hex.slice(2), 16)*1000);\r\n    let result = newDate.getFullYear() + \"/\" + newDate.getMonth() + \"/\" + newDate.getDate()  + \" \" + newDate.getHours() + \":\" + newDate.getMinutes();\r\n    return result;\r\n}\r\n\r\n// Return 'true' or 'false' with 50% probability\r\nfunction getBoolean(){\r\n    if(Math.random() >= 50)\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport default buildInstance;"]},"metadata":{},"sourceType":"module"}