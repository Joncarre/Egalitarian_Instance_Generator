{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.download = void 0;\n\nconst fs_1 = __importDefault(require(\"fs\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst util_1 = __importDefault(require(\"util\"));\n\nasync function download(url, filePath, timeoutMillis = 10000) {\n  const {\n    pipeline\n  } = await Promise.resolve().then(() => __importStar(require(\"stream\")));\n  const {\n    default: fetch\n  } = await Promise.resolve().then(() => __importStar(require(\"node-fetch\")));\n  const streamPipeline = util_1.default.promisify(pipeline);\n  const fetchOptions = {\n    timeout: timeoutMillis,\n    agent: undefined\n  }; // Check if Proxy is set https\n\n  if (process.env.HTTPS_PROXY !== undefined) {\n    // Create the proxy from the environment variables\n    const proxy = process.env.HTTPS_PROXY;\n    fetchOptions.agent = new https_proxy_agent_1.default.HttpsProxyAgent(proxy);\n  } // Check if Proxy is set http and `fetchOptions.agent` was not already set for https\n\n\n  if (process.env.HTTP_PROXY !== undefined && fetchOptions.agent === undefined) {\n    // Create the proxy from the environment variables\n    const proxy = process.env.HTTP_PROXY;\n    fetchOptions.agent = new https_proxy_agent_1.default.HttpsProxyAgent(proxy);\n  } // Fetch the url\n\n\n  const response = await fetch(url, fetchOptions);\n\n  if (response.ok && response.body !== null) {\n    await fs_extra_1.default.ensureDir(path_1.default.dirname(filePath));\n    return streamPipeline(response.body, fs_1.default.createWriteStream(filePath));\n  } // Consume the response stream and discard its result\n  // See: https://github.com/node-fetch/node-fetch/issues/83\n\n\n  const _discarded = await response.arrayBuffer(); // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n\n\n  throw new Error(`Failed to download ${url} - ${response.statusText} received`);\n}\n\nexports.download = download;","map":{"version":3,"sources":["../../src/internal/util/download.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,mBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAOO,eAAe,QAAf,CACL,GADK,EAEL,QAFK,EAGL,aAAa,GAAG,KAHX,EAGgB;AAErB,QAAM;AAAE,IAAA;AAAF,MAAe,MAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,MAAA,YAAA,CAAA,OAAA,CAAa,QAAb,CAAA,CAAA,CAArB;AACA,QAAM;AAAE,IAAA,OAAO,EAAE;AAAX,MAAqB,MAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,MAAA,YAAA,CAAA,OAAA,CAAa,YAAb,CAAA,CAAA,CAA3B;AACA,QAAM,cAAc,GAAG,MAAA,CAAA,OAAA,CAAK,SAAL,CAAe,QAAf,CAAvB;AACA,QAAM,YAAY,GAAiB;AACjC,IAAA,OAAO,EAAE,aADwB;AAEjC,IAAA,KAAK,EAAE;AAF0B,GAAnC,CALqB,CAUrB;;AACA,MAAI,OAAO,CAAC,GAAR,CAAY,WAAZ,KAA4B,SAAhC,EAA2C;AACzC;AACA,UAAM,KAAK,GAAW,OAAO,CAAC,GAAR,CAAY,WAAlC;AACA,IAAA,YAAY,CAAC,KAAb,GAAqB,IAAI,mBAAA,CAAA,OAAA,CAAgB,eAApB,CAAoC,KAApC,CAArB;AACD,GAfoB,CAiBrB;;;AACA,MACE,OAAO,CAAC,GAAR,CAAY,UAAZ,KAA2B,SAA3B,IACA,YAAY,CAAC,KAAb,KAAuB,SAFzB,EAGE;AACA;AACA,UAAM,KAAK,GAAW,OAAO,CAAC,GAAR,CAAY,UAAlC;AACA,IAAA,YAAY,CAAC,KAAb,GAAqB,IAAI,mBAAA,CAAA,OAAA,CAAgB,eAApB,CAAoC,KAApC,CAArB;AACD,GAzBoB,CA2BrB;;;AACA,QAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAD,EAAM,YAAN,CAA5B;;AAEA,MAAI,QAAQ,CAAC,EAAT,IAAe,QAAQ,CAAC,IAAT,KAAkB,IAArC,EAA2C;AACzC,UAAM,UAAA,CAAA,OAAA,CAAQ,SAAR,CAAkB,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,QAAb,CAAlB,CAAN;AACA,WAAO,cAAc,CAAC,QAAQ,CAAC,IAAV,EAAgB,IAAA,CAAA,OAAA,CAAG,iBAAH,CAAqB,QAArB,CAAhB,CAArB;AACD,GAjCoB,CAmCrB;AACA;;;AACA,QAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,WAAT,EAAzB,CArCqB,CAuCrB;;;AACA,QAAM,IAAI,KAAJ,CACJ,sBAAsB,GAAG,MAAM,QAAQ,CAAC,UAAU,WAD9C,CAAN;AAGD;;AA9CD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.download = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst https_proxy_agent_1 = __importDefault(require(\"https-proxy-agent\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst util_1 = __importDefault(require(\"util\"));\nasync function download(url, filePath, timeoutMillis = 10000) {\n    const { pipeline } = await Promise.resolve().then(() => __importStar(require(\"stream\")));\n    const { default: fetch } = await Promise.resolve().then(() => __importStar(require(\"node-fetch\")));\n    const streamPipeline = util_1.default.promisify(pipeline);\n    const fetchOptions = {\n        timeout: timeoutMillis,\n        agent: undefined,\n    };\n    // Check if Proxy is set https\n    if (process.env.HTTPS_PROXY !== undefined) {\n        // Create the proxy from the environment variables\n        const proxy = process.env.HTTPS_PROXY;\n        fetchOptions.agent = new https_proxy_agent_1.default.HttpsProxyAgent(proxy);\n    }\n    // Check if Proxy is set http and `fetchOptions.agent` was not already set for https\n    if (process.env.HTTP_PROXY !== undefined &&\n        fetchOptions.agent === undefined) {\n        // Create the proxy from the environment variables\n        const proxy = process.env.HTTP_PROXY;\n        fetchOptions.agent = new https_proxy_agent_1.default.HttpsProxyAgent(proxy);\n    }\n    // Fetch the url\n    const response = await fetch(url, fetchOptions);\n    if (response.ok && response.body !== null) {\n        await fs_extra_1.default.ensureDir(path_1.default.dirname(filePath));\n        return streamPipeline(response.body, fs_1.default.createWriteStream(filePath));\n    }\n    // Consume the response stream and discard its result\n    // See: https://github.com/node-fetch/node-fetch/issues/83\n    const _discarded = await response.arrayBuffer();\n    // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n    throw new Error(`Failed to download ${url} - ${response.statusText} received`);\n}\nexports.download = download;\n//# sourceMappingURL=download.js.map"]},"metadata":{},"sourceType":"script"}