{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReturnData = void 0;\n\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\n\nconst errors_1 = require(\"../../core/errors\"); // selector of Error(string)\n\n\nconst ERROR_SELECTOR = \"08c379a0\"; // selector of Panic(uint256)\n\nconst PANIC_SELECTOR = \"4e487b71\";\n/**\n * Represents the returnData of a transaction, whose contents are unknown.\n */\n\nclass ReturnData {\n  constructor(value) {\n    this.value = value;\n\n    if (value.length >= 4) {\n      this._selector = value.slice(0, 4).toString(\"hex\");\n    }\n  }\n\n  isEmpty() {\n    return this.value.length === 0;\n  }\n\n  matchesSelector(selector) {\n    if (this._selector === undefined) {\n      return false;\n    }\n\n    return this._selector === selector.toString(\"hex\");\n  }\n\n  isErrorReturnData() {\n    return this._selector === ERROR_SELECTOR;\n  }\n\n  isPanicReturnData() {\n    return this._selector === PANIC_SELECTOR;\n  }\n\n  decodeError() {\n    if (this.isEmpty()) {\n      return \"\";\n    }\n\n    errors_1.assertHardhatInvariant(this._selector === ERROR_SELECTOR, \"Expected return data to be a Error(string)\");\n    const decoded = ethereumjs_abi_1.rawDecode([\"string\"], this.value.slice(4));\n    return decoded.toString(\"utf8\");\n  }\n\n  decodePanic() {\n    errors_1.assertHardhatInvariant(this._selector === PANIC_SELECTOR, \"Expected return data to be a Panic(uint256)\");\n    const [errorCode] = ethereumjs_abi_1.rawDecode([\"uint256\"], this.value.slice(4));\n    return errorCode;\n  }\n\n}\n\nexports.ReturnData = ReturnData;","map":{"version":3,"sources":["../../../src/internal/hardhat-network/provider/return-data.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,gBAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAGA,MAAA,QAAA,GAAA,OAAA,CAAA,mBAAA,CAAA,C,CAEA;;;AACA,MAAM,cAAc,GAAG,UAAvB,C,CACA;;AACA,MAAM,cAAc,GAAG,UAAvB;AAEA;;AAEG;;AACH,MAAa,UAAb,CAAuB;AAGrB,EAAA,WAAA,CAAmB,KAAnB,EAAgC;AAAb,SAAA,KAAA,GAAA,KAAA;;AACjB,QAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAK,SAAL,GAAiB,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,QAAlB,CAA2B,KAA3B,CAAjB;AACD;AACF;;AAEM,EAAA,OAAO,GAAA;AACZ,WAAO,KAAK,KAAL,CAAW,MAAX,KAAsB,CAA7B;AACD;;AAEM,EAAA,eAAe,CAAC,QAAD,EAAiB;AACrC,QAAI,KAAK,SAAL,KAAmB,SAAvB,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED,WAAO,KAAK,SAAL,KAAmB,QAAQ,CAAC,QAAT,CAAkB,KAAlB,CAA1B;AACD;;AAEM,EAAA,iBAAiB,GAAA;AACtB,WAAO,KAAK,SAAL,KAAmB,cAA1B;AACD;;AAEM,EAAA,iBAAiB,GAAA;AACtB,WAAO,KAAK,SAAL,KAAmB,cAA1B;AACD;;AAEM,EAAA,WAAW,GAAA;AAChB,QAAI,KAAK,OAAL,EAAJ,EAAoB;AAClB,aAAO,EAAP;AACD;;AAED,IAAA,QAAA,CAAA,sBAAA,CACE,KAAK,SAAL,KAAmB,cADrB,EAEE,4CAFF;AAKA,UAAM,OAAO,GAAG,gBAAA,CAAA,SAAA,CAAU,CAAC,QAAD,CAAV,EAAsB,KAAK,KAAL,CAAW,KAAX,CAAiB,CAAjB,CAAtB,CAAhB;AACA,WAAO,OAAO,CAAC,QAAR,CAAiB,MAAjB,CAAP;AACD;;AAEM,EAAA,WAAW,GAAA;AAChB,IAAA,QAAA,CAAA,sBAAA,CACE,KAAK,SAAL,KAAmB,cADrB,EAEE,6CAFF;AAKA,UAAM,CAAC,SAAD,IAAc,gBAAA,CAAA,SAAA,CAAU,CAAC,SAAD,CAAV,EAAuB,KAAK,KAAL,CAAW,KAAX,CAAiB,CAAjB,CAAvB,CAApB;AAEA,WAAO,SAAP;AACD;;AApDoB;;AAAvB,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReturnData = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst errors_1 = require(\"../../core/errors\");\n// selector of Error(string)\nconst ERROR_SELECTOR = \"08c379a0\";\n// selector of Panic(uint256)\nconst PANIC_SELECTOR = \"4e487b71\";\n/**\n * Represents the returnData of a transaction, whose contents are unknown.\n */\nclass ReturnData {\n    constructor(value) {\n        this.value = value;\n        if (value.length >= 4) {\n            this._selector = value.slice(0, 4).toString(\"hex\");\n        }\n    }\n    isEmpty() {\n        return this.value.length === 0;\n    }\n    matchesSelector(selector) {\n        if (this._selector === undefined) {\n            return false;\n        }\n        return this._selector === selector.toString(\"hex\");\n    }\n    isErrorReturnData() {\n        return this._selector === ERROR_SELECTOR;\n    }\n    isPanicReturnData() {\n        return this._selector === PANIC_SELECTOR;\n    }\n    decodeError() {\n        if (this.isEmpty()) {\n            return \"\";\n        }\n        errors_1.assertHardhatInvariant(this._selector === ERROR_SELECTOR, \"Expected return data to be a Error(string)\");\n        const decoded = ethereumjs_abi_1.rawDecode([\"string\"], this.value.slice(4));\n        return decoded.toString(\"utf8\");\n    }\n    decodePanic() {\n        errors_1.assertHardhatInvariant(this._selector === PANIC_SELECTOR, \"Expected return data to be a Panic(uint256)\");\n        const [errorCode] = ethereumjs_abi_1.rawDecode([\"uint256\"], this.value.slice(4));\n        return errorCode;\n    }\n}\nexports.ReturnData = ReturnData;\n//# sourceMappingURL=return-data.js.map"]},"metadata":{},"sourceType":"script"}