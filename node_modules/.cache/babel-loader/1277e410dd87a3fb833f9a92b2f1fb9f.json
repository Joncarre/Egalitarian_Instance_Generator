{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\3SAT_Instance_Generator\\\\3SAT_Instance_Generator\\\\src\\\\components\\\\SideBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SidebarContainer, Icon, CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink, SideBtnWrap, SidebarRoute } from './SidebarElements';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  isOpen,\n  toggle\n}) => {\n  _s();\n\n  // MetaMask Wallet Connection\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const history = useHistory();\n  const [url, setUrl] = useState(window.location.pathname);\n  useEffect(() => {\n    const initialSet = async () => {\n      const {\n        address,\n        status\n      } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n      addWalletListener();\n    };\n\n    initialSet();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  useEffect(() => {\n    return history.listen(location => {\n      setUrl(location.pathname);\n    });\n  }, [history]);\n\n  const handleClick = path => {\n    // if at the front page, click NavLinks button will scroll to the location of element\n    // if not, click NavLinks button will navigate to clicked path\n    if (url !== \"/\" && path !== url) {\n      history.push(path);\n    }\n\n    toggle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    isOpen: isOpen,\n    onClick: toggle,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      onClick: toggle,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarMenu, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"dapp\",\n          onClick: () => handleClick('/dapp'),\n          children: \"\\xD0App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"how_it_works\",\n          onClick: () => handleClick('/howitworks'),\n          children: \"How it works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"3sat\",\n          onClick: () => handleClick('/3sat'),\n          children: \"3-SAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"chainlink\",\n          onClick: () => handleClick('/chainlink'),\n          children: \"Chainlink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBtnWrap, {\n        children: /*#__PURE__*/_jsxDEV(SidebarRoute, {\n          to: \"\",\n          id: \"walletButton\",\n          onClick: connectWalletPressed,\n          children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"3HB7wE0Hp+YytWKGQz9n7769eeQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Jonathan/3SAT_Instance_Generator/3SAT_Instance_Generator/src/components/SideBar/index.js"],"names":["React","useState","useEffect","useHistory","SidebarContainer","Icon","CloseIcon","SidebarWrapper","SidebarMenu","SidebarLink","SideBtnWrap","SidebarRoute","connectWallet","getCurrentWalletConnected","Sidebar","isOpen","toggle","walletAddress","setWallet","status","setStatus","history","url","setUrl","window","location","pathname","initialSet","address","addWalletListener","connectWalletPressed","walletResponse","ethereum","on","accounts","length","listen","handleClick","path","push","String","substring"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,gBADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,cAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,YARF,QASO,mBATP;AAWA,SAASC,aAAT,EAAwBC,yBAAxB,QAAyD,aAAzD;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AACtC;AACA,QAAM,CAACC,aAAD,EAAgBC,SAAhB,IAA6BjB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMoB,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,CAACuB,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAA9B;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,UAAU,GAAG,YAAY;AAC7B,YAAM;AAAEC,QAAAA,OAAF;AAAWT,QAAAA;AAAX,UAAsB,MAAMN,yBAAyB,EAA3D;AACAK,MAAAA,SAAS,CAACU,OAAD,CAAT;AACAR,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAU,MAAAA,iBAAiB;AAClB,KALD;;AAMAF,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,oBAAoB,GAAG,YAAY;AACvC,UAAMC,cAAc,GAAG,MAAMnB,aAAa,EAA1C;AACAQ,IAAAA,SAAS,CAACW,cAAc,CAACZ,MAAhB,CAAT;AACAD,IAAAA,SAAS,CAACa,cAAc,CAACH,OAAhB,CAAT;AACD,GAJD;;AAMA,WAASC,iBAAT,GAA6B;AAC3B,QAAIL,MAAM,CAACQ,QAAX,EAAqB;AACnBR,MAAAA,MAAM,CAACQ,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAuCC,QAAD,IAAc;AAClD,YAAIA,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACvBjB,UAAAA,SAAS,CAACgB,QAAQ,CAAC,CAAD,CAAT,CAAT;AACAd,UAAAA,SAAS,CAAC,+CAAD,CAAT;AACD,SAHD,MAGO;AACLF,UAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,UAAAA,SAAS,CAAC,oDAAD,CAAT;AACD;AACF,OARD;AASD,KAVD,MAUO;AACLA,MAAAA,SAAS,eACP;AAAA,mBACG,GADH,kBAEK,GAFL,eAGE;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAG,mCAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,CAAT;AAUD;AACF;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOmB,OAAO,CAACe,MAAR,CAAgBX,QAAD,IAAc;AAClCF,MAAAA,MAAM,CAACE,QAAQ,CAACC,QAAV,CAAN;AACD,KAFM,CAAP;AAGD,GAJQ,EAIN,CAACL,OAAD,CAJM,CAAT;;AAMA,QAAMgB,WAAW,GAAIC,IAAD,IAAU;AAC5B;AACA;AACA,QAAIhB,GAAG,KAAK,GAAR,IAAegB,IAAI,KAAKhB,GAA5B,EAAiC;AAC/BD,MAAAA,OAAO,CAACkB,IAAR,CAAaD,IAAb;AACD;;AACDtB,IAAAA,MAAM;AACP,GAPD;;AASA,sBACE,QAAC,gBAAD;AAAkB,IAAA,MAAM,EAAED,MAA1B;AAAkC,IAAA,OAAO,EAAEC,MAA3C;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEA,MAAf;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,cAAD;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAE,MAAMqB,WAAW,CAAC,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,cAAhB;AAA+B,UAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,aAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,MAAhB;AAAuB,UAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,OAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,YAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,WAAD;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAC,EAAjB;AAAoB,UAAA,EAAE,EAAC,cAAvB;AAAsC,UAAA,OAAO,EAAEP,oBAA/C;AAAA,oBACGb,aAAa,CAACkB,MAAd,GAAuB,CAAvB,GAA4B,gBAC3BK,MAAM,CAACvB,aAAD,CAAN,CAAsBwB,SAAtB,CAAgC,CAAhC,EAAmC,CAAnC,CAD2B,GACa,KADb,GAE3BD,MAAM,CAACvB,aAAD,CAAN,CAAsBwB,SAAtB,CAAgC,EAAhC,CAFD,gBAEyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAH5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAhGD;;GAAM3B,O;UAKYX,U;;;KALZW,O;AAkGN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  SidebarContainer,\r\n  Icon,\r\n  CloseIcon,\r\n  SidebarWrapper,\r\n  SidebarMenu,\r\n  SidebarLink,\r\n  SideBtnWrap,\r\n  SidebarRoute\r\n} from './SidebarElements';\r\n\r\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\r\n\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n  // MetaMask Wallet Connection\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const [url, setUrl] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const initialSet = async () => {\r\n      const { address, status } = await getCurrentWalletConnected();\r\n      setWallet(address)\r\n      setStatus(status);\r\n      addWalletListener();\r\n    }\r\n    initialSet();\r\n  }, []);\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      setUrl(location.pathname);\r\n    })\r\n  }, [history])\r\n\r\n  const handleClick = (path) => {\r\n    // if at the front page, click NavLinks button will scroll to the location of element\r\n    // if not, click NavLinks button will navigate to clicked path\r\n    if (url !== \"/\" && path !== url) {\r\n      history.push(path);\r\n    }\r\n    toggle();\r\n  }\r\n\r\n  return (\r\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n      <Icon onClick={toggle}>\r\n        <CloseIcon>\r\n\r\n        </CloseIcon>\r\n      </Icon>\r\n      <SidebarWrapper>\r\n        <SidebarMenu>\r\n          <SidebarLink to='dapp' onClick={() => handleClick('/dapp')}>\r\n            ÐApp\r\n          </SidebarLink>\r\n          <SidebarLink to='how_it_works' onClick={() => handleClick('/howitworks')}>\r\n            How it works\r\n          </SidebarLink>\r\n          <SidebarLink to='3sat' onClick={() => handleClick('/3sat')}>\r\n            3-SAT\r\n          </SidebarLink>\r\n          <SidebarLink to='chainlink' onClick={() => handleClick('/chainlink')}>\r\n            Chainlink\r\n          </SidebarLink>\r\n        </SidebarMenu>\r\n        <SideBtnWrap>\r\n          <SidebarRoute to=\"\" id=\"walletButton\" onClick={connectWalletPressed}>\r\n            {walletAddress.length > 0 ? (\"Connected: \" +\r\n              String(walletAddress).substring(0, 6) + \"...\" +\r\n              String(walletAddress).substring(38)) : (<span>Connect Wallet</span>)}\r\n          </SidebarRoute>\r\n        </SideBtnWrap>\r\n      </SidebarWrapper>\r\n    </SidebarContainer>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}