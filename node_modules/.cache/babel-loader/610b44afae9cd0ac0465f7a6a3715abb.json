{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/UserSection/index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css';\nimport { buildInstance } from './supportFunctions';\nimport swal from 'sweetalert';\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport Demo from '../RowHeaderTable/index.js';\nimport { Container, FormButton, FormButtonTop, Form, FormH1, FormWrap1, FormWrap2 } from './UserElements';\nimport { FormContent, FormLabel, FormInput, FormError } from '../FormElements';\nimport logo from '../../images/chainlink.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSection = () => {\n  _s();\n\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4, _errors$numInstances, _errors$numInstances2, _errors$numInstances3, _errors$numInstances4, _errors2$orcid, _errors2$orcid2, _errors2$orcid3, _errors2$orcid4;\n\n  var infoArray = [];\n  var currentRandomNumber = null;\n  var oldRandomNumber = null;\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\n      const transaction = await contract.createAInstance(data.p_value, data.q_value, 6659948276, // CAMBIAR ESTO SI O SI\n      data.numInstances, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        console.log(\"async_getInstance: \" + data.orcid);\n        const result = await contract.connect(signer).getInstance(data.orcid);\n        console.log(result);\n        history.push({\n          pathname: '/instances',\n          state: result\n        });\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        console.log(\"async_getAllInstances: \" + data.orcid);\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\n        infoArray = buildInstance(result);\n        console.log(infoArray);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.numInstances);\n      const transaction = await contract.createBInstance(data.p_value, data.q_value, 3534535345, {\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.getRandomNumber({\n        gasLimit: 10000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + result / 10e17 + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        let isCanceled = false;\n        oldRandomNumber = currentRandomNumber;\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null) swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\n\n        while (!isCanceled) {\n          currentRandomNumber = await contract.connect(signer).randomResult();\n\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\n            isCanceled = true;\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\n          } else {\n            oldRandomNumber = currentRandomNumber;\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrap1, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(async_createAInstance),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Create a new instance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logo\",\n            src: logo,\n            alt: \"logo\",\n            onClick: () => {\n              async_getRandomNumber();\n              async_getRemainingLINK();\n              async_randomResult();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"First parameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tip-content\",\n              children: \"The \\\"p\\\" value indicates the probability of generating a new proposition symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"p_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"p_value\",\n            placeholder: \"p value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 54\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 49\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 49\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Second parameter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tip-content\",\n              children: \"The \\\"q\\\" value indicates the probability of generating a new clause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"q_value\", {\n              required: true,\n              max: 99,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"q_value\",\n            placeholder: \"q value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 54\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 49\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 99]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 49\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-tip\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Number of instances\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tip-content\",\n              children: \"Enter the number of instances you would like to generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"numInstances\", {\n              required: true,\n              max: 5,\n              min: 1,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"numInstances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances = errors.numInstances) === null || _errors$numInstances === void 0 ? void 0 : _errors$numInstances.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 59\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances2 = errors.numInstances) === null || _errors$numInstances2 === void 0 ? void 0 : _errors$numInstances2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 5]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 54\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances3 = errors.numInstances) === null || _errors$numInstances3 === void 0 ? void 0 : _errors$numInstances3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Integer number between [1, 5]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 54\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances4 = errors.numInstances) === null || _errors$numInstances4 === void 0 ? void 0 : _errors$numInstances4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FormButtonTop, {\n              left: true,\n              id: \"submit1\",\n              type: \"submit\",\n              value: \"A generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormButtonTop, {\n              right: true,\n              id: \"submit2\",\n              type: \"submit\",\n              value: \"B generator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormWrap2, {\n      children: /*#__PURE__*/_jsxDEV(FormContent, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit2(async_getAllInstances),\n          children: [/*#__PURE__*/_jsxDEV(FormH1, {\n            children: \"Search for instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"ORCID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register2(\"orcid\", {\n              required: true,\n              minLength: 16,\n              maxLength: 16,\n              pattern: /^[0-9\\b]+$/\n            }),\n            type: \"number\",\n            name: \"orcid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid = errors2.orcid) === null || _errors2$orcid === void 0 ? void 0 : _errors2$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Field required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 53\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid2 = errors2.orcid) === null || _errors2$orcid2 === void 0 ? void 0 : _errors2$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 54\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid3 = errors2.orcid) === null || _errors2$orcid3 === void 0 ? void 0 : _errors2$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"It must be a number of 16 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 54\n          }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid4 = errors2.orcid) === null || _errors2$orcid4 === void 0 ? void 0 : _errors2$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n            children: \"Numerical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            type: \"submit\",\n            value: \"Get instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, 2, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSection, \"UxIq7tOACtHG+EQwS1hxIy1b91s=\", false, function () {\n  return [useHistory, useForm, useForm];\n});\n\n_c = UserSection;\nexport default UserSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/UserSection/index.js"],"names":["React","useForm","useHistory","generatorAddress","requestAccount","ethers","Generator","buildInstance","swal","StyledEngineProvider","Demo","Container","FormButton","FormButtonTop","Form","FormH1","FormWrap1","FormWrap2","FormContent","FormLabel","FormInput","FormError","logo","UserSection","infoArray","currentRandomNumber","oldRandomNumber","history","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","async_createAInstance","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","console","log","p_value","q_value","transaction","createAInstance","numInstances","gasLimit","wait","async_getInstance","orcid","result","connect","getInstance","push","pathname","state","err","async_getAllInstances","getAllInstances","async_createBInstance","createBInstance","async_getRandomNumber","getRandomNumber","async_getRemainingLINK","getRemainingLINK","async_randomResult","isCanceled","parseInt","randomResult","Promise","resolve","setTimeout","required","max","min","pattern","type","minLength","maxLength"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport './messagesInfo.css'\r\nimport { buildInstance } from './supportFunctions'\r\nimport swal from 'sweetalert';\r\nimport { StyledEngineProvider } from '@mui/material/styles';\r\nimport Demo from '../RowHeaderTable/index.js'\r\nimport {\r\n  Container,\r\n  FormButton,\r\n  FormButtonTop,\r\n  Form,\r\n  FormH1,\r\n  FormWrap1,\r\n  FormWrap2,\r\n} from './UserElements'\r\nimport {\r\n  FormContent,\r\n  FormLabel,\r\n  FormInput,\r\n  FormError\r\n} from '../FormElements'\r\nimport logo from '../../images/chainlink.png';\r\n\r\nconst UserSection = () => {\r\n  var infoArray = [];\r\n  var currentRandomNumber = null;\r\n  var oldRandomNumber = null;\r\n  let history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const {\r\n    register: register2,\r\n    reset: reset2,\r\n    handleSubmit: handleSubmit2,\r\n    formState: { errors: errors2 }\r\n  } = useForm();\r\n\r\n  async function async_createAInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      console.log(\"async_createAInstance: \" + data.p_value, data.q_value);\r\n      const transaction = await contract.createAInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        6659948276, // CAMBIAR ESTO SI O SI\r\n        data.numInstances,\r\n        { gasLimit: 10000000 })\r\n      await transaction.wait()\r\n    }\r\n  }\r\n\r\n  async function async_getInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        console.log(\"async_getInstance: \" + data.orcid)\r\n        const result = await contract.connect(signer).getInstance(data.orcid);\r\n        console.log(result);\r\n        history.push({\r\n          pathname: '/instances',\r\n          state: result\r\n        });\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_getAllInstances(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        console.log(\"async_getAllInstances: \" + data.orcid);\r\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\r\n        infoArray = buildInstance(result);\r\n        console.log(infoArray);\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_createBInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      console.log(\"async_createBInstance: \" + data.p_value, data.q_value, data.numInstances);\r\n      const transaction = await contract.createBInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        3534535345,\r\n        { gasLimit: 10000000 })\r\n      await transaction.wait()\r\n    }\r\n  }\r\n\r\n  async function async_getRandomNumber(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      const transaction = await contract.getRandomNumber(\r\n        { gasLimit: 10000000 })\r\n      await transaction.wait();\r\n    }\r\n  }\r\n\r\n  async function async_getRemainingLINK(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getRemainingLINK();\r\n        console.log(\"Smart contract balance is: \" + (result / 10e17) + \" LINK token\");\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  async function async_randomResult(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        let isCanceled = false;\r\n        oldRandomNumber = currentRandomNumber;\r\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null)\r\n          swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\r\n        while (!isCanceled) {\r\n          currentRandomNumber = await contract.connect(signer).randomResult();\r\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\r\n            isCanceled = true;\r\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\r\n          } else {\r\n            oldRandomNumber = currentRandomNumber;\r\n          }\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FormWrap1>\r\n        <FormContent>\r\n          <Form key={1} onSubmit={handleSubmit(async_createAInstance)}>\r\n            <FormH1>Create a new instance</FormH1>\r\n            <img className=\"logo\" src={logo} alt='logo' onClick={() => { async_getRandomNumber(); async_getRemainingLINK(); async_randomResult(); }} />\r\n            <span className=\"field-tip\">\r\n              <FormLabel>First parameter</FormLabel>\r\n              <span className=\"tip-content\">The \"p\" value indicates the probability of generating a new proposition symbol</span>\r\n            </span>\r\n            <FormInput {...register(\"p_value\", {\r\n              required: true,\r\n              max: 99,\r\n              min: 1,\r\n              pattern: /^[0-9\\b]+$/\r\n            })} type=\"number\" name=\"p_value\" placeholder=\"p value\" />\r\n            {errors?.p_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n            {errors?.p_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n            {errors?.p_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n            {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n            <span className=\"field-tip\">\r\n              <FormLabel>Second parameter</FormLabel>\r\n              <span className=\"tip-content\">The \"q\" value indicates the probability of generating a new clause</span>\r\n            </span>\r\n            <FormInput {...register(\"q_value\", {\r\n              required: true,\r\n              max: 99,\r\n              min: 1,\r\n              pattern: /^[0-9\\b]+$/\r\n            })} type=\"number\" name=\"q_value\" placeholder=\"q value\" />\r\n            {errors?.q_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n            {errors?.q_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n            {errors?.q_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n            {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n            <span className=\"field-tip\">\r\n              <FormLabel>Number of instances</FormLabel>\r\n              <span className=\"tip-content\">Enter the number of instances you would like to generate</span>\r\n            </span>\r\n            <FormInput {...register(\"numInstances\", {\r\n              required: true,\r\n              max: 5,\r\n              min: 1,\r\n              pattern: /^[0-9\\b]+$/\r\n            })} type=\"number\" name=\"numInstances\" />\r\n            {errors?.numInstances?.type === \"required\" && <FormError>Field required</FormError>}\r\n            {errors?.numInstances?.type === \"max\" && <FormError>Integer number between [1, 5]</FormError>}\r\n            {errors?.numInstances?.type === \"min\" && <FormError>Integer number between [1, 5]</FormError>}\r\n            {errors?.numInstances?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n            <div>\r\n              {/* FormButtonTop has props(left or right) for controlling the 'float' attr  */}\r\n              <FormButtonTop left id=\"submit1\" type=\"submit\" value=\"A generator\" />\r\n              <FormButtonTop right id=\"submit2\" type=\"submit\" value=\"B generator\" />\r\n            </div>\r\n          </Form>\r\n        </FormContent>\r\n      </FormWrap1>\r\n      <FormWrap2>\r\n        <FormContent>\r\n          <Form key={2} onSubmit={handleSubmit2(async_getAllInstances)}>\r\n            <FormH1>Search for instances</FormH1>\r\n            <FormLabel>ORCID</FormLabel>\r\n            <FormInput {...register2(\"orcid\", {\r\n              required: true,\r\n              minLength: 16,\r\n              maxLength: 16,\r\n              pattern: /^[0-9\\b]+$/\r\n            })} type=\"number\" name=\"orcid\" />\r\n            {errors2?.orcid?.type === \"required\" && <FormError>Field required</FormError>}\r\n            {errors2?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n            {errors2?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n            {errors2?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n            <FormButton type=\"submit\" value=\"Get instances\" />\r\n          </Form>\r\n\r\n        </FormContent>\r\n      </FormWrap2>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSection;\r\n"]},"metadata":{},"sourceType":"module"}