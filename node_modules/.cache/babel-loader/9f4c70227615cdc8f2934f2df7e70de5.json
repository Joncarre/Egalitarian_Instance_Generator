{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\DApp Versiones\\\\v11\\\\Generator-DApp\\\\src\\\\components\\\\Register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from \"emailjs-com\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, FormButton } from './RegisterElements';\nimport { FormContent, FormLabel, FormInput, FormError, Form, FormH1 } from '../FormElements';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$email, _errors$email2, _errors$orcid, _errors$orcid2, _errors$orcid3, _errors$orcid4;\n\n  var sha256 = require('js-sha256');\n\n  var secret, name, email, orcid;\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const sendEmail = (formData, e) => {\n    secret = sha256(e.target.orcid.value);\n    name = e.target.name.value;\n    email = e.target.email.value;\n    orcid = e.target.orcid.value;\n    e.target.orcid.value = cutHash(secret);\n    secret = e.target.orcid.value; // Send email\n\n    emailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\").then(result => {\n      console.log(result.text);\n      history.push(\"/signin\");\n    }, error => {\n      console.log(error.text);\n    });\n    async_setResearcher();\n    reset();\n  };\n\n  function cutHash(elem) {\n    var cut = elem.replace(/[^0-9]/g, '');\n    var result = cut.substring(0, 10);\n    return result;\n  }\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_setResearcher: \" + secret, name, email, orcid);\n\n      try {\n        const transaction = await contract.setResearcher(secret, name, email, orcid, {\n          gasLimit: 12000000\n        });\n        await transaction.wait();\n      } catch (e) {\n        const msg = e.data ? e.data.message : e.message;\n\n        if (msg.includes(\"ORCID\")) {\n          console.log(\"Fronted: This ORCID is already registered.\");\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormContent, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(sendEmail),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Register your information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"name\", {\n            required: true,\n            maxLength: 20,\n            pattern: /^[A-Za-z]+$/i\n          }),\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"First name cannot exceed 20 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Alphabetical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"email\", {\n            required: true,\n            pattern: /\\S+@\\S+\\.\\S+/\n          }),\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 45\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Entered value does not match email format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"ORCID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"orcid\", {\n            required: true,\n            minLength: 16,\n            maxLength: 16,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"orcid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid = errors.orcid) === null || _errors$orcid === void 0 ? void 0 : _errors$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid2 = errors.orcid) === null || _errors$orcid2 === void 0 ? void 0 : _errors$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 46\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid3 = errors.orcid) === null || _errors$orcid3 === void 0 ? void 0 : _errors$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 46\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid4 = errors.orcid) === null || _errors$orcid4 === void 0 ? void 0 : _errors$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"N04o8kVM/iqEaFvwQYLb7CzCqLA=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Jonathan/Desktop/DApp Versiones/v11/Generator-DApp/src/components/Register/index.js"],"names":["React","useForm","emailjs","generatorAddress","requestAccount","ethers","Generator","Container","FormButton","FormContent","FormLabel","FormInput","FormError","Form","FormH1","useHistory","Register","sha256","require","secret","name","email","orcid","history","register","handleSubmit","reset","formState","errors","sendEmail","formData","e","target","value","cutHash","sendForm","then","result","console","log","text","push","error","async_setResearcher","elem","cut","replace","substring","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","setResearcher","gasLimit","wait","msg","message","includes","required","maxLength","pattern","type","minLength"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,cAAjD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wDAAtB;AACA,SACCC,SADD,EAECC,UAFD,QAGO,oBAHP;AAKA,SACCC,WADD,EAECC,SAFD,EAGCC,SAHD,EAICC,SAJD,EAKCC,IALD,EAMCC,MAND,QAOO,iBAPP;AASA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAAA;;AACtB,MAAIC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,MAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,KAAlB,EAAyBC,KAAzB;AACA,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAM;AACLS,IAAAA,QADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJN,MAKF3B,OAAO,EALX;;AAOA,QAAM4B,SAAS,GAAG,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAClCZ,IAAAA,MAAM,GAAGF,MAAM,CAACc,CAAC,CAACC,MAAF,CAASV,KAAT,CAAeW,KAAhB,CAAf;AACAb,IAAAA,IAAI,GAAGW,CAAC,CAACC,MAAF,CAASZ,IAAT,CAAca,KAArB;AACAZ,IAAAA,KAAK,GAAGU,CAAC,CAACC,MAAF,CAASX,KAAT,CAAeY,KAAvB;AACAX,IAAAA,KAAK,GAAGS,CAAC,CAACC,MAAF,CAASV,KAAT,CAAeW,KAAvB;AACAF,IAAAA,CAAC,CAACC,MAAF,CAASV,KAAT,CAAeW,KAAf,GAAuBC,OAAO,CAACf,MAAD,CAA9B;AACAA,IAAAA,MAAM,GAAGY,CAAC,CAACC,MAAF,CAASV,KAAT,CAAeW,KAAxB,CANkC,CAOlC;;AACA/B,IAAAA,OAAO,CAACiC,QAAR,CAAiB,YAAjB,EAA+B,oBAA/B,EAAqDJ,CAAC,CAACC,MAAvD,EAA+D,4BAA/D,EACEI,IADF,CACQC,MAAD,IAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,SAAb;AACA,KAJF,EAIKC,KAAD,IAAW;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACF,IAAlB;AACA,KANF;AAOAG,IAAAA,mBAAmB;AACnBjB,IAAAA,KAAK;AACL,GAjBD;;AAmBA,WAASQ,OAAT,CAAiBU,IAAjB,EAAuB;AACtB,QAAIC,GAAG,GAAGD,IAAI,CAACE,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAV;AACA,QAAIT,MAAM,GAAGQ,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAb;AACA,WAAOV,MAAP;AACA;;AAEE,iBAAeM,mBAAf,CAAmCK,IAAnC,EAAyC;AACrC,QAAI,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AACxC,YAAM9C,cAAc,EAApB;AACA,YAAM+C,QAAQ,GAAG,IAAI9C,MAAM,CAAC+C,SAAP,CAAiBC,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,QAAQ,GAAG,IAAInD,MAAM,CAACoD,QAAX,CAAoBtD,gBAApB,EAAsCG,SAAS,CAACoD,GAAhD,EAAqDJ,MAArD,CAAjB;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BpB,MAAtC,EAA8CC,IAA9C,EAAoDC,KAApD,EAA2DC,KAA3D;;AACA,UAAI;AACJ,cAAMqC,WAAW,GAAG,MAAMH,QAAQ,CAACI,aAAT,CACtBzC,MADsB,EAEtBC,IAFsB,EAGtBC,KAHsB,EAItBC,KAJsB,EAKtB;AAAEuC,UAAAA,QAAQ,EAAE;AAAZ,SALsB,CAA1B;AAMA,cAAMF,WAAW,CAACG,IAAZ,EAAN;AACC,OARD,CAQE,OAAO/B,CAAP,EAAU;AACT,cAAMgC,GAAG,GAAGhC,CAAC,CAACiB,IAAF,GAASjB,CAAC,CAACiB,IAAF,CAAOgB,OAAhB,GAA0BjC,CAAC,CAACiC,OAAxC;;AACA,YAAID,GAAG,CAACE,QAAJ,CAAa,OAAb,CAAJ,EAA2B;AACnC3B,UAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA;AACM;AACJ;AACJ;;AAEJ,sBAEC,QAAC,SAAD;AAAA,2BACC,QAAC,WAAD;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEd,YAAY,CAACI,SAAD,CAA5B;AAAA,gCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,SAAD,OACKL,QAAQ,CAAC,MAAD,EAAS;AACpB0C,YAAAA,QAAQ,EAAE,IADU;AAEpBC,YAAAA,SAAS,EAAE,EAFS;AAGpBC,YAAAA,OAAO,EAAE;AAHW,WAAT,CADb;AAKK,UAAA,IAAI,EAAC,MALV;AAKiB,UAAA,IAAI,EAAC;AALtB;AAAA;AAAA;AAAA;AAAA,gBAHD,EASE,CAAAxC,MAAM,SAAN,IAAAA,MAAM,WAAN,4BAAAA,MAAM,CAAER,IAAR,8DAAciD,IAAd,MAAuB,UAAvB,iBAAqC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATvC,EAUE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAER,IAAR,gEAAciD,IAAd,MAAuB,WAAvB,iBAAsC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVxC,EAWE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAER,IAAR,gEAAciD,IAAd,MAAuB,SAAvB,iBAAoC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXtC,eAYC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZD,eAaC,QAAC,SAAD,OACK7C,QAAQ,CAAC,OAAD,EAAU;AACrB0C,YAAAA,QAAQ,EAAE,IADW;AAErBE,YAAAA,OAAO,EAAE;AAFY,WAAV,CADb;AAIK,UAAA,IAAI,EAAC,OAJV;AAIkB,UAAA,IAAI,EAAC;AAJvB;AAAA;AAAA;AAAA;AAAA,gBAbD,EAkBE,CAAAxC,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEP,KAAR,gEAAegD,IAAf,MAAwB,UAAxB,iBAAsC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBxC,EAmBE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEP,KAAR,kEAAegD,IAAf,MAAwB,SAAxB,iBAAqC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBvC,eAoBC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBD,eAqBC,QAAC,SAAD,OAAe7C,QAAQ,CAAC,OAAD,EAAU;AAChC0C,YAAAA,QAAQ,EAAE,IADsB;AAEhCI,YAAAA,SAAS,EAAE,EAFqB;AAGhCH,YAAAA,SAAS,EAAE,EAHqB;AAIhCC,YAAAA,OAAO,EAAE;AAJuB,WAAV,CAAvB;AAKI,UAAA,IAAI,EAAC,QALT;AAKkB,UAAA,IAAI,EAAC;AALvB;AAAA;AAAA;AAAA;AAAA,gBArBD,EA2BE,CAAAxC,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEN,KAAR,gEAAe+C,IAAf,MAAwB,UAAxB,iBAAsC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BxC,EA4BE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEN,KAAR,kEAAe+C,IAAf,MAAwB,WAAxB,iBAAuC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BzC,EA6BE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEN,KAAR,kEAAe+C,IAAf,MAAwB,WAAxB,iBAAuC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BzC,EA8BE,CAAAzC,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEN,KAAR,kEAAe+C,IAAf,MAAwB,SAAxB,iBAAqC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BvC,eA+BC,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBA/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AAyCA,CAtGD;;GAAMrD,Q;UAGSD,U,EAOVd,O;;;KAVCe,Q;AAwGN,eAAeA,QAAf","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n\tContainer,\r\n\tFormButton,\r\n} from './RegisterElements';\r\n\r\nimport {\r\n\tFormContent,\r\n\tFormLabel,\r\n\tFormInput,\r\n\tFormError,\r\n\tForm,\r\n\tFormH1,\r\n} from '../FormElements'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n\tvar sha256 = require('js-sha256');\r\n\tvar secret, name, email, orcid;\r\n\tlet history = useHistory();\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\treset,\r\n\t\tformState: { errors }\r\n\t} = useForm();\r\n\r\n\tconst sendEmail = (formData, e) => {\r\n\t\tsecret = sha256(e.target.orcid.value);\r\n\t\tname = e.target.name.value;\r\n\t\temail = e.target.email.value;\r\n\t\torcid = e.target.orcid.value;\r\n\t\te.target.orcid.value = cutHash(secret);\r\n\t\tsecret = e.target.orcid.value;\r\n\t\t// Send email\r\n\t\temailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\")\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconsole.log(result.text);\r\n\t\t\t\thistory.push(\"/signin\");\r\n\t\t\t}, (error) => {\r\n\t\t\t\tconsole.log(error.text);\r\n\t\t\t});\r\n\t\tasync_setResearcher();\r\n\t\treset();\r\n\t};\r\n\r\n\tfunction cutHash(elem) {\r\n\t\tvar cut = elem.replace(/[^0-9]/g, '');\r\n\t\tvar result = cut.substring(0, 10);\r\n\t\treturn result;\r\n\t}\r\n\r\n    async function async_setResearcher(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            await requestAccount()\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner()\r\n            const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n            console.log(\"async_setResearcher: \" + secret, name, email, orcid);\r\n            try {\r\n            const transaction = await contract.setResearcher(\r\n                secret,\r\n                name,\r\n                email,\r\n                orcid,\r\n                { gasLimit: 12000000 })\r\n            await transaction.wait()\r\n            } catch (e) {\r\n               const msg = e.data ? e.data.message : e.message;\r\n               if (msg.includes(\"ORCID\")) {\r\n\t\t\t\t   console.log(\"Fronted: This ORCID is already registered.\");\r\n\t\t\t   }\r\n            }\r\n        }\r\n    }\r\n\r\n\treturn (\r\n\r\n\t\t<Container>\r\n\t\t\t<FormContent>\r\n\t\t\t\t<Form onSubmit={handleSubmit(sendEmail)}>\r\n\t\t\t\t\t<FormH1>Register your information</FormH1>\r\n\t\t\t\t\t<FormLabel>Name</FormLabel>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t{...register(\"name\", {\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmaxLength: 20,\r\n\t\t\t\t\t\t\tpattern: /^[A-Za-z]+$/i\r\n\t\t\t\t\t\t})} type=\"text\" name=\"name\" />\r\n\t\t\t\t\t{errors?.name?.type === \"required\" && <FormError>This field is required</FormError>}\r\n\t\t\t\t\t{errors?.name?.type === \"maxLength\" && <FormError>First name cannot exceed 20 characters</FormError>}\r\n\t\t\t\t\t{errors?.name?.type === \"pattern\" && <FormError>Alphabetical characters only</FormError>}\r\n\t\t\t\t\t<FormLabel>Email</FormLabel>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t{...register(\"email\", {\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tpattern: /\\S+@\\S+\\.\\S+/\r\n\t\t\t\t\t\t})} type=\"email\" name=\"email\" />\r\n\t\t\t\t\t{errors?.email?.type === \"required\" && <FormError>This field is required</FormError>}\r\n\t\t\t\t\t{errors?.email?.type === \"pattern\" && <FormError>Entered value does not match email format</FormError>}\r\n\t\t\t\t\t<FormLabel>ORCID</FormLabel>\r\n\t\t\t\t\t<FormInput {...register(\"orcid\", {\r\n\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\tminLength: 16,\r\n\t\t\t\t\t\tmaxLength: 16,\r\n\t\t\t\t\t\tpattern: /^[0-9\\b]+$/\r\n\t\t\t\t\t})} type=\"number\" name=\"orcid\" />\r\n\t\t\t\t\t{errors?.orcid?.type === \"required\" && <FormError>This field is required</FormError>}\r\n\t\t\t\t\t{errors?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n\t\t\t\t\t{errors?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n\t\t\t\t\t{errors?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n\t\t\t\t\t<FormButton type=\"submit\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</FormContent>\r\n\t\t</Container>\r\n\r\n\t)\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}