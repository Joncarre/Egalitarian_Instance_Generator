{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { Nav, NavbarContainer, NavLogo, MobileIcon, NavMenu, NavItem, NavLinks, NavBtn, NavBtnLink } from './NavbarElements';\nimport logo from 'images/logo.png';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  // MetaMask Wallet Connection\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const history = useHistory();\n  const [url, setUrl] = useState(window.location.pathname);\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  const [scrollNav, setScrollNav] = useState(false);\n\n  const changeNav = () => {\n    if (window.scrollY >= 80) {\n      setScrollNav(true);\n    } else {\n      setScrollNav(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', changeNav);\n  }, []);\n  useEffect(() => {\n    return history.listen(location => {\n      setUrl(location.pathname); // if go to another page, remove the active class of NavLinks\n      // so the green bottom line will disappear\n\n      if (location.pathname !== \"/\") {\n        const cur = document.querySelector(\"#scrollToChainlink\");\n        cur.classList.remove('active');\n      }\n    });\n  }, [history]);\n\n  const toggleHome = () => {\n    scroll.scrollToTop();\n  };\n\n  const handleClick = path => {\n    if (url !== \"/\") {\n      history.push(path);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      scrollNav: scrollNav,\n      children: /*#__PURE__*/_jsxDEV(NavbarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          to: \"/\",\n          onClick: toggleHome,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MobileIcon, {\n          onClick: toggle,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n          children: [/*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToDapp\",\n              to: \"dapp\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/dapp'),\n              children: \"\\xD0App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToHowItWorks\",\n              to: \"how_it_works\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/howitworks'),\n              children: \"How it works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollTo3sat\",\n              to: \"3sat\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/3sat'),\n              children: \"3-SAT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n            children: /*#__PURE__*/_jsxDEV(NavLinks, {\n              id: \"scrollToChainlink\",\n              to: \"chainlink\",\n              smooth: true,\n              duration: 500,\n              spy: true,\n              exact: \"true\",\n              offset: -80,\n              onClick: () => handleClick('/chainlink'),\n              children: \"Chainlink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n          children: /*#__PURE__*/_jsxDEV(NavBtnLink, {\n            to: \"\",\n            id: \"walletButton\",\n            onClick: connectWalletPressed,\n            children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"AdqCsn0wbKFsSEg3NOwUmORSpE8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Navbar/index.js"],"names":["React","useState","useEffect","useHistory","FaBars","animateScroll","scroll","Nav","NavbarContainer","NavLogo","MobileIcon","NavMenu","NavItem","NavLinks","NavBtn","NavBtnLink","logo","connectWallet","getCurrentWalletConnected","Navbar","toggle","walletAddress","setWallet","status","setStatus","name","setName","description","setDescription","history","url","setUrl","window","location","pathname","address","addWalletListener","connectWalletPressed","walletResponse","ethereum","on","accounts","length","scrollNav","setScrollNav","changeNav","scrollY","addEventListener","listen","cur","document","querySelector","classList","remove","toggleHome","scrollToTop","handleClick","path","push","String","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport {\r\n  Nav,\r\n  NavbarContainer,\r\n  NavLogo,\r\n  MobileIcon,\r\n  NavMenu,\r\n  NavItem,\r\n  NavLinks,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport logo from 'images/logo.png';\r\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\r\n\r\nconst Navbar = ({ toggle }) => {\r\n  // MetaMask Wallet Connection\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n  const [url, setUrl] = useState(window.location.pathname);\r\n\r\n  useEffect(async () => {\r\n    const { address, status } = await getCurrentWalletConnected();\r\n    setWallet(address)\r\n    setStatus(status);\r\n\r\n    addWalletListener();\r\n  }, []);\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  const [scrollNav, setScrollNav] = useState(false)\r\n\r\n  const changeNav = () => {\r\n    if (window.scrollY >= 80) {\r\n      setScrollNav(true)\r\n    } else {\r\n      setScrollNav(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', changeNav)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return history.listen((location) => {\r\n      setUrl(location.pathname);\r\n      // if go to another page, remove the active class of NavLinks\r\n      // so the green bottom line will disappear\r\n      if (location.pathname !== \"/\") {\r\n        const cur = document.querySelector(\"#scrollToChainlink\");\r\n        cur.classList.remove('active');\r\n      }\r\n    })\r\n  }, [history])\r\n\r\n  const toggleHome = () => {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  const handleClick = (path) => {\r\n    if (url !== \"/\") {\r\n      history.push(path);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav scrollNav={scrollNav}>\r\n        <NavbarContainer>\r\n          <NavLogo to='/' onClick={toggleHome}>\r\n            <img src={logo} alt='logo' />\r\n          </NavLogo>\r\n          <MobileIcon onClick={toggle}>\r\n            <FaBars />\r\n          </MobileIcon>\r\n          <NavMenu>\r\n            <NavItem>\r\n              <NavLinks id=\"scrollToDapp\"\r\n                to='dapp'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}\r\n                onClick={() => handleClick('/dapp')}\r\n              >ÐApp</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks id=\"scrollToHowItWorks\"\r\n                to='how_it_works'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}\r\n                onClick={() => handleClick('/howitworks')}\r\n              >How it works</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks id=\"scrollTo3sat\"\r\n                to='3sat'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}\r\n                onClick={() => handleClick('/3sat')}\r\n              >3-SAT</NavLinks>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLinks id=\"scrollToChainlink\"\r\n                to='chainlink'\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact='true'\r\n                offset={-80}\r\n                onClick={() => handleClick('/chainlink')}\r\n              >Chainlink</NavLinks>\r\n            </NavItem>\r\n          </NavMenu>\r\n          <NavBtn>\r\n            <NavBtnLink to=\"\" id=\"walletButton\" onClick={connectWalletPressed}>\r\n              {walletAddress.length > 0 ? (\"Connected: \" +\r\n                String(walletAddress).substring(0, 6) + \"...\" +\r\n                String(walletAddress).substring(38)) : (<span>Connect Wallet</span>)}\r\n            </NavBtnLink>\r\n          </NavBtn>\r\n        </NavbarContainer>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}