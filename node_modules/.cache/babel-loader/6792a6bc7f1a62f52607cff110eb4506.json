{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\w10te\\\\Documents\\\\dapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatorAddress = \"0xc98260Ae9e82cCbB7a0f1a220d6E87Bb2683559f\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [data, setData] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // ------------------     -----------------------\n\n\n  async function async_createInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      const transaction = await contract.createInstance();\n      await transaction.wait();\n    }\n  }\n\n  async function async_getInstance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getInstance();\n        setData(result);\n        console.log('data: ', result);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  } // ------------------     -----------------------\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Researcher information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_createInstance,\n      children: \"Set instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async_getInstance,\n      children: \"Get instance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", data.map(instance => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: instance.chain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lif/WApPZI6pT1W4YSJwxeyij3U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/w10te/Documents/dapp/src/App.js"],"names":["useState","ethers","Generator","generatorAddress","App","data","setData","requestAccount","window","ethereum","request","method","async_createInstance","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","createInstance","wait","async_getInstance","result","connect","getInstance","console","log","err","map","instance","chain"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,oDAAtB,C,CAGA;;;AACA,MAAMC,gBAAgB,GAAG,4CAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC,CAFa,CAIX;;AACA,iBAAeO,cAAf,GAAgC;AAC9B,UAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB,CAAN;AACD,GAPU,CASX;;;AACA,iBAAeC,oBAAf,GAAsC;AACpC,QAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMF,cAAc,EAApB;AACA,YAAMM,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMO,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMC,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,gBAApB,EAAsCD,SAAS,CAACkB,GAAhD,EAAqDJ,MAArD,CAAjB;AACA,YAAMK,WAAW,GAAG,MAAMH,QAAQ,CAACI,cAAT,EAA1B;AACA,YAAMD,WAAW,CAACE,IAAZ,EAAN;AACD;AACF;;AAED,iBAAeC,iBAAf,GAAmC;AACjC,QAAI,OAAOhB,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;AAC1C,YAAMI,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;AACA,YAAMS,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBhB,gBAApB,EAAsCD,SAAS,CAACkB,GAAhD,EAAqDP,QAArD,CAAjB;;AACA,UAAI;AACF,cAAMG,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,cAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,OAAT,CAAiBV,MAAjB,EAAyBW,WAAzB,EAArB;AACArB,QAAAA,OAAO,CAACmB,MAAD,CAAP;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACD,OALD,CAKE,OAAOK,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;AACD;AACF;AACF,GAlCU,CAoCX;;;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAElB,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEY,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,sBAAMnB,IAAI,CAAC0B,GAAL,CAASC,QAAQ,iBAAI;AAAA,kBAAMA,QAAQ,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,cAArB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlDQ7B,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Generator from './artifacts/contracts/Generator.sol/Generator.json'\n\n\n// Update with the contract address logged out to the CLI when it was deployed \nconst generatorAddress = \"0xc98260Ae9e82cCbB7a0f1a220d6E87Bb2683559f\"\n\nfunction App() {\n  // store greeting in local state\n  const [data, setData] = useState()\n\n    // request access to the user's MetaMask account\n    async function requestAccount() {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n    }\n\n    // ------------------     -----------------------\n    async function async_createInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        await requestAccount()\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner()\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n        const transaction = await contract.createInstance()\n        await transaction.wait()\n      }\n    }\n\n    async function async_getInstance() {\n      if (typeof window.ethereum !== 'undefined') {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n        try {\n          const signer = provider.getSigner()\n          const result = await contract.connect(signer).getInstance()\n          setData(result)\n          console.log('data: ', result)\n        } catch (err) {\n          console.log(\"Error: \", err)\n        }\n      }    \n    }\n\n    // ------------------     -----------------------\n\n  return (\n    <div className=\"App\">\n      <h5>Researcher information</h5>\n      <button onClick={async_createInstance}>Set instance</button>\n      <button onClick={async_getInstance}>Get instance</button>\n      <p> { data.map(instance => <div>{instance.chain}</div>) } </p>\n\n \n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}