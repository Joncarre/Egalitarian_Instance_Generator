{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/SideBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { SidebarContainer, Icon, CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink, SideBtnWrap, SidebarRoute } from './SidebarElements';\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  isOpen,\n  toggle\n}) => {\n  _s();\n\n  // MetaMask Wallet Connection\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  useEffect(async () => {\n    const {\n      address,\n      status\n    } = await getCurrentWalletConnected();\n    setWallet(address);\n    setStatus(status);\n    addWalletListener();\n  }, []);\n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      });\n    } else {\n      setStatus( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: `https://metamask.io/download.html`,\n          children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    isOpen: isOpen,\n    onClick: toggle,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      onClick: toggle,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SidebarMenu, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"/dapp\",\n          onClick: toggle,\n          children: \"Ethereum DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"/scalability\",\n          onClick: toggle,\n          children: \"Scalability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"/traceability\",\n          onClick: toggle,\n          children: \"Traceability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarLink, {\n          to: \"/security\",\n          onClick: toggle,\n          children: \"Security\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBtnWrap, {\n        children: /*#__PURE__*/_jsxDEV(SidebarRoute, {\n          id: \"walletButton\",\n          onClick: connectWalletPressed,\n          children: walletAddress.length > 0 ? \"Connected: \" + String(walletAddress).substring(0, 6) + \"...\" + String(walletAddress).substring(38) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"q0p8+3FZYTBUtuRVbPHlOrYpKHk=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/SideBar/index.js"],"names":["React","useState","useEffect","SidebarContainer","Icon","CloseIcon","SidebarWrapper","SidebarMenu","SidebarLink","SideBtnWrap","SidebarRoute","connectWallet","getCurrentWalletConnected","Sidebar","isOpen","toggle","walletAddress","setWallet","status","setStatus","address","addWalletListener","connectWalletPressed","walletResponse","window","ethereum","on","accounts","length","String","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  SidebarContainer,\r\n  Icon,\r\n  CloseIcon,\r\n  SidebarWrapper,\r\n  SidebarMenu,\r\n  SidebarLink,\r\n  SideBtnWrap,\r\n  SidebarRoute\r\n} from './SidebarElements';\r\n\r\n\r\nimport { connectWallet, getCurrentWalletConnected } from '../interact';\r\n\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n  // MetaMask Wallet Connection\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const { address, status } = await getCurrentWalletConnected();\r\n    setWallet(address)\r\n    setStatus(status);\r\n\r\n    addWalletListener();\r\n  }, []);\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n      <Icon onClick={toggle}>\r\n        <CloseIcon>\r\n\r\n        </CloseIcon>\r\n      </Icon>\r\n      <SidebarWrapper>\r\n        <SidebarMenu>\r\n          <SidebarLink to='/dapp' onClick={toggle}>\r\n            Ethereum DApp\r\n          </SidebarLink>\r\n          <SidebarLink to='/scalability' onClick={toggle}>\r\n            Scalability\r\n          </SidebarLink>\r\n          <SidebarLink to='/traceability' onClick={toggle}>\r\n            Traceability\r\n          </SidebarLink>\r\n          <SidebarLink to='/security' onClick={toggle}>\r\n            Security\r\n          </SidebarLink>\r\n        </SidebarMenu>\r\n        <SideBtnWrap>\r\n          <SidebarRoute id=\"walletButton\" onClick={connectWalletPressed}>\r\n            {walletAddress.length > 0 ? (\"Connected: \" +\r\n              String(walletAddress).substring(0, 6) + \"...\" +\r\n              String(walletAddress).substring(38)) : (<span>Connect Wallet</span>)}\r\n          </SidebarRoute>\r\n        </SideBtnWrap>\r\n      </SidebarWrapper>\r\n    </SidebarContainer>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}