{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\UCM\\\\Doctorado\\\\Investigaciones\\\\Generator App\\\\Generator-DApp\\\\src\\\\components\\\\Register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from \"emailjs-com\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, Form, FormButton, FormError, FormInput, FormWrap, FormH1, FormLabel, FormContent } from './RegisterElements';\nimport { sha256 } from '@ethersproject/sha2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$email, _errors$email2, _errors$orcid, _errors$orcid2, _errors$orcid3, _errors$orcid4;\n\n  var hash = sha256();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const sendEmail = (formData, e) => {\n    console.log(e.target.user_pass.value); // Send email\n\n    /*emailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\")\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n      reset();*/\n  };\n\n  function cutHash(elem) {\n    var cut = elem.replace(/[^0-9]/g, '');\n    var result = cut.substring(0, 10);\n    return result;\n  }\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      var secret = 21212121;\n      console.log(\"async_setResearcher: \" + secret, data.name, data.email, data.orcid);\n      const transaction = await contract.setResearcher(secret, data.name, data.email, data.orcid, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(sendEmail),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Register your information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"name\", {\n                required: true,\n                maxLength: 20,\n                pattern: /^[A-Za-z]+$/i\n              }),\n              type: \"text\",\n              name: \"user_name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 71\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"First name cannot exceed 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"email\", {\n                required: true,\n                pattern: /\\S+@\\S+\\.\\S+/\n              }),\n              type: \"email\",\n              name: \"user_email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Entered value does not match email format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"ORCID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"orcid\", {\n                required: true,\n                minLength: 16,\n                maxLength: 16,\n                pattern: /^[0-9\\b]+$/\n              }),\n              type: \"number\",\n              name: \"user_pass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid = errors.orcid) === null || _errors$orcid === void 0 ? void 0 : _errors$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 72\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid2 = errors.orcid) === null || _errors$orcid2 === void 0 ? void 0 : _errors$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 73\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid3 = errors.orcid) === null || _errors$orcid3 === void 0 ? void 0 : _errors$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 73\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid4 = errors.orcid) === null || _errors$orcid4 === void 0 ? void 0 : _errors$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Numerical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"Cq4nsBcfFXGKMJK/L8AH0edgYnU=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Jonathan/Documents/UCM/Doctorado/Investigaciones/Generator App/Generator-DApp/src/components/Register/index.js"],"names":["React","useForm","emailjs","generatorAddress","requestAccount","ethers","Generator","Container","Form","FormButton","FormError","FormInput","FormWrap","FormH1","FormLabel","FormContent","sha256","Register","hash","register","handleSubmit","reset","formState","errors","sendEmail","formData","e","console","log","target","user_pass","value","cutHash","elem","cut","replace","result","substring","async_setResearcher","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","secret","name","email","orcid","transaction","setResearcher","gasLimit","wait","required","maxLength","pattern","type","minLength"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport { \r\n    Container, \r\n    Form, \r\n    FormButton,\r\n    FormError,\r\n    FormInput, \r\n    FormWrap,\r\n    FormH1,\r\n    FormLabel,\r\n    FormContent\r\n } from './RegisterElements';\r\nimport { sha256 } from '@ethersproject/sha2';\r\n\r\nconst Register = () => {\r\n    var hash = sha256()\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n    \r\n    const sendEmail = (formData, e) => {\r\n      console.log(e.target.user_pass.value);\r\n      // Send email\r\n      /*emailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\")\r\n        .then((result) => {\r\n            console.log(result.text);\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n        reset();*/\r\n    };\r\n  \r\n    function cutHash(elem){\r\n      var cut = elem.replace(/[^0-9]/g, '');\r\n      var result = cut.substring(0,10);\r\n      return result;\r\n    }\r\n\r\n    async function async_setResearcher(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n          await requestAccount()\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner()\r\n          const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n\r\n          var secret = 21212121;\r\n          console.log(\"async_setResearcher: \" + secret, data.name, data.email, data.orcid);\r\n          const transaction = await contract.setResearcher(\r\n            secret,\r\n            data.name, \r\n            data.email,\r\n            data.orcid,\r\n            {gasLimit: 12000000})\r\n          await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <Container>\r\n                <FormWrap>\r\n                    <FormContent>\r\n                        <Form onSubmit={handleSubmit(sendEmail)}>\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"name\", {\r\n                                required: true,\r\n                                maxLength: 20,\r\n                                pattern: /^[A-Za-z]+$/i\r\n                            })} type=\"text\" name=\"user_name\"/>\r\n                                {errors?.name?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.name?.type === \"maxLength\" && <FormError>First name cannot exceed 20 characters</FormError>}\r\n                                {errors?.name?.type === \"pattern\" && <FormError>Alphabetical characters only</FormError>}\r\n                            <FormLabel>Email</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"email\", {\r\n                                required: true,\r\n                                pattern: /\\S+@\\S+\\.\\S+/\r\n                            })} type=\"email\" name=\"user_email\"/>\r\n                                {errors?.email?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.email?.type === \"pattern\" && <FormError>Entered value does not match email format</FormError>}\r\n                            <FormLabel>ORCID</FormLabel>\r\n                            <FormInput {...register(\"orcid\", { \r\n                                required: true,\r\n                                minLength: 16, \r\n                                maxLength: 16,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"user_pass\"/>\r\n                                {errors?.orcid?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                                {errors?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError> }\r\n                                {errors?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError> }\r\n                            <FormButton type=\"submit\"/>\r\n                        </Form>\r\n                    </FormContent>\r\n                </FormWrap>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}