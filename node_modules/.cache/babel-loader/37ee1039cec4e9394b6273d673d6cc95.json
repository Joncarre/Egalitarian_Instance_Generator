{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst config_env_1 = require(\"../internal/core/config/config-env\");\n\nconst errors_1 = require(\"../internal/core/errors\");\n\nconst errors_list_1 = require(\"../internal/core/errors-list\");\n\nconst scripts_runner_1 = require(\"../internal/util/scripts-runner\");\n\nconst task_names_1 = require(\"./task-names\");\n\nconst log = debug_1.default(\"hardhat:core:tasks:run\");\nconfig_env_1.task(task_names_1.TASK_RUN, \"Runs a user-defined script after compiling the project\").addPositionalParam(\"script\", \"A js file to be run within hardhat's environment\").addFlag(\"noCompile\", \"Don't compile before running this task\").setAction(async ({\n  script,\n  noCompile\n}, {\n  run,\n  hardhatArguments\n}) => {\n  if (!(await fs_extra_1.default.pathExists(script))) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_FILE_NOT_FOUND, {\n      script\n    });\n  }\n\n  if (!noCompile) {\n    await run(task_names_1.TASK_COMPILE, {\n      quiet: true\n    });\n  }\n\n  log(`Running script ${script} in a subprocess so we can wait for it to complete`);\n\n  try {\n    process.exitCode = await scripts_runner_1.runScriptWithHardhat(hardhatArguments, script);\n  } catch (error) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_SCRIPT_ERROR, {\n      script,\n      error: error.message\n    }, error);\n  }\n});","map":{"version":3,"sources":["../src/builtin-tasks/run.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,MAAA,YAAA,GAAA,OAAA,CAAA,oCAAA,CAAA;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAEA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,MAAM,GAAG,GAAG,OAAA,CAAA,OAAA,CAAM,wBAAN,CAAZ;AAEA,YAAA,CAAA,IAAA,CAAK,YAAA,CAAA,QAAL,EAAe,wDAAf,EACG,kBADH,CAEI,QAFJ,EAGI,kDAHJ,EAKG,OALH,CAKW,WALX,EAKwB,wCALxB,EAMG,SANH,CAOI,OACE;AAAE,EAAA,MAAF;AAAU,EAAA;AAAV,CADF,EAEE;AAAE,EAAA,GAAF;AAAO,EAAA;AAAP,CAFF,KAGI;AACF,MAAI,EAAE,MAAM,UAAA,CAAA,OAAA,CAAQ,UAAR,CAAmB,MAAnB,CAAR,CAAJ,EAAyC;AACvC,UAAM,IAAI,QAAA,CAAA,YAAJ,CAAiB,aAAA,CAAA,MAAA,CAAO,aAAP,CAAqB,kBAAtC,EAA0D;AAC9D,MAAA;AAD8D,KAA1D,CAAN;AAGD;;AAED,MAAI,CAAC,SAAL,EAAgB;AACd,UAAM,GAAG,CAAC,YAAA,CAAA,YAAD,EAAe;AAAE,MAAA,KAAK,EAAE;AAAT,KAAf,CAAT;AACD;;AAED,EAAA,GAAG,CACD,kBAAkB,MAAM,oDADvB,CAAH;;AAIA,MAAI;AACF,IAAA,OAAO,CAAC,QAAR,GAAmB,MAAM,gBAAA,CAAA,oBAAA,CAAqB,gBAArB,EAAuC,MAAvC,CAAzB;AACD,GAFD,CAEE,OAAO,KAAP,EAAc;AACd,UAAM,IAAI,QAAA,CAAA,YAAJ,CACJ,aAAA,CAAA,MAAA,CAAO,aAAP,CAAqB,gBADjB,EAEJ;AACE,MAAA,MADF;AAEE,MAAA,KAAK,EAAE,KAAK,CAAC;AAFf,KAFI,EAMJ,KANI,CAAN;AAQD;AACF,CArCL","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(require(\"debug\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst config_env_1 = require(\"../internal/core/config/config-env\");\nconst errors_1 = require(\"../internal/core/errors\");\nconst errors_list_1 = require(\"../internal/core/errors-list\");\nconst scripts_runner_1 = require(\"../internal/util/scripts-runner\");\nconst task_names_1 = require(\"./task-names\");\nconst log = debug_1.default(\"hardhat:core:tasks:run\");\nconfig_env_1.task(task_names_1.TASK_RUN, \"Runs a user-defined script after compiling the project\")\n    .addPositionalParam(\"script\", \"A js file to be run within hardhat's environment\")\n    .addFlag(\"noCompile\", \"Don't compile before running this task\")\n    .setAction(async ({ script, noCompile }, { run, hardhatArguments }) => {\n    if (!(await fs_extra_1.default.pathExists(script))) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_FILE_NOT_FOUND, {\n            script,\n        });\n    }\n    if (!noCompile) {\n        await run(task_names_1.TASK_COMPILE, { quiet: true });\n    }\n    log(`Running script ${script} in a subprocess so we can wait for it to complete`);\n    try {\n        process.exitCode = await scripts_runner_1.runScriptWithHardhat(hardhatArguments, script);\n    }\n    catch (error) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.BUILTIN_TASKS.RUN_SCRIPT_ERROR, {\n            script,\n            error: error.message,\n        }, error);\n    }\n});\n//# sourceMappingURL=run.js.map"]},"metadata":{},"sourceType":"script"}