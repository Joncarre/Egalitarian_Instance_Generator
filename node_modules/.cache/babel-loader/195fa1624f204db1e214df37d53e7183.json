{"ast":null,"code":"import { __assign } from \"tslib\";\nexport { Severity, Status } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, makeMain, Scope, startTransaction, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope } from '@sentry/core';\nexport { NodeBackend } from './backend';\nexport { NodeClient } from './client';\nexport { defaultIntegrations, init, lastEventId, flush, close } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getMainCarrier } from '@sentry/hub';\nimport * as domain from 'domain';\nimport * as Handlers from './handlers';\nimport * as NodeIntegrations from './integrations';\nimport * as Transports from './transports';\n\nvar INTEGRATIONS = __assign(__assign({}, CoreIntegrations), NodeIntegrations);\n\nexport { INTEGRATIONS as Integrations, Transports, Handlers }; // We need to patch domain on the global __SENTRY__ object to make it work for node in cross-platform packages like\n// @sentry/hub. If we don't do this, browser bundlers will have troubles resolving `require('domain')`.\n\nvar carrier = getMainCarrier();\n\nif (carrier.__SENTRY__) {\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  carrier.__SENTRY__.extensions.domain = carrier.__SENTRY__.extensions.domain || domain;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SASE,QATF,EAYE,MAZF,QAeO,eAfP;AAiBA,SACE,uBADF,EAEE,aAFF,EAGE,gBAHF,EAIE,YAJF,EAKE,cALF,EAME,cANF,EAOE,iBAPF,EAQE,aARF,EASE,GATF,EAUE,QAVF,EAWE,KAXF,EAYE,gBAZF,EAaE,UAbF,EAcE,QAdF,EAeE,SAfF,EAgBE,MAhBF,EAiBE,OAjBF,EAkBE,OAlBF,EAmBE,SAnBF,QAoBO,cApBP;AAsBA,SAAS,WAAT,QAAyC,WAAzC;AACA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,mBAAT,EAA8B,IAA9B,EAAoC,WAApC,EAAiD,KAAjD,EAAwD,KAAxD,QAAqE,OAArE;AACA,SAAS,QAAT,EAAmB,WAAnB,QAAsC,WAAtC;AAEA,SAAS,YAAY,IAAI,gBAAzB,QAAiD,cAAjD;AACA,SAAS,cAAT,QAA+B,aAA/B;AACA,OAAO,KAAK,MAAZ,MAAwB,QAAxB;AAEA,OAAO,KAAK,QAAZ,MAA0B,YAA1B;AACA,OAAO,KAAK,gBAAZ,MAAkC,gBAAlC;AACA,OAAO,KAAK,UAAZ,MAA4B,cAA5B;;AAEA,IAAM,YAAY,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACb,gBADa,CAAA,EAEb,gBAFa,CAAlB;;AAKA,SAAS,YAAY,IAAI,YAAzB,EAAuC,UAAvC,EAAmD,QAAnD,G,CAEA;AACA;;AACA,IAAM,OAAO,GAAG,cAAc,EAA9B;;AACA,IAAI,OAAO,CAAC,UAAZ,EAAwB;AACtB,EAAA,OAAO,CAAC,UAAR,CAAmB,UAAnB,GAAgC,OAAO,CAAC,UAAR,CAAmB,UAAnB,IAAiC,EAAjE;AACA,EAAA,OAAO,CAAC,UAAR,CAAmB,UAAnB,CAA8B,MAA9B,GAAuC,OAAO,CAAC,UAAR,CAAmB,UAAnB,CAA8B,MAA9B,IAAwC,MAA/E;AACD","sourcesContent":["export {\n  Breadcrumb,\n  BreadcrumbHint,\n  Request,\n  SdkInfo,\n  Event,\n  EventHint,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  makeMain,\n  Scope,\n  startTransaction,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  withScope,\n} from '@sentry/core';\n\nexport { NodeBackend, NodeOptions } from './backend';\nexport { NodeClient } from './client';\nexport { defaultIntegrations, init, lastEventId, flush, close } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getMainCarrier } from '@sentry/hub';\nimport * as domain from 'domain';\n\nimport * as Handlers from './handlers';\nimport * as NodeIntegrations from './integrations';\nimport * as Transports from './transports';\n\nconst INTEGRATIONS = {\n  ...CoreIntegrations,\n  ...NodeIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports, Handlers };\n\n// We need to patch domain on the global __SENTRY__ object to make it work for node in cross-platform packages like\n// @sentry/hub. If we don't do this, browser bundlers will have troubles resolving `require('domain')`.\nconst carrier = getMainCarrier();\nif (carrier.__SENTRY__) {\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  carrier.__SENTRY__.extensions.domain = carrier.__SENTRY__.extensions.domain || domain;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}