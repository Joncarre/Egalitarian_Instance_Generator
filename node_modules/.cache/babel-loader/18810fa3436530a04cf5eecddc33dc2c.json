{"ast":null,"code":"var _jsxFileName = \"/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Register/index.js\",\n    _s = $RefreshSig$();\n\nimport { React } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as emailjs from \"emailjs-com\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport { Container, FormButton } from './RegisterElements';\nimport { FormContent, FormLabel, FormInput, FormError, FormWrap, Form, FormH1 } from '../FormElements';\nimport { Nav, NavbarContainer, NavLogo } from '../Navbar/NavbarElements';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  var _errors$name, _errors$name2, _errors$name3, _errors$email, _errors$email2, _errors$orcid, _errors$orcid2, _errors$orcid3, _errors$orcid4;\n\n  var sha256 = require('js-sha256');\n\n  var secret, name, email, orcid;\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const sendEmail = (formData, e) => {\n    secret = sha256(e.target.orcid.value);\n    name = e.target.name.value;\n    email = e.target.email.value;\n    orcid = e.target.orcid.value;\n    e.target.orcid.value = cutHash(secret);\n    secret = e.target.orcid.value; // Send email\n\n    emailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\").then(result => {\n      console.log(result.text);\n      history.push(\"/signin\");\n    }, error => {\n      console.log(error.text);\n    });\n    async_setResearcher();\n    reset();\n  };\n\n  function cutHash(elem) {\n    var cut = elem.replace(/[^0-9]/g, '');\n    var result = cut.substring(0, 10);\n    return result;\n  }\n\n  async function async_setResearcher(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      console.log(\"async_setResearcher: \" + secret, name, email, orcid);\n      const transaction = await contract.setResearcher(secret, name, email, orcid, {\n        gasLimit: 12000000\n      });\n      await transaction.wait();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(sendEmail),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Register your information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"name\", {\n                required: true,\n                maxLength: 20,\n                pattern: /^[A-Za-z]+$/i\n              }),\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 67\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"First name cannot exceed 20 characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 68\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$name3 = errors.name) === null || _errors$name3 === void 0 ? void 0 : _errors$name3.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Alphabetical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 66\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"email\", {\n                required: true,\n                pattern: /\\S+@\\S+\\.\\S+/\n              }),\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 68\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Entered value does not match email format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 67\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"ORCID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, { ...register(\"orcid\", {\n                required: true,\n                minLength: 16,\n                maxLength: 16,\n                pattern: /^[0-9\\b]+$/\n              }),\n              type: \"number\",\n              name: \"orcid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid = errors.orcid) === null || _errors$orcid === void 0 ? void 0 : _errors$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 68\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid2 = errors.orcid) === null || _errors$orcid2 === void 0 ? void 0 : _errors$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 69\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid3 = errors.orcid) === null || _errors$orcid3 === void 0 ? void 0 : _errors$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"It must be a number of 16 digits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 69\n            }, this), (errors === null || errors === void 0 ? void 0 : (_errors$orcid4 = errors.orcid) === null || _errors$orcid4 === void 0 ? void 0 : _errors$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n              children: \"Numerical characters only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 67\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"v/yJZwJs3hHC1z32q1dRbQrhU/o=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/tao-sen/generator-dapp/Generator-DApp/src/components/Register/index.js"],"names":["React","useForm","emailjs","generatorAddress","requestAccount","ethers","Generator","Container","FormButton","FormContent","FormLabel","FormInput","FormError","FormWrap","Form","FormH1","Nav","NavbarContainer","NavLogo","useHistory","Register","sha256","require","secret","name","email","orcid","history","register","handleSubmit","reset","formState","errors","sendEmail","formData","e","target","value","cutHash","sendForm","then","result","console","log","text","push","error","async_setResearcher","elem","cut","replace","substring","data","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","setResearcher","gasLimit","wait","required","maxLength","pattern","type","minLength"],"mappings":"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","sourcesContent":["import { React } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as emailjs from \"emailjs-com\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport {\r\n    Container,\r\n    FormButton,\r\n\r\n} from './RegisterElements';\r\n\r\nimport {\r\n    FormContent,\r\n    FormLabel,\r\n    FormInput,\r\n    FormError,\r\n    FormWrap,\r\n    Form,\r\n    FormH1,\r\n} from '../FormElements'\r\n\r\nimport {\r\n    Nav,\r\n    NavbarContainer,\r\n    NavLogo\r\n} from '../Navbar/NavbarElements'\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n    var sha256 = require('js-sha256');\r\n    var secret, name, email, orcid;\r\n    let history = useHistory();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm();\r\n\r\n    const sendEmail = (formData, e) => {\r\n        secret = sha256(e.target.orcid.value);\r\n        name = e.target.name.value;\r\n        email = e.target.email.value;\r\n        orcid = e.target.orcid.value;\r\n        e.target.orcid.value = cutHash(secret);\r\n        secret = e.target.orcid.value;\r\n        // Send email\r\n        emailjs.sendForm(\"dapp_gmail\", \"dapp_mail_template\", e.target, \"user_8Njq6OjGUsVPoTG1GpG30\")\r\n            .then((result) => {\r\n                console.log(result.text);\r\n                history.push(\"/signin\");\r\n\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n        async_setResearcher();\r\n        reset();\r\n    };\r\n\r\n    function cutHash(elem) {\r\n        var cut = elem.replace(/[^0-9]/g, '');\r\n        var result = cut.substring(0, 10);\r\n        return result;\r\n    }\r\n\r\n    async function async_setResearcher(data) {\r\n        if (typeof window.ethereum !== 'undefined') {\r\n            await requestAccount()\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner()\r\n            const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n            console.log(\"async_setResearcher: \" + secret, name, email, orcid);\r\n            const transaction = await contract.setResearcher(\r\n                secret,\r\n                name,\r\n                email,\r\n                orcid,\r\n                { gasLimit: 12000000 })\r\n            await transaction.wait()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <FormWrap>\r\n                    <FormContent>\r\n                        <Form onSubmit={handleSubmit(sendEmail)}>\r\n                            <FormH1>Register your information</FormH1>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"name\", {\r\n                                    required: true,\r\n                                    maxLength: 20,\r\n                                    pattern: /^[A-Za-z]+$/i\r\n                                })} type=\"text\" name=\"name\" />\r\n                            {errors?.name?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.name?.type === \"maxLength\" && <FormError>First name cannot exceed 20 characters</FormError>}\r\n                            {errors?.name?.type === \"pattern\" && <FormError>Alphabetical characters only</FormError>}\r\n                            <FormLabel>Email</FormLabel>\r\n                            <FormInput\r\n                                {...register(\"email\", {\r\n                                    required: true,\r\n                                    pattern: /\\S+@\\S+\\.\\S+/\r\n                                })} type=\"email\" name=\"email\" />\r\n                            {errors?.email?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.email?.type === \"pattern\" && <FormError>Entered value does not match email format</FormError>}\r\n                            <FormLabel>ORCID</FormLabel>\r\n                            <FormInput {...register(\"orcid\", {\r\n                                required: true,\r\n                                minLength: 16,\r\n                                maxLength: 16,\r\n                                pattern: /^[0-9\\b]+$/\r\n                            })} type=\"number\" name=\"orcid\" />\r\n                            {errors?.orcid?.type === \"required\" && <FormError>This field is required</FormError>}\r\n                            {errors?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n                            {errors?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n                            {errors?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n                            <FormButton type=\"submit\" />\r\n                        </Form>\r\n                    </FormContent>\r\n                </FormWrap>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}