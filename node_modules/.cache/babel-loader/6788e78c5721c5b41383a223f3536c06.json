{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRecommendedGitIgnore = exports.getUserConfigPath = exports.isCwdInsideProject = void 0;\n\nconst find_up_1 = __importDefault(require(\"find-up\"));\n\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst packageInfo_1 = require(\"../util/packageInfo\");\n\nconst errors_1 = require(\"./errors\");\n\nconst errors_list_1 = require(\"./errors-list\");\n\nconst JS_CONFIG_FILENAME = \"hardhat.config.js\";\nconst TS_CONFIG_FILENAME = \"hardhat.config.ts\";\n\nfunction isCwdInsideProject() {\n  return find_up_1.default.sync(TS_CONFIG_FILENAME) !== null || find_up_1.default.sync(JS_CONFIG_FILENAME) !== null;\n}\n\nexports.isCwdInsideProject = isCwdInsideProject;\n\nfunction getUserConfigPath() {\n  const tsConfigPath = find_up_1.default.sync(TS_CONFIG_FILENAME);\n\n  if (tsConfigPath !== null) {\n    return tsConfigPath;\n  }\n\n  const pathToConfigFile = find_up_1.default.sync(JS_CONFIG_FILENAME);\n\n  if (pathToConfigFile === null) {\n    throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.NOT_INSIDE_PROJECT);\n  }\n\n  return pathToConfigFile;\n}\n\nexports.getUserConfigPath = getUserConfigPath;\n\nasync function getRecommendedGitIgnore() {\n  const packageRoot = packageInfo_1.getPackageRoot();\n  const gitIgnorePath = path_1.default.join(packageRoot, \"recommended-gitignore.txt\");\n  return fs_extra_1.default.readFile(gitIgnorePath, \"utf-8\");\n}\n\nexports.getRecommendedGitIgnore = getRecommendedGitIgnore;","map":{"version":3,"sources":["../../src/internal/core/project-structure.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;AACA,MAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,MAAA,aAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,MAAM,kBAAkB,GAAG,mBAA3B;AACA,MAAM,kBAAkB,GAAG,mBAA3B;;AAEA,SAAgB,kBAAhB,GAAkC;AAChC,SACE,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,kBAAZ,MAAoC,IAApC,IACA,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,kBAAZ,MAAoC,IAFtC;AAID;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOA,SAAgB,iBAAhB,GAAiC;AAC/B,QAAM,YAAY,GAAG,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,kBAAZ,CAArB;;AACA,MAAI,YAAY,KAAK,IAArB,EAA2B;AACzB,WAAO,YAAP;AACD;;AAED,QAAM,gBAAgB,GAAG,SAAA,CAAA,OAAA,CAAO,IAAP,CAAY,kBAAZ,CAAzB;;AACA,MAAI,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,UAAM,IAAI,QAAA,CAAA,YAAJ,CAAiB,aAAA,CAAA,MAAA,CAAO,OAAP,CAAe,kBAAhC,CAAN;AACD;;AAED,SAAO,gBAAP;AACD;;AAZD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAcO,eAAe,uBAAf,GAAsC;AAC3C,QAAM,WAAW,GAAG,aAAA,CAAA,cAAA,EAApB;AACA,QAAM,aAAa,GAAG,MAAA,CAAA,OAAA,CAAK,IAAL,CAAU,WAAV,EAAuB,2BAAvB,CAAtB;AAEA,SAAO,UAAA,CAAA,OAAA,CAAQ,QAAR,CAAiB,aAAjB,EAAgC,OAAhC,CAAP;AACD;;AALD,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRecommendedGitIgnore = exports.getUserConfigPath = exports.isCwdInsideProject = void 0;\nconst find_up_1 = __importDefault(require(\"find-up\"));\nconst fs_extra_1 = __importDefault(require(\"fs-extra\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst packageInfo_1 = require(\"../util/packageInfo\");\nconst errors_1 = require(\"./errors\");\nconst errors_list_1 = require(\"./errors-list\");\nconst JS_CONFIG_FILENAME = \"hardhat.config.js\";\nconst TS_CONFIG_FILENAME = \"hardhat.config.ts\";\nfunction isCwdInsideProject() {\n    return (find_up_1.default.sync(TS_CONFIG_FILENAME) !== null ||\n        find_up_1.default.sync(JS_CONFIG_FILENAME) !== null);\n}\nexports.isCwdInsideProject = isCwdInsideProject;\nfunction getUserConfigPath() {\n    const tsConfigPath = find_up_1.default.sync(TS_CONFIG_FILENAME);\n    if (tsConfigPath !== null) {\n        return tsConfigPath;\n    }\n    const pathToConfigFile = find_up_1.default.sync(JS_CONFIG_FILENAME);\n    if (pathToConfigFile === null) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.NOT_INSIDE_PROJECT);\n    }\n    return pathToConfigFile;\n}\nexports.getUserConfigPath = getUserConfigPath;\nasync function getRecommendedGitIgnore() {\n    const packageRoot = packageInfo_1.getPackageRoot();\n    const gitIgnorePath = path_1.default.join(packageRoot, \"recommended-gitignore.txt\");\n    return fs_extra_1.default.readFile(gitIgnorePath, \"utf-8\");\n}\nexports.getRecommendedGitIgnore = getRecommendedGitIgnore;\n//# sourceMappingURL=project-structure.js.map"]},"metadata":{},"sourceType":"script"}