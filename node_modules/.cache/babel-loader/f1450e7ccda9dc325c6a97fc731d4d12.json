{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolidityError = exports.encodeSolidityStackTrace = exports.wrapWithSolidityErrorsCorrection = exports.getCurrentStack = void 0;\n\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nconst panic_errors_1 = require(\"./panic-errors\");\n\nconst solidity_stack_trace_1 = require(\"./solidity-stack-trace\");\n\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\n\nfunction getCurrentStack() {\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = (e, s) => s;\n\n  const error = new Error();\n  const stack = error.stack;\n  Error.prepareStackTrace = previousPrepareStackTrace;\n  return stack;\n}\n\nexports.getCurrentStack = getCurrentStack;\n\nasync function wrapWithSolidityErrorsCorrection(f, stackFramesToRemove) {\n  const stackTraceAtCall = getCurrentStack().slice(stackFramesToRemove);\n\n  try {\n    return await f();\n  } catch (error) {\n    if (error.stackTrace === undefined) {\n      // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n      throw error;\n    } // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n\n\n    throw encodeSolidityStackTrace(error.message, error.stackTrace, stackTraceAtCall);\n  }\n}\n\nexports.wrapWithSolidityErrorsCorrection = wrapWithSolidityErrorsCorrection;\n\nfunction encodeSolidityStackTrace(fallbackMessage, stackTrace, previousStack) {\n  if (Error.prepareStackTrace === undefined) {\n    // Node 12 doesn't have a default Error.prepareStackTrace\n    require(\"source-map-support/register\");\n  }\n\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = (error, stack) => {\n    if (previousStack !== undefined) {\n      stack = previousStack;\n    } else {\n      // We remove Hardhat Network related stack traces\n      stack.splice(0, 3);\n    }\n\n    for (const entry of stackTrace) {\n      const callsite = encodeStackTraceEntry(entry);\n\n      if (callsite === undefined) {\n        continue;\n      }\n\n      stack.unshift(callsite);\n    }\n\n    return previousPrepareStackTrace(error, stack);\n  };\n\n  const msg = getMessageFromLastStackTraceEntry(stackTrace[stackTrace.length - 1]);\n  const solidityError = new SolidityError(msg !== undefined ? msg : fallbackMessage, stackTrace); // This hack is here because prepare stack is lazy\n\n  solidityError.stack = solidityError.stack;\n  Error.prepareStackTrace = previousPrepareStackTrace;\n  return solidityError;\n}\n\nexports.encodeSolidityStackTrace = encodeSolidityStackTrace;\n\nfunction encodeStackTraceEntry(stackTraceEntry) {\n  switch (stackTraceEntry.type) {\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n      return sourceReferenceToSolidityCallsite(Object.assign(Object.assign({}, stackTraceEntry.sourceReference), {\n        function: solidity_stack_trace_1.UNRECOGNIZED_FUNCTION_NAME\n      }));\n\n    case solidity_stack_trace_1.StackTraceEntryType.CALLSTACK_ENTRY:\n    case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n      return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY:\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY:\n      return new SolidityCallSite(ethereumjs_util_1.bufferToHex(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n      return new SolidityCallSite(undefined, `<PrecompileContract ${stackTraceEntry.precompile}>`, solidity_stack_trace_1.PRECOMPILE_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n      return new SolidityCallSite(ethereumjs_util_1.bufferToHex(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY:\n      return new SolidityCallSite(stackTraceEntry.sourceReference.file.sourceName, stackTraceEntry.sourceReference.contract, `internal@${stackTraceEntry.pc}`, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n      if (stackTraceEntry.sourceReference !== undefined) {\n        return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n      }\n\n      return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n\n    case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n      if (stackTraceEntry.sourceReference === undefined) {\n        return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n      }\n\n      return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n  }\n}\n\nfunction sourceReferenceToSolidityCallsite(sourceReference) {\n  return new SolidityCallSite(sourceReference.file.sourceName, sourceReference.contract, sourceReference.function !== undefined ? sourceReference.function : solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, sourceReference.line);\n}\n\nfunction getMessageFromLastStackTraceEntry(stackTraceEntry) {\n  switch (stackTraceEntry.type) {\n    case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n      return `Transaction reverted: call to precompile ${stackTraceEntry.precompile} failed`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n      return `Transaction reverted: non-payable function was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n      return `Transaction reverted: function was called with incorrect parameters`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n      return `Transaction reverted: fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n      return `Transaction reverted: there's no receive function, fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n      return `Transaction reverted: function selector was not recognized and there's no fallback function`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n      return `Transaction reverted: function selector was not recognized and there's no fallback nor receive function`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n      return `Transaction reverted: function returned an unexpected amount of data`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n      return `Transaction reverted: function call to a non-contract account`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n      return `Transaction reverted: function call failed to execute`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n      return `Transaction reverted: library was called directly`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n    case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n      if (stackTraceEntry.message.isErrorReturnData()) {\n        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n      }\n\n      return \"Transaction reverted without a reason string\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n      if (stackTraceEntry.message.isErrorReturnData()) {\n        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n      }\n\n      if (stackTraceEntry.isInvalidOpcodeError) {\n        return \"VM Exception while processing transaction: invalid opcode\";\n      }\n\n      return \"Transaction reverted without a reason string\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n      const panicMessage = panic_errors_1.panicErrorCodeToMessage(stackTraceEntry.errorCode);\n      return `VM Exception while processing transaction: ${panicMessage}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n      return `VM Exception while processing transaction: ${stackTraceEntry.message}`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n      // TODO: What if there was returnData?\n      return `Transaction reverted and Hardhat couldn't infer the reason. Please report this to help us improve Hardhat.`;\n\n    case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n      return \"Transaction reverted without a reason string and without a valid sourcemap provided by the compiler. Some line numbers may be off. We strongly recommend upgrading solc and always using revert reasons.\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n      return \"Transaction reverted: trying to deploy a contract whose code is too large\";\n\n    case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n      return \"Transaction reverted: contract call run out of gas and made the transaction revert\";\n  }\n} // Note: This error class MUST NOT extend ProviderError, as libraries\n//   use the code property to detect if they are dealing with a JSON-RPC error,\n//   and take control of errors.\n\n\nclass SolidityError extends Error {\n  constructor(message, stackTrace) {\n    super(message);\n    this.stackTrace = stackTrace;\n  }\n\n  [inspect]() {\n    return this.inspect();\n  }\n\n  inspect() {\n    return this.stack !== undefined ? this.stack : \"Internal error when encoding SolidityError\";\n  }\n\n}\n\nexports.SolidityError = SolidityError;\n\nclass SolidityCallSite {\n  constructor(_sourceName, _contract, _functionName, _line) {\n    this._sourceName = _sourceName;\n    this._contract = _contract;\n    this._functionName = _functionName;\n    this._line = _line;\n  }\n\n  getColumnNumber() {\n    return null;\n  }\n\n  getEvalOrigin() {\n    return undefined;\n  }\n\n  getFileName() {\n    var _a;\n\n    return (_a = this._sourceName) !== null && _a !== void 0 ? _a : \"unknown\";\n  }\n\n  getFunction() {\n    return undefined;\n  }\n\n  getFunctionName() {\n    var _a; // if it's a top-level function, we print its name\n\n\n    if (this._contract === undefined) {\n      return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n    }\n\n    return null;\n  }\n\n  getLineNumber() {\n    return this._line !== undefined ? this._line : null;\n  }\n\n  getMethodName() {\n    var _a;\n\n    if (this._contract !== undefined) {\n      return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n    }\n\n    return null;\n  }\n\n  getPosition() {\n    return 0;\n  }\n\n  getPromiseIndex() {\n    return 0;\n  }\n\n  getScriptNameOrSourceURL() {\n    return null;\n  }\n\n  getThis() {\n    return undefined;\n  }\n\n  getTypeName() {\n    var _a;\n\n    return (_a = this._contract) !== null && _a !== void 0 ? _a : null;\n  }\n\n  isAsync() {\n    return false;\n  }\n\n  isConstructor() {\n    return false;\n  }\n\n  isEval() {\n    return false;\n  }\n\n  isNative() {\n    return false;\n  }\n\n  isPromiseAll() {\n    return false;\n  }\n\n  isToplevel() {\n    return false;\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolidityError = exports.encodeSolidityStackTrace = exports.wrapWithSolidityErrorsCorrection = exports.getCurrentStack = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst panic_errors_1 = require(\"./panic-errors\");\nconst solidity_stack_trace_1 = require(\"./solidity-stack-trace\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nfunction getCurrentStack() {\n    const previousPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = (e, s) => s;\n    const error = new Error();\n    const stack = error.stack;\n    Error.prepareStackTrace = previousPrepareStackTrace;\n    return stack;\n}\nexports.getCurrentStack = getCurrentStack;\nasync function wrapWithSolidityErrorsCorrection(f, stackFramesToRemove) {\n    const stackTraceAtCall = getCurrentStack().slice(stackFramesToRemove);\n    try {\n        return await f();\n    }\n    catch (error) {\n        if (error.stackTrace === undefined) {\n            // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n            throw error;\n        }\n        // eslint-disable-next-line @nomiclabs/hardhat-internal-rules/only-hardhat-error\n        throw encodeSolidityStackTrace(error.message, error.stackTrace, stackTraceAtCall);\n    }\n}\nexports.wrapWithSolidityErrorsCorrection = wrapWithSolidityErrorsCorrection;\nfunction encodeSolidityStackTrace(fallbackMessage, stackTrace, previousStack) {\n    if (Error.prepareStackTrace === undefined) {\n        // Node 12 doesn't have a default Error.prepareStackTrace\n        require(\"source-map-support/register\");\n    }\n    const previousPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = (error, stack) => {\n        if (previousStack !== undefined) {\n            stack = previousStack;\n        }\n        else {\n            // We remove Hardhat Network related stack traces\n            stack.splice(0, 3);\n        }\n        for (const entry of stackTrace) {\n            const callsite = encodeStackTraceEntry(entry);\n            if (callsite === undefined) {\n                continue;\n            }\n            stack.unshift(callsite);\n        }\n        return previousPrepareStackTrace(error, stack);\n    };\n    const msg = getMessageFromLastStackTraceEntry(stackTrace[stackTrace.length - 1]);\n    const solidityError = new SolidityError(msg !== undefined ? msg : fallbackMessage, stackTrace);\n    // This hack is here because prepare stack is lazy\n    solidityError.stack = solidityError.stack;\n    Error.prepareStackTrace = previousPrepareStackTrace;\n    return solidityError;\n}\nexports.encodeSolidityStackTrace = encodeSolidityStackTrace;\nfunction encodeStackTraceEntry(stackTraceEntry) {\n    switch (stackTraceEntry.type) {\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n            return sourceReferenceToSolidityCallsite(Object.assign(Object.assign({}, stackTraceEntry.sourceReference), { function: solidity_stack_trace_1.UNRECOGNIZED_FUNCTION_NAME }));\n        case solidity_stack_trace_1.StackTraceEntryType.CALLSTACK_ENTRY:\n        case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n            return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY:\n            return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY:\n            return new SolidityCallSite(ethereumjs_util_1.bufferToHex(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n            return new SolidityCallSite(undefined, `<PrecompileContract ${stackTraceEntry.precompile}>`, solidity_stack_trace_1.PRECOMPILE_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n            return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n            return new SolidityCallSite(ethereumjs_util_1.bufferToHex(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY:\n            return new SolidityCallSite(stackTraceEntry.sourceReference.file.sourceName, stackTraceEntry.sourceReference.contract, `internal@${stackTraceEntry.pc}`, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n            if (stackTraceEntry.sourceReference !== undefined) {\n                return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n            }\n            return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n        case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n            if (stackTraceEntry.sourceReference === undefined) {\n                return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);\n            }\n            return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);\n    }\n}\nfunction sourceReferenceToSolidityCallsite(sourceReference) {\n    return new SolidityCallSite(sourceReference.file.sourceName, sourceReference.contract, sourceReference.function !== undefined\n        ? sourceReference.function\n        : solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, sourceReference.line);\n}\nfunction getMessageFromLastStackTraceEntry(stackTraceEntry) {\n    switch (stackTraceEntry.type) {\n        case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:\n            return `Transaction reverted: call to precompile ${stackTraceEntry.precompile} failed`;\n        case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:\n            return `Transaction reverted: non-payable function was called with value ${stackTraceEntry.value.toString(10)}`;\n        case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:\n            return `Transaction reverted: function was called with incorrect parameters`;\n        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:\n            return `Transaction reverted: fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:\n            return `Transaction reverted: there's no receive function, fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:\n            return `Transaction reverted: function selector was not recognized and there's no fallback function`;\n        case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:\n            return `Transaction reverted: function selector was not recognized and there's no fallback nor receive function`;\n        case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:\n            return `Transaction reverted: function returned an unexpected amount of data`;\n        case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:\n            return `Transaction reverted: function call to a non-contract account`;\n        case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:\n            return `Transaction reverted: function call failed to execute`;\n        case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:\n            return `Transaction reverted: library was called directly`;\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:\n        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:\n            if (stackTraceEntry.message.isErrorReturnData()) {\n                return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n            }\n            return \"Transaction reverted without a reason string\";\n        case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:\n            if (stackTraceEntry.message.isErrorReturnData()) {\n                return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;\n            }\n            if (stackTraceEntry.isInvalidOpcodeError) {\n                return \"VM Exception while processing transaction: invalid opcode\";\n            }\n            return \"Transaction reverted without a reason string\";\n        case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:\n            const panicMessage = panic_errors_1.panicErrorCodeToMessage(stackTraceEntry.errorCode);\n            return `VM Exception while processing transaction: ${panicMessage}`;\n        case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:\n            return `VM Exception while processing transaction: ${stackTraceEntry.message}`;\n        case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:\n            // TODO: What if there was returnData?\n            return `Transaction reverted and Hardhat couldn't infer the reason. Please report this to help us improve Hardhat.`;\n        case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:\n            return \"Transaction reverted without a reason string and without a valid sourcemap provided by the compiler. Some line numbers may be off. We strongly recommend upgrading solc and always using revert reasons.\";\n        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:\n            return \"Transaction reverted: trying to deploy a contract whose code is too large\";\n        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:\n            return \"Transaction reverted: contract call run out of gas and made the transaction revert\";\n    }\n}\n// Note: This error class MUST NOT extend ProviderError, as libraries\n//   use the code property to detect if they are dealing with a JSON-RPC error,\n//   and take control of errors.\nclass SolidityError extends Error {\n    constructor(message, stackTrace) {\n        super(message);\n        this.stackTrace = stackTrace;\n    }\n    [inspect]() {\n        return this.inspect();\n    }\n    inspect() {\n        return this.stack !== undefined\n            ? this.stack\n            : \"Internal error when encoding SolidityError\";\n    }\n}\nexports.SolidityError = SolidityError;\nclass SolidityCallSite {\n    constructor(_sourceName, _contract, _functionName, _line) {\n        this._sourceName = _sourceName;\n        this._contract = _contract;\n        this._functionName = _functionName;\n        this._line = _line;\n    }\n    getColumnNumber() {\n        return null;\n    }\n    getEvalOrigin() {\n        return undefined;\n    }\n    getFileName() {\n        var _a;\n        return (_a = this._sourceName) !== null && _a !== void 0 ? _a : \"unknown\";\n    }\n    getFunction() {\n        return undefined;\n    }\n    getFunctionName() {\n        var _a;\n        // if it's a top-level function, we print its name\n        if (this._contract === undefined) {\n            return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n        }\n        return null;\n    }\n    getLineNumber() {\n        return this._line !== undefined ? this._line : null;\n    }\n    getMethodName() {\n        var _a;\n        if (this._contract !== undefined) {\n            return (_a = this._functionName) !== null && _a !== void 0 ? _a : null;\n        }\n        return null;\n    }\n    getPosition() {\n        return 0;\n    }\n    getPromiseIndex() {\n        return 0;\n    }\n    getScriptNameOrSourceURL() {\n        return null;\n    }\n    getThis() {\n        return undefined;\n    }\n    getTypeName() {\n        var _a;\n        return (_a = this._contract) !== null && _a !== void 0 ? _a : null;\n    }\n    isAsync() {\n        return false;\n    }\n    isConstructor() {\n        return false;\n    }\n    isEval() {\n        return false;\n    }\n    isNative() {\n        return false;\n    }\n    isPromiseAll() {\n        return false;\n    }\n    isToplevel() {\n        return false;\n    }\n}\n//# sourceMappingURL=solidity-errors.js.map"]},"metadata":{},"sourceType":"script"}